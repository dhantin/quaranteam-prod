{"version":3,"sources":["controllers/webController.js","controllers/graphqlClient.js","controllers/userController.js","components/header.js","components/modals/loginModal.js","components/layout.js","components/register.js","components/homeTimeline.js","controllers/projectController.js","controllers/profileController.js","pages/home.js","components/project/projectCard.js","components/loading.js","pages/projects.js","components/project/joinProjectButton.js","components/modals/confirmationModal.js","components/confirmationButton.js","components/project/projectHeader.js","controllers/requestController.js","components/modals/inviteMemberModal.js","controllers/tagController.js","components/TagSelect.js","components/project/editableProject.js","components/project/readOnlyProject.js","components/project/projectOverview.js","components/project/manageProjectMembers.js","pages/project.js","components/profile/profileCard.js","pages/people.js","components/profile/profileHeader.js","components/profile/editableProfile.js","components/profile/readOnlyProfile.js","components/profile/profileOverview.js","components/profile/profileProjects.js","components/profile/profileInbox.js","components/modals/inviteToProjectModal.js","pages/profile.js","pages/projects/create.js","index.js","images/default-profile.png"],"names":["getQueryParams","hash","window","location","URLSearchParams","split","updateQueryParams","params","baseURL","href","paramsEmpty","toString","history","replaceState","navigate","route","pushState","reload","cookies","Cookies","httpLink","HttpLink","uri","authLink","ApolloLink","operation","forward","jwt","get","setContext","headers","client","ApolloClient","link","concat","cache","InMemoryCache","defaultOptions","query","fetchPolicy","REGISTER_MUTATION","gql","LOGIN_MUTATION","email","username","password","a","mutate","mutation","variables","res","data","register","jwtToken","set","path","message","login","handleGitHubLogin","WebController","delete","isLoggedIn","jwtDecode","logOut","remove","getToken","GITHUB_AUTH_URL","API_PREFIX","Header","props","bind","UserController","showLoginModal","this","className","Navbar","variant","NavbarBrand","Nav","NavLink","Dropdown","drop","Toggle","size","Menu","Item","onClick","Button","React","Component","withContext","withRouter","LoginModal","state","errorMessage","onChange","field","event","value","target","setState","onLogin","show","onClose","Modal","onHide","centered","Col","closeButton","Title","Body","Alert","Form","Group","Control","type","placeholder","Footer","block","style","color","LayoutContext","createContext","Layout","isAlertVisible","isLoginModalVisible","loginIntentHref","alertType","alertText","followLoginIntent","showAlert","renderAlert","text","dismissible","children","context","Provider","pageClassName","consumer","Consumer","ERROR_MESSAGES","Register","error","isRegisterDisabled","trim","disabled","to","TimelineTab","TIMELINE_ELEMENT_PROPS","contentStyle","background","contentArrowStyle","borderRight","iconStyle","OWNER_STEPS","title","icon","MEMBER_STEPS","HomeTimeline","tab","changeTab","steps","ButtonGroup","active","map","step","i","key","GET_PROJ_COUNT_QUERY","GET_PROJECT_QUERY","GET_PROJECTS_QUERY","GET_FILTERED_PROJECTS_QUERY","GET_OWNED_PROJECTS_QUERY","CREATE_PROJECT_MUTATION","UPDATE_PROJ_MUTATION","allProjects","totalCount","project","id","projectById","pendingMembers","nodes","p","requestId","edges","requestStatus","status","requestType","node","search","createProject","profileId","profileById","ownedProjects","getProjects","getFilteredProjects","getOwnedProjects","getProject","updateProject","getProjCount","GET_PROF_COUNT_QUERY","GET_PROFILES_QUERY","GET_FILTERED_PROFILES_QUERY","PROFILE_QUERY","UPDATE_PROFILE_MUTATION","allProfiles","profile","profileByUsername","pendingProjects","getProfile","updateProfile","getProfiles","getFilteredProfiles","getProfCount","Home","projectCount","profileCount","ProjectController","ProfileController","console","log","Helmet","Container","Row","xs","span","md","ProjectCard","Card","bg","textDecoration","name","Text","description","members","interests","length","interest","Badge","pill","languages","language","Loading","Spinner","animation","Projects","projects","finishedLoading","retrieveProjects","debounce","updateSearch","renderHeader","renderProjects","renderCreateButton","FormControl","sm","fluid","JoinProjectButton","sub","isOwner","ownerId","isMember","some","m","selfJoinable","ConfirmationModal","onConfirm","ConfirmationButton","showConfirmationModal","confirm","ProjectHeader","onTabChange","fill","activeKey","ProjectTab","OVERVIEW","Link","eventKey","MANAGE","isEditable","isEditValid","onJoin","onLeave","onInvite","onToggleEditable","onSave","isOwnProject","owner","renderNav","ACCEPT_MUTATION","DECLINE_MUTATION","CREATE_MEMBERSHIP_MUTATION","DELETE_MEMBERSHIP_MUTATION","CREATE_INVITE_MUTATION","CREATE_REQUEST_MUTATION","projectId","accept","decline","requestToJoinProject","joinProject","leaveProject","inviteToProject","InviteToProjectModal","profileOptions","selectedProfile","profiles","filter","convertToOption","label","isConfirmDisabled","options","SKILLS","INTERESTS","GET_SKILLS_QUERY","GET_INTERESTS_QUERY","allTags","t","getSkills","getInterests","formTheme","theme","colors","primary25","primary","backgroundColor","TagSelect","TagController","tags","convertToOptions","items","item","isMulti","STATUS_OPTIONS","EditableProject","onProjectFieldEdit","maxLength","as","rows","directions","ReadOnlyProject","membersCount","source","member","lang","ProjectOverview","editableProject","ManageProjectMembers","RequestController","ListGroup","kick","renderMembers","renderPendingMembers","Project","showInviteModal","toggleEditable","saveProject","inviteMember","match","Number","setTabFromURL","nextTab","prevState","border","ProfileCard","Image","src","pictureUrl","DEFAULT_PROFILE","roundedCircle","bio","People","retrieveProfiles","renderProfiles","ProfileHeader","isOwnProfile","ProfileTab","PROJECTS","INBOX","lg","offset","onSaveProfile","showEditOptions","renderPicture","renderHeaderRight","EditableProfile","onProfileFieldEdit","ReadOnlyProfile","ProfileOverview","editableProfile","ProfileProjects","actionText","getPersonalizedText","PROJECT_STATUS","ProfileInbox","requestedProjects","invitedProjects","renderRequests","renderInvites","projectOptions","selectedProject","Profile","saveProfile","createInvite","CreateProject","isCreateDisabled","App","exact","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7b74e131.chunk.js","sourcesContent":["function getQueryParams() {\n  const hash = window.location.hash;\n  return new URLSearchParams(hash.split('?')[1]);\n}\n\nfunction updateQueryParams(params) {\n  const baseURL = window.location.href.split('?')[0];\n  const paramsEmpty = params.toString() === '';\n\n  window.history.replaceState(\n    {},\n    '',\n    baseURL + (paramsEmpty ? '' : '?') + params.toString()\n  );\n}\n\nfunction navigate(route) {\n  window.history.pushState({}, '', route);\n  window.location.reload();\n}\n\nexport default {\n  getQueryParams,\n  updateQueryParams,\n  navigate\n};","import {\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n  ApolloLink\n} from 'apollo-boost';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nconst httpLink = new HttpLink({\n  uri: process.env.NODE_ENV === 'development'\n    ? 'http://localhost:3000/graphql'\n    : 'https://quaranteamtech.herokuapp.com/graphql'\n});\n\nconst authLink = new ApolloLink((operation, forward) => {\n  const jwt = cookies.get('jwt');\n\n  if (jwt) {\n    operation.setContext({\n      headers: {\n        'Authorization': `Bearer ${jwt}`\n      }\n    });\n  }\n  \n  return forward(operation);\n});\n\nexport const client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n  defaultOptions: {\n    query: {\n      fetchPolicy: 'no-cache'\n    }\n  }\n});","import gql from 'graphql-tag';\nimport Cookies from 'universal-cookie';\nimport jwtDecode from 'jwt-decode';\nimport WebController from '../controllers/webController';\nimport { client } from './graphqlClient';\n\nconst API_PREFIX = process.env.NODE_ENV === 'development'\n  ? 'http://localhost:3000/'\n  : 'https://quaranteamtech.herokuapp.com/';\nconst GITHUB_AUTH_ENDPOINT = 'auth/github';\n\nconst cookies = new Cookies();\n\nconst REGISTER_MUTATION = gql`\n  mutation ($username: String!, $email: String!, $password:String!) {\n    register(\n      input: {\n        username: $username\n        email: $email\n        password: $password\n      }\n    ) { jwtToken }\n  }`;\n\nconst LOGIN_MUTATION = gql`\n  mutation ($email: String!, $password:String!) {\n    login(\n      input: {\n        email: $email\n        password: $password\n      }\n    ) { jwtToken }\n  }`;\n\nasync function register(email, username, password) {\n  try {\n    const res = await client.mutate({\n      mutation: REGISTER_MUTATION,\n      variables: { email, username, password }\n    });\n\n    const jwt = res.data.register.jwtToken;\n    cookies.set('jwt', jwt, { path: '/' });\n\n    return { jwt };\n  } catch (error) {\n    throw {\n      message: 'An account already exists with this email or username.'\n    };\n  }\n}\n\nasync function login(email, password) {\n  try {\n    const res = await client.mutate({\n      mutation: LOGIN_MUTATION,\n      variables: { email, password }\n    });\n\n    const jwt = res.data.login.jwtToken;\n    if (jwt) {\n      cookies.set('jwt', jwt, { path: '/' });\n      return { jwt };\n    } else {\n      throw { message: 'Invalid username or password.' };\n    }\n  } catch (error) {\n    throw error;\n  }\n}\n\nfunction handleGitHubLogin() {\n  const params = WebController.getQueryParams();\n  const jwt = params.get('jwt');\n  params.delete('jwt');\n  WebController.updateQueryParams(params);\n\n  if (jwt) {\n    cookies.set('jwt', jwt, { path: '/' });\n  }\n}\n\nfunction isLoggedIn() {\n  const jwt = cookies.get('jwt');\n  if (!jwt) {\n    return false;\n  }\n  try {\n    jwtDecode(jwt);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction getToken() {\n  const jwt = cookies.get('jwt');\n  if (!jwt) {\n    return null;\n  }\n  try {\n    return jwtDecode(jwt);\n  } catch {\n    return null;\n  }\n}\n\nfunction logOut() {\n  cookies.remove('jwt', { path: '/' });\n}\n\nexport default {\n  register,\n  login,\n  handleGitHubLogin,\n  isLoggedIn,\n  logOut,\n  getToken,\n  GITHUB_AUTH_URL: API_PREFIX + GITHUB_AUTH_ENDPOINT\n};","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavLink,\n  Button,\n  Dropdown\n} from 'react-bootstrap';\nimport { FaUser } from 'react-icons/fa';\nimport { withContext } from '../components/layout';\nimport UserController from \"../controllers/userController\";\nimport '../styles/header.scss';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.logOut = this.logOut.bind(this);\n  }\n\n  logOut() {\n    UserController.logOut();\n    window.history.pushState({}, '', '/');\n    window.location.reload();\n  }\n\n  render() {\n    const { showLoginModal } = this.props;\n    const username = UserController.isLoggedIn()\n      ? UserController.getToken().username\n      : null;\n\n    return (\n      <header className=\"header\">\n        <div>\n          <Navbar variant=\"dark\">\n            <NavbarBrand href=\"/\"><span>🧬</span> Quaranteam</NavbarBrand>\n            <Nav className=\"ml-auto\">\n              <NavLink href=\"/#/projects\">Projects</NavLink>\n              <NavLink href=\"/#/people\">People</NavLink>\n\n              {UserController.isLoggedIn()\n                ? (\n                  <Dropdown drop=\"left\">\n                    <Dropdown.Toggle variant=\"outline-light\" size=\"sm\" className=\"user-dropdown\">\n                      <FaUser />\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href={`/#/profile/${username}`}>\n                        My Profile\n                      </Dropdown.Item>\n                      <Dropdown.Item href={`/#/profile/${username}?tab=projects`}>\n                        My Projects\n                      </Dropdown.Item>\n                      <Dropdown.Item href={`/#/profile/${username}?tab=inbox`}>\n                        My Inbox\n                      </Dropdown.Item>\n                      <Dropdown.Item href={`/#/projects/create`}>\n                        Create Project\n                      </Dropdown.Item>\n                      <Dropdown.Item onClick={this.logOut}>Logout</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                ) : (\n                  <Button\n                    className=\"login-btn\"\n                    variant=\"light\"\n                    onClick={() => showLoginModal()}\n                  >\n                    Login\n                  </Button>\n                )\n              }\n            </Nav>\n          </Navbar>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default withContext(withRouter(Header));","import React from \"react\";\nimport { Button, Col } from 'react-bootstrap';\nimport Alert from 'react-bootstrap/Alert'\nimport Form from 'react-bootstrap/Form';\nimport { FaGithub } from 'react-icons/fa';\nimport Modal from 'react-bootstrap/Modal';\nimport UserController from '../../controllers/userController';\nimport '../../styles/auth.scss';\n\nexport default class LoginModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errorMessage: null\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.login = this.login.bind(this);\n  }\n\n  onChange(field, event) {\n    const value = event.target.value;\n    this.setState({ [field]: value });\n  }\n\n  async login() {\n    const { onLogin } = this.props;\n    const { email, password } = this.state;\n\n    try {\n      await UserController.login(email, password);\n      onLogin();\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n    }\n  }\n\n  render() {\n    const { show, onClose } = this.props;\n    const { errorMessage } = this.state\n\n    return (\n      <Modal\n        show={show}\n        className=\"login\"\n        onHide={onClose}\n        size=\"md\"\n        centered\n      >\n        <Col>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              <span>👩‍🔬</span> Login\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"show-grid\">\n            {errorMessage && <Alert variant=\"danger\">{errorMessage}</Alert>}\n            <Form>\n              <Form.Group>\n                <Form.Control type=\"email\" placeholder=\"Email\" onChange={(event) => this.onChange('email', event)} />\n              </Form.Group>\n              <Form.Group>\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={(event) => this.onChange('password', event)} />\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.login} variant=\"primary\" block>Login</Button>\n            <h5>Or...</h5>\n            <Button href={UserController.GITHUB_AUTH_URL} variant=\"success\" block>\n              <span><FaGithub className=\"icon\" size=\"1.8em\" /> Login with GitHub</span>\n            </Button>\n          </Modal.Footer>\n          <hr />\n          <h6>\n            Don't have an account?\n            &nbsp;\n            <a href=\"/\" style={{ color: '#333333' }}>Register here!</a>\n          </h6>\n        </Col>\n        <br />\n      </Modal>\n    );\n  }\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Header from './header';\nimport LoginModal from './modals/loginModal';\nimport Alert from 'react-bootstrap/Alert';\nimport '../styles/layout.scss';\n\nexport const LayoutContext = React.createContext();\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isAlertVisible: false,\n      isLoginModalVisible: false,\n      loginIntentHref: null,\n      alertType: null,\n      alertText: null\n    };\n\n    this.followLoginIntent = this.followLoginIntent.bind(this);\n    this.showLoginModal = this.showLoginModal.bind(this);\n    this.showAlert = this.showAlert.bind(this);\n    this.renderAlert = this.renderAlert.bind(this);\n  }\n\n  followLoginIntent() {\n    this.setState({ isLoginModalVisible: false });\n    const { loginIntentHref } = this.state;\n    if (loginIntentHref) {\n      window.history.pushState({}, '', loginIntentHref);\n      window.location.reload();\n    }\n  }\n\n  showLoginModal(loginIntentHref) {\n    this.setState({\n      isLoginModalVisible: true,\n      loginIntentHref\n    });\n  }\n\n  showAlert(text, type) {\n    this.setState({\n      isAlertVisible: true,\n      alertType: type,\n      alertText: text\n    });\n  }\n\n  renderAlert() {\n    const { isAlertVisible, alertType, alertText } = this.state;\n\n    if (!isAlertVisible) {\n      return null;\n    }\n\n    return (\n      <Alert\n        className=\"layout-alert\"\n        variant={alertType}\n        dismissible={true}\n        onClose={() => this.setState({ isAlertVisible: false })}\n      >\n        {alertText}\n      </Alert>\n    );\n  }\n\n  render() {\n    const { className, children } = this.props;\n    const { isLoginModalVisible } = this.state;\n\n    const context = {\n      showAlert: this.showAlert,\n      showLoginModal: this.showLoginModal\n    };\n\n    return (\n      <LayoutContext.Provider value={context}>\n        <Header />\n        <LoginModal\n          show={isLoginModalVisible}\n          onClose={() => this.setState({ isLoginModalVisible: false })}\n          onLogin={this.followLoginIntent}\n        />\n        <div className=\"container-fluid\">\n          {this.renderAlert()}\n          <main className={className}>{children}</main>\n        </div>\n      </LayoutContext.Provider>\n    );\n  }\n}\n\nexport function withContext(Component, pageClassName) {\n  return function connectedComponent(props) {\n    const consumer = (\n      <LayoutContext.Consumer>\n        {context =>\n          <Component\n            {...props}\n            showAlert={context.showAlert}\n            showLoginModal={context.showLoginModal}\n          />\n        }\n      </LayoutContext.Consumer>\n    );\n\n    if (pageClassName) {\n      return (\n        <Layout className={pageClassName}>\n          {consumer}\n        </Layout>\n      );\n    }\n    \n    return consumer;\n  }\n}\n\nexport default withRouter(Layout);","import React from \"react\";\nimport { withRouter, Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Alert from 'react-bootstrap/Alert'\nimport Form from 'react-bootstrap/Form';\nimport { FaGithub } from 'react-icons/fa';\nimport UserController from '../controllers/userController';\nimport WebController from '../controllers/webController';\nimport '../styles/auth.scss';\nimport { withContext } from './layout';\n\nconst ERROR_MESSAGES = {\n  'duplicate': 'An account already exists with this email or username.'\n};\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      errorMessage: null\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.register = this.register.bind(this);\n  }\n\n  componentDidMount() {\n    const params = WebController.getQueryParams();\n    const error = params.get('error');\n\n    if (error) {\n      this.setState({\n        errorMessage: ERROR_MESSAGES[error] || 'An unknown error occurred.'\n      });\n    }\n  }\n\n  onChange(field, event) {\n    const value = event.target.value;\n    this.setState({ [field]: value });\n  }\n\n  async register() {\n    const { email, username, password } = this.state;\n\n    try {\n      await UserController.register(email, username, password);\n      WebController.navigate(`/#/profile/${username}`);\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n    }\n  }\n\n  render() {\n    const { showLoginModal } = this.props;\n    const {\n      email,\n      username,\n      password,\n      errorMessage\n    } = this.state;\n\n    const isRegisterDisabled = email.trim() === '' ||\n      username.trim() === '' || password.trim() === '';\n\n    return (\n        <div className=\"register\">\n          <h1>\n            Create an Account\n          </h1>\n          {errorMessage && <Alert variant=\"danger\">{errorMessage}</Alert>}\n          <Form>\n            <Form.Group>\n              <Form.Control type=\"email\" placeholder=\"Email\" onChange={(event) => this.onChange('email', event)}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" placeholder=\"Username\" onChange={(event) => this.onChange('username', event)}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"password\" placeholder=\"Password\" onChange={(event) => this.onChange('password', event)}/>\n            </Form.Group>\n            <Button onClick={this.register} variant=\"primary\" block disabled={isRegisterDisabled}>\n              Register\n            </Button>\n            <h6>Or...</h6>\n            <Button href={UserController.GITHUB_AUTH_URL} variant=\"success\" block>\n              <span><FaGithub className=\"icon\" size=\"1.8em\"/> Register with GitHub</span>\n            </Button>\n            <h6>\n              Already have an account?\n              <b>\n                <Link to=\"#\" onClick={() => showLoginModal()}> Login</Link>\n              </b>\n            </h6>\n          </Form>\n        </div>\n    );\n  }\n}\n\nexport default withContext(withRouter(Register));","import React from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport { FaUser, FaLightbulb, FaPlus, FaUserFriends, FaLaptopCode, FaSearch } from 'react-icons/fa';\nimport 'react-vertical-timeline-component/style.min.css';\nimport '../styles/homeTimeline.scss';\n\nconst TimelineTab = {\n  OWNER: 'owner',\n  MEMBER: 'member'\n};\n\nconst TIMELINE_ELEMENT_PROPS = {\n  contentStyle: { background: '#6c757d', color: '#fff' },\n  contentArrowStyle: { borderRight: '7px solid #6c757d' },\n  iconStyle: { background: '#6c757d', color: '#fff' }\n};\n\nconst OWNER_STEPS = [\n  {\n    title: 'Register',\n    text: 'Create a profile on Quaranteam, including a bio, your skills, and your interest areas.',\n    icon: <FaUser />\n  },\n  {\n    title: 'Ideate',\n    text: 'Come up with an exciting idea for a side project you\\'d like to work on.',\n    icon: <FaLightbulb />\n  },\n  {\n    title: 'Create a Project',\n    text: 'Create a project listing on Quaranteam. You will be able to specify the project\\'s'\n      + ' description, relevant interest areas, and skills required. You can'\n      + ' also configure whether members can join directly, or whether they must be invited by you.',\n    icon: <FaPlus />\n  },\n  {\n    title: 'Find Members',\n    text: 'Users can request to join your project themselves, or you can invite them to your'\n      + ' project yourself. There are many talented users on Quaranteam!',\n    icon: <FaUserFriends />\n  },\n  {\n    title: 'Develop!',\n    text: 'Now that the project has a team, development can begin. As the owner, you can coordinate'\n      + ' with teammates as to how to collaborate. Good luck!',\n    icon: <FaLaptopCode />\n  }\n];\n\nconst MEMBER_STEPS = [\n  {\n    title: 'Register',\n    text: 'Create a profile on Quaranteam, including a bio, your skills, and your interest areas.',\n    icon: <FaUser />\n  },\n  {\n    title: 'Find a Project',\n    text: 'Quaranteam hosts numerous exciting projects. Search through the listings and find'\n      + ' one that matches your skills and interest areas.',\n    icon: <FaSearch />\n  },\n  {\n    title: 'Join a Project',\n    text: 'Once you\\'ve found an exciting project, the next step is to join. Some projects can be'\n      + ' joined immediately; for other, you will need to request to join.',\n    icon: <FaUserFriends />\n  },\n  {\n    title: 'Develop!',\n    text: 'Now that you\\'ve joined a project, you can begin developing. The project owner will provide'\n      + ' guidelines on how to collaborate. Good luck!',\n    icon: <FaLaptopCode />\n  }\n];\n\nexport default class HomeTimeline extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tab: TimelineTab.OWNER\n    };\n\n    this.changeTab = this.changeTab.bind(this);\n  }\n\n  changeTab(tab) {\n    this.setState({ tab });\n  }\n\n  render() {\n    const { tab } = this.state;\n    const steps = tab === TimelineTab.OWNER ? OWNER_STEPS : MEMBER_STEPS;\n\n    return (\n      <div className=\"home-timeline\">\n        <h1 className=\"timeline-header\"><span>🤔</span> How does it work?</h1>\n        <ButtonGroup className=\"tab-changer\">\n          <Button\n            onClick={() => this.changeTab(TimelineTab.OWNER)}\n            active={tab === TimelineTab.OWNER}\n            variant=\"secondary\"\n          >\n            I have a project idea\n          </Button>\n          <Button\n            onClick={() => this.changeTab(TimelineTab.MEMBER)}\n            active={tab === TimelineTab.MEMBER}\n            variant=\"secondary\"\n          >\n            I want to join a project\n          </Button>\n        </ButtonGroup>\n        <VerticalTimeline>\n          {steps.map((step, i) => (\n            <VerticalTimelineElement \n              {...TIMELINE_ELEMENT_PROPS}\n              icon={step.icon}\n              key={i}\n            >\n              <h3>{step.title}</h3>\n              <p className=\"element-text\">\n                {step.text}\n              </p>\n            </VerticalTimelineElement>\n          ))}\n        </VerticalTimeline>\n      </div>\n    );\n  }\n}","import gql from 'graphql-tag';\nimport { client } from './graphqlClient';\n\nconst GET_PROJ_COUNT_QUERY = gql`\n  query {\n    allProjects {\n      totalCount\n    }\n  }\n`;\n\nconst GET_PROJECT_QUERY = gql`\n  query ($id: Int!) {\n    projectById(id: $id) {\n      description, directions\n      name, languages\n      selfJoinable, status, type\n      id, interests, ownerId\n      owner { id username }\n      members {\n        totalCount\n        nodes { id username }\n      }\n      pendingMembers {\n        nodes { id username }\n        edges { id type status }\n      }\n    }\n  }\n`;\n\nconst GET_PROJECTS_QUERY = gql`\n  query {\n    allProjects(\n      condition: { type: \"public\" }\n    ) {\n      edges {\n        node {\n          id, name, description\n          languages, interests, status\n          selfJoinable, type\n          members { totalCount }\n        }\n      }\n    }\n  }\n`;\n\nconst GET_FILTERED_PROJECTS_QUERY = gql`\n  query ($search: String!) {\n    allProjects(\n      filter: {\n        or: [\n          { name: { includesInsensitive: $search } }\n          { description: { includesInsensitive: $search } }\n          { interestsText: { includesInsensitive: $search } }\n          { languagesText: { includesInsensitive: $search } }\n        ]\n      },\n      condition: { type: \"public\" }\n    ) {\n      edges {\n        node {\n          id, name, description\n          languages, interests, status\n          selfJoinable, type\n          members { totalCount }\n        }\n      }\n    }\n  }\n`;\n\nconst GET_OWNED_PROJECTS_QUERY = gql`\n  query ($profileId: Int!) {\n    profileById(id: $profileId) {\n      ownedProjects {\n        nodes { id name }\n      }\n    }\n  }\n`;\n\nconst CREATE_PROJECT_MUTATION = gql` \n  mutation (\n    $ownerId: Int!\n    $name: String!\n    $description: String!\n    $directions: String!\n    $languages: [String]!\n    $interests: [String]!\n    $selfJoinable: Boolean!\n    $status: String!\n    $type: String!\n  ) {\n    createProject(\n      input: {\n        project: {\n          ownerId: $ownerId\n          name: $name\n          description: $description\n          directions: $directions\n          languages: $languages\n          interests: $interests\n          selfJoinable: $selfJoinable\n          status: $status\n          type: $type\n        }\n      }\n    ) {\n      clientMutationId\n      project {\n        id\n      }\n    }\n  }`;\n\nconst UPDATE_PROJ_MUTATION = gql`\n  mutation(\n    $id: Int!\n    $name: String!\n    $description: String!\n    $directions: String!\n    $languages: [String]!\n    $interests: [String]!\n    $selfJoinable: Boolean!\n    $status: String!\n    $type: String!\n  ) {\n    updateProjectById(\n      input: {\n        id: $id\n        projectPatch: {\n          name: $name\n          description: $description\n          directions: $directions\n          languages: $languages\n          interests: $interests\n          selfJoinable: $selfJoinable\n          status: $status\n          type: $type\n        }\n      }\n    ) {\n      clientMutationId\n    }\n  }\n`;\n\nasync function getProjCount() {\n  try {\n    const res = await client.query({\n      query: GET_PROJ_COUNT_QUERY\n    });\n    return res.data.allProjects.totalCount;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function updateProject(project) {\n  try {\n    await client.mutate({\n      mutation: UPDATE_PROJ_MUTATION,\n      variables: project\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getProject(id) {\n  try {\n    const res = await client.query({\n      query: GET_PROJECT_QUERY,\n      variables: { id }\n    });\n    const project = res.data.projectById;\n\n    // Including request type/status for each pending member\n    project.pendingMembers.nodes =\n      project.pendingMembers.nodes.map((p, i) => ({\n        ...p,\n        requestId: project.pendingMembers.edges[i].id,\n        requestStatus: project.pendingMembers.edges[i].status,\n        requestType: project.pendingMembers.edges[i].type\n      }));\n    \n    return project;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getProjects() {\n  try {\n    const res = await client.query({\n      query: GET_PROJECTS_QUERY\n    });\n\n    return res.data.allProjects.edges.map(p => p.node);\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getFilteredProjects(search) {\n  try {\n    const res = await client.query({\n      query: GET_FILTERED_PROJECTS_QUERY,\n      variables: { search }\n    });\n\n    return res.data.allProjects.edges.map(p => p.node);\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function createProject(project) {\n  try {\n    const res = await client.mutate({\n      mutation: CREATE_PROJECT_MUTATION,\n      variables: project\n    });\n    return res.data.createProject.project.id;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getOwnedProjects(profileId) {\n  try {\n    const res = await client.query({\n      query: GET_OWNED_PROJECTS_QUERY,\n      variables: { profileId }\n    });\n\n    return res.data.profileById.ownedProjects.nodes;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default {\n  getProjects,\n  getFilteredProjects,\n  getOwnedProjects,\n  getProject,\n  createProject,\n  updateProject,\n  getProjCount\n};\n","import gql from 'graphql-tag';\nimport { client } from './graphqlClient';\n\nconst GET_PROF_COUNT_QUERY = gql`\n  query {\n    allProfiles {\n      totalCount\n    }\n  }\n`;\n\nconst GET_PROFILES_QUERY = gql`\n  query {\n    allProfiles {\n      edges {\n        node {\n          username\n          id\n          bio\n          interests\n          languages\n          pictureUrl\n        }\n      }\n    }\n  }\n`;\n\nconst GET_FILTERED_PROFILES_QUERY = gql`\n  query ($search: String!) {\n    allProfiles(filter: {\n      or: [\n        { username: { includesInsensitive: $search } }\n        { bio: { includesInsensitive: $search } }\n        { interestsText: { includesInsensitive: $search } }\n        { languagesText: { includesInsensitive: $search } }\n      ]\n    }) {\n      edges {\n        node {\n          username\n          id\n          bio\n          interests\n          languages\n          pictureUrl\n        }\n      }\n    }\n  }\n`;\n\nconst PROFILE_QUERY = gql`\n  query ($username: String!) {\n    profileByUsername(username: $username) {\n      id, username pictureUrl, \n      bio, interests, languages, tz,\n      ownedProjects { nodes { id, name } }\n      projects { nodes { id, name } }\n      pendingProjects {\n        nodes { id, name }\n        edges { id, status, type }\n      }\n    }\n  }`;\n\nconst UPDATE_PROFILE_MUTATION = gql`\n  mutation ($username: String!, $bio: String, $interests: [String]!, $languages: [String]!) {\n    updateProfileByUsername(\n      input: {\n        username: $username\n        profilePatch: {\n          bio: $bio\n          interests: $interests\n          languages: $languages\n        }\n      }\n    ) { clientMutationId }\n  }`;\n\nasync function getProfCount() {\n  try {\n    const res = await client.query({\n      query: GET_PROF_COUNT_QUERY\n    });\n\n    return res.data.allProfiles.totalCount;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getProfile(username) {\n  try {\n    const res = await client.query({\n      query: PROFILE_QUERY,\n      variables: { username }\n    });\n\n    const profile = res.data.profileByUsername;\n\n    // Including request type/status in each pending project\n    profile.pendingProjects.nodes = \n      profile.pendingProjects.nodes.map((p, i) => ({\n      ...p,\n      requestId: profile.pendingProjects.edges[i].id,\n      requestStatus: profile.pendingProjects.edges[i].status,\n      requestType: profile.pendingProjects.edges[i].type\n    }));\n    \n    return profile;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function updateProfile(profile) {\n  try {\n    await client.mutate({\n      mutation: UPDATE_PROFILE_MUTATION,\n      variables: profile\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getProfiles() {\n  try {\n    const res = await client.query({\n      query: GET_PROFILES_QUERY\n    });\n\n    return res.data.allProfiles.edges.map(p => p.node);\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getFilteredProfiles(search) {\n  try {\n    const res = await client.query({\n      query: GET_FILTERED_PROFILES_QUERY,\n      variables: { search }\n    });\n\n    return res.data.allProfiles.edges.map(p => p.node);\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default {\n  getProfile,\n  updateProfile,\n  getProfiles,\n  getFilteredProfiles,\n  getProfCount\n};","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport Layout from '../components/layout';\nimport Register from '../components/register';\nimport HomeTimeline from '../components/homeTimeline';\nimport qs from 'query-string';\nimport ProjectController from '../controllers/projectController';\nimport ProfileController from '../controllers/profileController';\nimport UserController from '../controllers/userController';\nimport '../styles/home.scss';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projectCount: 0,\n      profileCount: 0\n    };\n  }\n\n  async componentDidMount() {\n    UserController.handleGitHubLogin();\n\n    try {\n      const projectCount = await ProjectController.getProjCount();\n      const profileCount = await ProfileController.getProfCount();\n      this.setState({ projectCount, profileCount });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const { profileCount, projectCount } = this.state;\n\n    return (\n      <>\n        <Layout className=\"home-page\">\n          <Helmet>\n            <title>Quaranteam</title>\n          </Helmet>\n          <Container >\n            <Row>\n              <Col xs={{ span: 12 }} md={{ span: 6 }} className=\"home-text\">\n                <h1 className=\"home-header\">\n                  <span>🧬</span> Quaranteam\n              </h1>\n                <br />\n                <p>\n                  Perhaps your internship was cancelled. Or perhaps you're simply bored.\n                  Creating a side project is a fun and effective way to continue improving\n                  your development skills.\n              </p>\n                <p>\n                  <b>Quaranteam</b> is the best platform for finding projects and team members.\n                Register to join <b>{profileCount}</b> members working\n                on <b>{projectCount}</b> projects!\n              </p>\n              </Col>\n              <Col xs={{ span: 12 }} md={{ span: 6 }}>\n                <Register />\n              </Col>\n            </Row>\n            <br />\n            <HomeTimeline />\n          </Container>\n          <footer>\n            <p>Quaranteam.tech © 2020</p>\n          </footer>\n        </Layout>\n        <div className=\"stars\"></div>\n        <div className=\"twinkling\"></div>\n      </>\n    );\n  }\n}","import React from \"react\"\nimport '../../styles/projects.scss';\nimport { Card } from \"react-bootstrap\";\nimport Badge from 'react-bootstrap/Badge';\nimport '../../styles/searchCard.scss';\n\nconst DEFAULT_DESCRIPTION = 'This project currently has no description.';\n\nexport default function ProjectCard({ project }) {\n  return (\n    <Card className=\"search-card\" bg=\"secondary\">\n      <a href={`/#/project/${project.id}`} style={{ color: 'inherit', textDecoration: 'inherit' }}>\n        <Card.Body>\n          <Card.Header>{project.name}</Card.Header>\n          <Card.Text>\n            {project.description || DEFAULT_DESCRIPTION}\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          <b>Members:</b> {project.members.totalCount + 1}\n          <br />\n          <b>Status:</b> {project.status || 'None listed'}\n          <br />\n          \n          {project.interests.length > 0 && (\n            <>\n              <b>Interests: </b>\n              {project.interests.map(interest => (\n                <Badge pill key={interest} variant=\"dark\">\n                  {interest}\n                </Badge>\n              ))}\n              <br />\n            </>\n          )}\n\n          {project.languages.length > 0 && (\n            <>\n              <b>Skills: </b>\n              {project.languages.map(language => (\n                <Badge pill key={language} variant=\"dark\">\n                  {language}\n                </Badge>\n              ))}\n            </>\n          )}\n        </Card.Footer>\n      </a>\n    </Card >\n  );\n}","import React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport '../styles/loading.scss';\n\nexport default function Loading() {\n  return (\n    <div className=\"loading\">\n      <Spinner animation=\"grow\" variant=\"light\"/>\n      <h6>Loading...</h6>\n    </div>\n  );\n}","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\nimport ProjectCard from '../components/project/projectCard';\nimport Loading from '../components/loading';\nimport { withContext } from '../components/layout';\nimport { Container, Row, Col, FormControl, Button } from \"react-bootstrap\";\nimport ProjectController from '../controllers/projectController';\nimport UserController from \"../controllers/userController\";\nimport { debounce } from 'throttle-debounce';\nimport '../styles/projects.scss';\n\nconst DEBOUNCE_MS = 200;\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projects: [],\n      search: '',\n      finishedLoading: false\n    };\n\n    this.retrieveProjects = debounce(\n      DEBOUNCE_MS,\n      this.retrieveProjects.bind(this)\n    );\n    this.updateSearch = this.updateSearch.bind(this);\n    this.renderHeader = this.renderHeader.bind(this);\n    this.renderProjects = this.renderProjects.bind(this);\n    this.renderCreateButton = this.renderCreateButton.bind(this);\n  }\n\n  async componentDidMount() {\n    this.retrieveProjects();\n  }\n\n  async retrieveProjects(search) {\n    this.setState({ finishedLoading: false });\n\n    try {\n      const projects = search\n        ? await ProjectController.getFilteredProjects(search)\n        : await ProjectController.getProjects();\n\n      this.setState({ projects });\n    } catch (error) {\n      console.log(error);\n    }\n\n    this.setState({ finishedLoading: true });\n  }\n\n  updateSearch(search) {\n    this.setState({ search });\n  }\n\n  renderCreateButton() {\n    return (\n      <Button\n        onClick={() => {\n          if (UserController.isLoggedIn()) {\n            window.history.pushState({}, '', '/#/projects/create');\n            window.location.reload();\n          } else {\n            const { showLoginModal } = this.props;\n            showLoginModal('/#/projects/create');\n          }\n        }}\n        className=\"add-project-btn\"\n        variant=\"outline-light\"\n        title=\"Create a project\"\n      >\n        +\n      </Button>\n    );\n  }\n\n  renderHeader() {\n    const { search } = this.state;\n\n    return (\n      <>\n        <h1>\n          <span>💡</span> Projects\n            {this.renderCreateButton()}\n        </h1>\n        <p>\n          Discover projects and find one to join!\n        </p>\n        <FormControl\n          placeholder=\"Search by title, technologies, etc...\"\n          className=\"search\"\n          value={search}\n          type=\"text\"\n          size=\"lg\"\n          onChange={async (event) => {\n            const search = event.target.value;\n            this.updateSearch(search);\n            await this.retrieveProjects(search);\n          }}\n        />\n      </>);\n  }\n\n  renderProjects() {\n    const { projects, finishedLoading } = this.state;\n\n    if (!finishedLoading) {\n      return <Loading />\n    }\n\n    if (projects.length === 0) {\n      return <h4>No projects match the search.</h4>;\n    }\n\n    return (\n      <Row>\n        {projects.map(p => (\n          <Col sm=\"4\" key={p.id}>\n            <ProjectCard project={p} />\n          </Col>\n        ))}\n      </Row>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Helmet>\n          <title>Projects</title>\n        </Helmet>\n        <Container fluid>\n          {this.renderHeader()}\n          {this.renderProjects()}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default withContext(withRouter(Projects), 'projects-page');","import React from 'react';\nimport '../../styles/profile.scss';\nimport Button from 'react-bootstrap/Button';\nimport UserController from '../../controllers/userController';\n\nexport default function JoinProjectButton({ project, onClick }) {\n  if (!UserController.isLoggedIn()) {\n    return null;\n  }\n\n  const profileId = UserController.getToken().sub;\n  const isOwner = profileId === project.ownerId;\n  const isMember = \n    project.members.nodes.some(m => m.id === profileId);\n\n  if (isOwner || isMember) {\n    return null;\n  }\n\n  const isPendingMember =\n    project.pendingMembers.nodes.some(m => m.id === profileId);\n  \n  if (isPendingMember) {\n    return (\n      <Button variant=\"dark\" size=\"sm\" disabled>\n        Awaiting request response\n      </Button>\n    );\n  }\n\n  return (\n    <Button variant=\"dark\" size=\"sm\" onClick={onClick}>\n      {project.selfJoinable ? 'Join Project' : 'Request to Join'}\n    </Button>\n  );\n}","import React from \"react\";\nimport { Button } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\n\nimport \"../../styles/auth.scss\";\n\nexport default function ConfirmationModal(props) {\n  const { show, message, onClose, onConfirm } = props;\n\n  return (\n    <Modal\n      show={show}\n      onHide={onClose}\n      size=\"md\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Confirm\n          </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {message}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"dark\" onClick={onClose}>Close</Button>\n        <Button\n          variant=\"dark\"\n          onClick={onConfirm}\n        >\n          Confirm\n          </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ConfirmationModal from './modals/confirmationModal';\n\nexport default class ConfirmationButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showConfirmationModal: false,\n    };\n\n    this.confirm = this.confirm.bind(this);\n  }\n\n  confirm() {\n    this.setState({ showConfirmationModal: false });\n    this.props.onConfirm();\n  }\n\n  render() {\n    const { message } = this.props;\n    const { showConfirmationModal} = this.state;\n\n    return (\n      <>\n        <ConfirmationModal \n          show={showConfirmationModal}\n          message={message}\n          onClose={() => this.setState({ showConfirmationModal: false })}\n          onConfirm={this.confirm}\n        />\n        <Button\n          {...this.props}\n          onClick={() => this.setState({ showConfirmationModal: true })}\n        >\n          {this.props.children}\n      </Button>\n      </>\n    );\n  }\n}","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport JoinProjectButton from '../../components/project/joinProjectButton';\nimport \"../../styles/project.scss\";\nimport { FaEdit, FaCheck, FaTimes } from 'react-icons/fa';\nimport UserController from '../../controllers/userController';\nimport ConfirmationButton from '../confirmationButton';\nimport { ProjectTab } from '../../pages/project';\n\nconst LEAVE_CONFIRMATION_MESSAGE = 'Are you sure you want to leave the project?';\n\nexport default class ProjectHeader extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderNav(project) {\n    const { onTabChange, tab } = this.props;\n\n    const isOwnProject = UserController.isLoggedIn()\n      && UserController.getToken().sub === project.ownerId;\n\n    if (!isOwnProject) {\n      return null;\n    }\n\n    return (\n      <>\n        <Nav fill variant=\"pills\" activeKey={tab}>\n          <Nav.Item onClick={() => onTabChange(ProjectTab.OVERVIEW)}>\n            <Nav.Link eventKey=\"overview\">Overview</Nav.Link>\n          </Nav.Item>\n          <Nav.Item onClick={() => onTabChange(ProjectTab.MANAGE)}>\n            <Nav.Link eventKey=\"manage\">Manage Members</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <hr />\n      </>\n    );\n  }\n\n  render() {\n    const {\n      tab,\n      project,\n      isEditable,\n      isEditValid,\n      onJoin,\n      onLeave,\n      onInvite,\n      onToggleEditable,\n      onSave,\n    } = this.props;\n\n    const isOwnProject = UserController.isLoggedIn()\n      && UserController.getToken().sub === project.owner.id;\n\n    const isMember = UserController.isLoggedIn()\n      && !isOwnProject\n      && project.members.nodes.some(\n        m => m.id === UserController.getToken().sub\n      );\n\n    return (\n      <Card.Header className=\"project-header\">\n        {this.renderNav(project)}\n        <h2><b>\n          {project.name}\n          {isOwnProject && tab === ProjectTab.OVERVIEW && (\n            <>\n              {isEditable &&\n                <>\n                  {isEditValid && <FaCheck title=\"Save Changes\" onClick={onSave} />}\n                  <FaTimes title=\"Revert Changes\" onClick={onToggleEditable} />\n                </>\n              }\n              {!isEditable &&\n                <FaEdit title=\"Edit Project\" onClick={onToggleEditable} />\n              }\n            </>\n          )}\n        </b></h2>\n\n        {isOwnProject && tab === ProjectTab.MANAGE && (\n          <Button onClick={onInvite} size=\"sm\" variant=\"dark\">Invite Member</Button>\n        )}\n\n        <JoinProjectButton project={project} onClick={onJoin} />\n        {isMember &&\n          <>\n            <ConfirmationButton\n              message={LEAVE_CONFIRMATION_MESSAGE}\n              variant=\"dark\"\n              size=\"sm\"\n              onConfirm={onLeave}\n            >\n              Leave Project\n        </ConfirmationButton>\n          </>\n        }\n      </Card.Header>\n    );\n  }\n}","import gql from 'graphql-tag';\nimport { client } from './graphqlClient';\n\nconst ACCEPT_MUTATION = gql`\n  mutation ($profileId: Int!, $projectId: Int!) {\n    updateRequestByProfileIdAndProjectId(input: {\n      requestPatch: {\n        status: \"accepted\"\n      }, \n      profileId: $profileId\n      projectId: $projectId\n    }) { clientMutationId }\n    \n    createMembership(input: {\n      membership: {\n        profileId: $profileId\n        projectId: $projectId\n      }\n    }) { clientMutationId }\n  }\n`;\n\nconst DECLINE_MUTATION = gql`\n  mutation ($requestId: Int!) {\n    updateRequestById(input: {\n      requestPatch: {\n        status: \"declined\"\n      }, id: $requestId\n    }) { clientMutationId }\n  }\n`;\n\nconst CREATE_MEMBERSHIP_MUTATION = gql`\n  mutation($profileId: Int!, $projectId: Int!) {\n    createMembership (\n      input: {\n        membership: {\n          profileId: $profileId\n          projectId: $projectId\n        }\n      }\n    ) { clientMutationId }\n  }\n`;\n\nconst DELETE_MEMBERSHIP_MUTATION = gql`\n  mutation ($profileId: Int!, $projectId: Int!) {\n    deleteMembershipByProfileIdAndProjectId(\n      input: {profileId: $profileId, projectId: $projectId}\n    ) { clientMutationId }\n  }\n`;\n\nconst CREATE_INVITE_MUTATION = gql`\n  mutation($profileId: Int!, $projectId: Int!) {\n    createRequest (\n      input: {\n        request: {\n          profileId: $profileId\n          projectId: $projectId\n          type: \"invite\"\n        }\n      }\n    ) { clientMutationId }\n  }\n`;\n\nconst CREATE_REQUEST_MUTATION = gql`\n  mutation($profileId: Int!, $projectId: Int!) {\n    createRequest (\n      input: {\n        request: {\n          profileId: $profileId\n          projectId: $projectId\n          type: \"request\"\n        }\n      }\n    ) { clientMutationId }\n  }\n`;\n\nasync function accept(profileId, projectId) {\n  try {\n    await client.mutate({\n      mutation: ACCEPT_MUTATION,\n      variables: { profileId, projectId }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function decline(requestId) {\n  try {\n    await client.mutate({\n      mutation: DECLINE_MUTATION,\n      variables: { requestId }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function requestToJoinProject(profileId, projectId) {\n  try {\n    await client.mutate({\n      mutation: CREATE_REQUEST_MUTATION,\n      variables: { profileId, projectId }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function joinProject(profileId, projectId) {\n  try {\n    await client.mutate({\n      mutation: CREATE_MEMBERSHIP_MUTATION,\n      variables: { profileId, projectId }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function leaveProject(profileId, projectId) {\n  try {\n    await client.mutate({\n      mutation: DELETE_MEMBERSHIP_MUTATION,\n      variables: { profileId, projectId }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function inviteToProject(profileId, projectId) {\n  try {\n    await client.mutate({\n      mutation: CREATE_INVITE_MUTATION,\n      variables: { profileId, projectId }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default {\n  accept,\n  decline,\n  requestToJoinProject,\n  joinProject,\n  leaveProject,\n  inviteToProject\n};","import React from 'react';\nimport Select from 'react-select';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport '../../styles/modal.scss';\nimport UserController from '../../controllers/userController';\nimport ProfileController from '../../controllers/profileController';\n\nexport default class InviteToProjectModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      profileOptions: [],\n      selectedProfile: null\n    }\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  async componentDidMount() {\n    if (!UserController.isLoggedIn()) {\n      return;\n    }\n\n    const profiles = await ProfileController.getProfiles();\n    const username = UserController.getToken().username;\n\n    this.setState({\n      profileOptions: profiles\n        .filter(p => p.username !== username)\n        .map(this.convertToOption)\n    });\n  }\n\n  convertToOption(profile) {\n    return { label: profile.username, value: profile.id };\n  }\n\n  onChange(selectedProfile) {\n    this.setState({ selectedProfile });\n  }\n\n  render() {\n    const { show, onClose, onConfirm } = this.props;\n    const { profileOptions, selectedProfile } = this.state;\n    const isConfirmDisabled = selectedProfile === null;\n\n    return (\n      <Modal show={show} animation={false} onHide={onClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Invite Member</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          Send an invitation to the following user:\n          <Select className=\"modal-select\"\n            variant=\"dark\"\n            options={profileOptions}\n            value={selectedProfile}\n            onChange={this.onChange}\n          />\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"dark\" onClick={onClose}>Close</Button>\n          <Button\n            variant=\"dark\" \n            disabled={isConfirmDisabled}\n            onClick={() => onConfirm(selectedProfile.value)}\n          >\n            Confirm\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}","import gql from 'graphql-tag';\nimport { client } from './graphqlClient';\n\n// Cache of skills and interests\nlet SKILLS = null;\nlet INTERESTS = null;\n\nconst GET_SKILLS_QUERY = gql`\n  query {\n    allTags(condition: {type: \"skill\"}) {\n      nodes {\n        name\n      }\n    }\n  }\n`;\n\nconst GET_INTERESTS_QUERY = gql`\n  query {\n    allTags(condition: {type: \"interest\"}) {\n      nodes {\n        name\n      }\n    }\n  }\n`;\n\nasync function getSkills() {\n  if (SKILLS) {\n    return SKILLS;\n  }\n\n  try {\n    const res = await client.query({\n      query: GET_SKILLS_QUERY\n    });\n    SKILLS = res.data.allTags.nodes.map(t => t.name);\n    return SKILLS;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getInterests() {\n  if (INTERESTS) {\n    return INTERESTS;\n  }\n\n  try {\n    const res = await client.query({\n      query: GET_INTERESTS_QUERY\n    });\n    INTERESTS = res.data.allTags.nodes.map(t => t.name);\n    return INTERESTS;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default {\n  getSkills,\n  getInterests\n};","import React from 'react';\nimport Select from 'react-select';\nimport TagController from '../controllers/tagController';\n\nfunction formTheme(theme) {\n  return {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primary25: 'gray',\n      primary: '#64485C',\n      backgroundColor: 'transparent',\n    },\n  };\n}\n\nexport default class TagSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: []\n    }\n  }\n\n  async componentDidMount() {\n    const { type } = this.props;\n\n    try {\n      const tags = type === 'interests'\n        ? await TagController.getInterests()\n        : await TagController.getSkills();\n\n      this.setState({\n        options: this.convertToOptions(tags)\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  convertToOptions(items) {\n    if (!items) {\n      return [];\n    }\n\n    return items.map(item => ({\n      label: item,\n      value: item\n    }));\n  }\n\n  render() {\n    const { options } = this.state;\n    const { value, onChange } = this.props;\n\n    return (\n      <Select\n        theme={formTheme}\n        options={options}\n        value={this.convertToOptions(value)}\n        onChange={items =>\n          onChange(items ? items.map(i => i.value) : [])\n        }\n        isMulti\n      />\n    );\n  }\n}","import React from \"react\";\nimport { Form } from 'react-bootstrap';\nimport TagSelect from \"../TagSelect\";\nimport Select from 'react-select';\n\nconst NAME_MAX_LENGTH = 80;\n\nconst STATUS_OPTIONS =\n  ['Planning Phase', 'Design Phase', 'Development Phase', 'Testing Phase', 'Deployment Phase']\n    .map(status => ({ value: status, label: status }));\n\nexport default class EditableProject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.convertToOption = this.convertToOption.bind(this);\n  }\n\n  onChange(field, value) {\n    this.props.onProjectFieldEdit(field, value);\n  }\n\n  convertToOption(item) {\n    return {\n      label: item,\n      value: item\n    };\n  }\n\n  render() {\n    const { project } = this.props;\n\n    return (\n      <Form>\n        <h4><span>📋</span> Name <small>(required)</small></h4>\n        <Form.Control\n          value={project.name}\n          placeholder=\"A short title\"\n          onChange={event => this.onChange('name', event.target.value)}\n          maxLength={NAME_MAX_LENGTH}\n        />\n        <hr />\n        <h4><span>ℹ️</span> Description</h4>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"5\"\n          value={project.description || ''}\n          placeholder={'The project description is shown publicly to'\n                      + ' users who are interested in your project'\n                      + ' (Markdown is supported).'}\n          onChange={event => this.onChange('description', event.target.value)}\n        />\n        <hr />\n        <h4><span>💻</span> Directions</h4>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"5\"\n          value={project.directions || ''}\n          placeholder={'Directions are shown only to project members,'\n                      + ' and should include information like Discord/Slack'\n                      + ' links, onboarding directions, etc (Markdown is supported).'}\n          onChange={event => this.onChange('directions', event.target.value)}\n        />\n        <hr />\n        <h4><span>🧰</span> Skills</h4>\n        <TagSelect\n          type=\"skills\"\n          value={project.languages}\n          onChange={languages => this.onChange('languages', languages)}\n        />\n        <hr />\n        <h4><span>🧪</span> Interest Areas</h4>\n        <TagSelect\n          type=\"interests\"\n          value={project.interests}\n          onChange={interests => this.onChange('interests', interests)}\n        />\n        <hr />\n        <h4><span>👩‍🔬</span> Joinable By Others?</h4>\n        <Form.Control\n          as=\"select\"\n          onChange={event => this.onChange('selfJoinable', event.target.value === 'true')}\n          value={project.selfJoinable}\n        >\n          <option value={true}>Yes! Anyone can join on their own.</option>\n          <option value={false}>No, people need to ask before joining.</option>\n        </Form.Control>\n        <hr />\n        <h4><span>⏰</span> Project Status</h4>\n        <Select\n          type=\"status\"\n          options={STATUS_OPTIONS}\n          value={this.convertToOption(project.status)}\n          onChange={status => this.onChange('status', status.value)}\n        />\n        <hr />\n        <h4><span>👀</span> Hidden from others?</h4>\n        <Form.Control\n          as=\"select\"\n          onChange={event => this.onChange('type', event.target.value)}\n          value={project.type}\n        >\n          <option value=\"public\">No! The project will be visible to all!</option>\n          <option value=\"private\">Yes, only team members can see the project.</option>\n        </Form.Control>\n      </Form>\n    );\n  }\n}\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\nimport ReactMarkdown from 'react-markdown';\nimport UserController from '../../controllers/userController';\nimport '../../styles/markdown.scss';\n\nconst DEFAULT_DESCRIPTION = 'This project currently has no description.';\nconst DEFAULT_DIRECTIONS = 'This project currently has no directions.';\n\nexport default function ReadOnlyProject({ project }) {\n  const membersCount = project.members.totalCount + 1;\n\n  const isMember = UserController.isLoggedIn()\n    && project.members.nodes.some(\n      m => m.id === UserController.getToken().sub\n    );\n  \n  const isOwner = UserController.isLoggedIn()\n    && project.ownerId === UserController.getToken().sub;\n\n  return (\n    <>\n      <h4><span>ℹ️</span> Description</h4>\n      <ReactMarkdown\n        className=\"markdown\"\n        source={project.description || DEFAULT_DESCRIPTION}\n      />\n      <hr />\n      {(isOwner || isMember) &&\n        <>\n          <h4><span>💻</span> Directions</h4>\n          <ReactMarkdown\n            className=\"markdown\"\n            source={project.directions || DEFAULT_DIRECTIONS}\n          />\n          <hr />\n        </>\n      }\n      <h4><span>👩‍👩‍👧‍👦</span> Members ({membersCount})</h4>\n      <div className=\"project-badges\">\n        <Badge pill variant=\"success\">\n          <a href={`/#/profile/${project.owner.username}`}>\n            {project.owner.username} (owner)\n            </a>\n        </Badge>\n        {project.members.nodes.map(member => (\n          <Badge pill key={member.username} variant=\"dark\">\n            <a href={`/#/profile/${member.username}`}>\n              {member.username}\n            </a>\n          </Badge>\n        ))}\n      </div>\n      <hr />\n      <h4><span>🧰</span> Skills</h4>\n      <div className=\"project-badges\">\n        {project.languages.map(lang => (\n          <Badge pill key={lang} variant=\"dark\">\n            {lang}\n          </Badge>\n        ))}\n      </div>\n      <hr />\n      <h4><span>🧪</span> Interest Areas</h4>\n      <div className=\"project-badges\">\n        {project.interests.map(interest => (\n          <Badge pill key={interest} variant=\"dark\">\n            {interest}\n          </Badge>\n        ))}\n      </div>\n      <hr />\n      <h4><span>⏰</span> Project Status</h4>\n      <Card.Text>\n        {project.status}\n      </Card.Text>\n    </>\n  );\n}","import React from 'react';\nimport EditableProject from './editableProject';\nimport ReadOnlyProject from './readOnlyProject';\n\nexport default class ProjectOverview extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      project,\n      editableProject,\n      isEditable,\n      onProjectFieldEdit\n    } = this.props;\n\n    return (\n      <>\n        {isEditable\n          ? <EditableProject\n            onProjectFieldEdit={onProjectFieldEdit}\n            project={editableProject}\n          />\n          : <ReadOnlyProject project={project} />\n        }\n      </>\n    );\n  }\n}","\nimport React from 'react';\nimport RequestController from '../../controllers/requestController';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport ConfirmationButton from '../confirmationButton';\n\nconst KICK_CONFIRMATION_MESSAGE = 'Are you sure you want to kick this user from the project?';\n\nexport default class ManageProjectMembers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.accept = this.accept.bind(this);\n    this.decline = this.decline.bind(this);\n  }\n\n  async accept(profileId, projectId) {\n    try {\n      await RequestController.accept(profileId, projectId);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async decline(requestId) {\n    try {\n      await RequestController.decline(requestId);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async kick(profileId, projectId) {\n    try {\n      await RequestController.leaveProject(profileId, projectId);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  renderMembers() {\n    const { project } = this.props;\n    const members = project.members.nodes;\n\n    if (members.length === 0) {\n      return (\n        <>\n          <h4>Members</h4>\n          <span className=\"message\">\n            The project does not have any members.\n          </span>\n          <br />\n        </>\n      );\n    }\n\n    return (\n      <>\n        <h4>Members</h4>\n        <ListGroup>\n          {members.map(p => (\n            <ListGroup.Item key={p.requestId} className=\"request-list-item\">\n              <a href={`/#/profile/${p.username}`}>{p.username}</a>\n              <ButtonGroup className=\"request-actions\">\n                <ConfirmationButton\n                  message={KICK_CONFIRMATION_MESSAGE}\n                  variant=\"danger\"\n                  size=\"sm\"\n                  onConfirm={() => this.kick(p.id, project.id)}\n                >\n                  Kick\n                </ConfirmationButton>\n              </ButtonGroup>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      </>\n    );\n  }\n\n  renderPendingMembers() {\n    const { project } = this.props;\n\n    if (project.selfJoinable) {\n      return null;\n    }\n\n    const pendingMembers = project.pendingMembers.nodes.filter(\n      p => p.requestStatus === 'pending' && p.requestType === 'request'\n    );\n\n    if (pendingMembers.length === 0) {\n      return (\n        <>\n          <hr />\n          <h4>Pending Members</h4>\n          <span className=\"message\">\n            Nobody is requesting to join the project.\n          </span>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <hr />\n        <h4>Pending Members</h4>\n        <ListGroup>\n          {pendingMembers.map(p => (\n            <ListGroup.Item key={p.requestId} className=\"request-list-item\">\n              <a href={`/#/profile/${p.username}`}>{p.username}</a>\n              <ButtonGroup className=\"request-actions\" size=\"sm\">\n                <Button\n                  variant=\"success\"\n                  onClick={() => this.accept(p.id, project.id)}\n                >\n                  Accept\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  onClick={() => this.decline(p.requestId)}\n                >\n                  Decline\n                </Button>\n              </ButtonGroup>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        {this.renderMembers()}\n        {this.renderPendingMembers()}\n      </>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport { withContext } from '../components/layout';\nimport { Card } from 'react-bootstrap';\nimport ProjectHeader from \"../components/project/projectHeader\";\nimport ProjectController from \"../controllers/projectController\";\nimport RequestController from \"../controllers/requestController\";\nimport UserController from '../controllers/userController';\nimport WebController from '../controllers/webController';\nimport Loading from '../components/loading';\nimport InviteMemberModal from '../components/modals/inviteMemberModal';\nimport ProjectOverview from '../components/project/projectOverview';\nimport ManageProjectMembers from '../components/project/manageProjectMembers';\nimport '../styles/project.scss';\n\nexport const ProjectTab = {\n  OVERVIEW: 'overview',\n  MANAGE: 'manage'\n};\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tab: ProjectTab.OVERVIEW,\n      finishedLoading: false,\n      project: null,\n      editableProject: null,\n      isEditable: false,\n      showInviteModal: false\n    };\n\n    this.joinProject = this.joinProject.bind(this);\n    this.leaveProject = this.leaveProject.bind(this);\n    this.toggleEditable = this.toggleEditable.bind(this);\n    this.onProjectFieldEdit = this.onProjectFieldEdit.bind(this);\n    this.saveProject = this.saveProject.bind(this);\n    this.inviteMember = this.inviteMember.bind(this);\n    this.changeTab = this.changeTab.bind(this);\n  }\n\n  async componentDidMount() {\n    const { match: { params } } = this.props;\n    const id = Number(params.id);\n    \n    if (!id) {\n      this.setState({ finishedLoading: true });\n      return;\n    }\n\n    try {\n      const project = await ProjectController.getProject(id);\n      this.setState({\n        project,\n        editableProject: { ...project },\n        finishedLoading: true\n      });\n      this.setTabFromURL();\n    } catch (error) {\n      this.setState({ finishedLoading: true });\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate() {\n    this.setTabFromURL();\n  }\n  \n  setTabFromURL() {\n    const { project, tab } = this.state;\n    const isOwnProject = UserController.isLoggedIn()\n      && UserController.getToken().sub === project.ownerId;\n\n    if (!isOwnProject && tab !== ProjectTab.OVERVIEW) {\n      this.changeTab(ProjectTab.OVERVIEW);\n    }\n\n    const params = WebController.getQueryParams();\n    const nextTab = params.get('tab') || ProjectTab.OVERVIEW;\n    \n    if (nextTab !== tab) {\n      this.changeTab(nextTab);\n    }\n  }\n\n  changeTab(tab) {\n    this.setState({ tab });\n\n    const params = WebController.getQueryParams();\n    params.set('tab', tab);\n    \n    WebController.updateQueryParams(params);\n  }\n\n  toggleEditable() {\n    this.setState(prevState => ({\n      isEditable: !prevState.isEditable\n    }));\n  }\n\n  onProjectFieldEdit(field, value) {\n    const { editableProject } = this.state;\n    editableProject[field] = value;\n    this.setState({ editableProject });\n  }\n\n  async saveProject() {\n    const { editableProject } = this.state;\n    try {\n      await ProjectController.updateProject(editableProject);\n      this.setState({\n        project: { ...editableProject }\n      });\n      this.toggleEditable();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async inviteMember(profileId) {\n    const { project } = this.state;\n    const { showAlert } = this.props;\n    this.setState({ showInviteModal: false });\n\n    try {\n      await RequestController.inviteToProject(profileId, project.id);\n      showAlert(\n        'You have invited the user to your project.',\n        'success'\n      );\n    } catch (error) {\n      showAlert('You have already invited this user.', 'warning');\n    }\n  }\n\n  async joinProject() {\n    const { project } = this.state;\n    const profileId = UserController.getToken().sub;\n    try {\n      if (project.selfJoinable) {\n        await RequestController.joinProject(\n          profileId,\n          project.id,\n        );\n      } else {\n        await RequestController.requestToJoinProject(\n          profileId,\n          project.id,\n        );\n      }\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async leaveProject() {\n    const { project } = this.state;\n    const profileId = UserController.getToken().sub;\n\n    try {\n      await RequestController.leaveProject(\n        profileId,\n        project.id\n      );\n      WebController.navigate(`/#/projects`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const {\n      tab,\n      project,\n      finishedLoading,\n      isEditable,\n      editableProject,\n      showInviteModal\n    } = this.state;\n\n    if (!project) {\n      return (\n        <>\n          {finishedLoading\n            ? <h5>Project not found.</h5>\n            : <Loading />\n          }\n        </>\n      );\n    }\n\n    const isEditValid = editableProject && editableProject.name.trim() !== '';\n\n    return (\n      <>\n        <InviteMemberModal\n          show={showInviteModal}\n          onConfirm={this.inviteMember}\n          onClose={() => this.setState({ showInviteModal: false })}\n        />\n        <Card className=\"project-container\" bg=\"secondary\" border=\"secondary\">\n          <ProjectHeader\n            project={project}\n            isEditable={isEditable}\n            isEditValid={isEditValid}\n            tab={tab}\n            onInvite={() => this.setState({ showInviteModal: true })}\n            onJoin={this.joinProject}\n            onLeave={this.leaveProject}\n            onSave={this.saveProject}\n            onToggleEditable={this.toggleEditable}\n            onTabChange={this.changeTab}\n          />\n\n          <Card.Body>\n            {tab === ProjectTab.OVERVIEW &&\n            <ProjectOverview\n              project={project}\n              editableProject={editableProject}\n              isEditable={isEditable}\n              onProjectFieldEdit={this.onProjectFieldEdit}\n            />\n            }\n            {tab === ProjectTab.MANAGE && \n              <ManageProjectMembers project={project} />\n            }\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default withContext(withRouter(Project), 'project-page');","import React from \"react\";\nimport '../../styles/profile.scss';\nimport { Card } from \"react-bootstrap\";\nimport Image from 'react-bootstrap/Image';\nimport Badge from 'react-bootstrap/Badge';\nimport '../../styles/searchCard.scss';\nimport DEFAULT_PROFILE from '../../images/default-profile.png';\n\nexport default function ProfileCard({ profile }) {\n  return (\n    <Card className=\"search-card\" bg=\"secondary\">\n      <a href={`/#/profile/${profile.username}`} style={{ color: 'inherit', textDecoration: 'inherit' }}>\n        <Card.Body>\n          <Card.Header className=\"card-header\">\n            <span>\n              <Image\n                src={profile.pictureUrl || DEFAULT_PROFILE}\n                roundedCircle\n              />\n              {profile.username}\n            </span>\n          </Card.Header>\n          <Card.Text>\n            {profile.bio}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Footer>\n          {profile.interests.length > 0 && (\n            <>\n              <b>Interests: </b>\n              {profile.interests.map(interest => (\n                <Badge pill key={interest} variant=\"dark\">\n                  {interest}\n                </Badge>\n              ))}\n              <br />\n            </>\n          )}\n          \n          {profile.languages.length > 0 && (\n            <>\n              <b>Skills: </b>\n              {profile.languages.map(language => (\n                <Badge pill key={language} variant=\"dark\">\n                  {language}\n                </Badge>\n              ))}\n            </>\n          )}\n        </Card.Footer>\n      </a>\n    </Card>\n  );\n}","import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Layout from \"../components/layout\";\nimport { Container, Row, Col, FormControl } from \"react-bootstrap\";\nimport ProfileController from '../controllers/profileController';\nimport \"../styles/profile.scss\";\nimport ProfileCard from \"../components/profile/profileCard\";\nimport Loading from '../components/loading';\nimport '../styles/people.scss';\nimport { debounce } from 'throttle-debounce';\n\nconst DEBOUNCE_MS = 200;\n\nexport default class People extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profiles: [],\n      search: '',\n      finishedLoading: false\n    };\n\n    this.retrieveProfiles = debounce(\n      DEBOUNCE_MS,\n      this.retrieveProfiles.bind(this)\n    );\n    this.updateSearch = this.updateSearch.bind(this);\n    this.renderHeader = this.renderHeader.bind(this);\n    this.renderProfiles = this.renderProfiles.bind(this);\n  }\n\n  async componentDidMount() {\n    this.retrieveProfiles();\n  }\n\n  async retrieveProfiles(search) {\n    this.setState({ finishedLoading: false });\n\n    try {\n      const profiles = search\n        ? await ProfileController.getFilteredProfiles(search)\n        : await ProfileController.getProfiles();\n\n      this.setState({ profiles });\n    } catch (error) {\n      console.log(error);\n    }\n\n    this.setState({ finishedLoading: true });\n  }\n\n  updateSearch(search) {\n    this.setState({ search });\n  }\n\n  renderHeader() {\n    const { search } = this.state;\n\n    return (\n      <>\n        <h1><span>👩‍🔬</span> People</h1>\n        <p>\n          Find team members for your next project!\n        </p>\n        <FormControl\n          type=\"text\"\n          size=\"lg\"\n          className=\"search\"\n          placeholder=\"Search by username, skills, etc...\"\n          value={search}\n          onChange={async (event) => {\n            const search = event.target.value;\n            this.updateSearch(search);\n            await this.retrieveProfiles(search);\n          }}\n        />\n      </>\n    );\n  }\n\n  renderProfiles() {\n    const { profiles, finishedLoading } = this.state;\n\n    if (!finishedLoading) {\n      return <Loading />\n    }\n\n    if (profiles.length === 0) {\n      return <h4>No profiles match the search.</h4>;\n    }\n\n    return (\n      <Row>\n        {profiles.map(p => {\n          return (\n            <Col md=\"4\" key={p.id}>\n              <ProfileCard profile={p} />\n            </Col>\n          )\n        })}\n      </Row>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Helmet>\n          <title>People</title>\n        </Helmet>\n        <Layout className=\"people-page\">\n          <Container fluid>\n            {this.renderHeader()}\n            {this.renderProfiles()}\n          </Container>\n        </Layout>\n      </>\n    );\n  }\n}","import React from 'react';\nimport Image from 'react-bootstrap/Image';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { FaUserEdit, FaCheck, FaTimes } from 'react-icons/fa';\nimport UserController from '../../controllers/userController';\nimport { ProfileTab } from '../../pages/profile';\nimport DEFAULT_PROFILE from '../../images/default-profile.png';\nimport '../../styles/profile.scss';\n\nexport default class ProfileHeader extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderNav(profile) {\n    const { onTabChange, tab } = this.props;\n\n    const isOwnProfile = UserController.isLoggedIn()\n      && UserController.getToken().username === profile.username;\n\n    return (\n      <>\n        <Nav fill variant=\"pills\" activeKey={tab}>\n          <Nav.Item onClick={() => onTabChange(ProfileTab.OVERVIEW)}>\n            <Nav.Link eventKey=\"overview\">Overview</Nav.Link>\n          </Nav.Item>\n          <Nav.Item onClick={() => onTabChange(ProfileTab.PROJECTS)}>\n            <Nav.Link eventKey=\"projects\">Projects</Nav.Link>\n          </Nav.Item>\n          {isOwnProfile && (\n            <Nav.Item onClick={() => onTabChange(ProfileTab.INBOX)}>\n              <Nav.Link eventKey=\"inbox\">Inbox</Nav.Link>\n            </Nav.Item>\n          )}\n        </Nav>\n        <hr />\n      </>\n    );\n  }\n\n  renderPicture(profile) {\n    return (\n      <Col lg={{ span: 3, offset: 3 }} xs={{ span: 6, offset: 3}}>\n        <Image\n          src={profile.pictureUrl || DEFAULT_PROFILE}\n          roundedCircle\n          fluid\n        />\n      </Col>\n    );\n  }\n\n  renderHeaderRight(profile) {\n    const {\n      isEditable,\n      onToggleEditable,\n      onInvite,\n      onSaveProfile,\n      tab\n    } = this.props;\n\n    const isOwnProfile = UserController.isLoggedIn()\n      && UserController.getToken().username === profile.username;\n    const showEditOptions = tab === ProfileTab.OVERVIEW && isOwnProfile;\n\n    return (\n      <>\n        <h2><b>\n          {profile.username}\n          {showEditOptions && isEditable && (\n            <>\n              <FaCheck title=\"Save Changes\" onClick={onSaveProfile} />\n              <FaTimes title=\"Revert Changes\" onClick={onToggleEditable} />\n            </>\n          )}\n          {showEditOptions && !isEditable && (\n            <FaUserEdit title=\"Edit Profile\" onClick={onToggleEditable} />\n          )}\n        </b></h2>\n        {UserController.isLoggedIn() && !isOwnProfile &&\n          <Button size=\"sm\" variant=\"dark\" onClick={onInvite}>\n            Invite to Project\n          </Button>\n        }\n      </>\n    );\n  }\n\n  render() {\n    const { profile } = this.props;\n\n    return (\n      <Card.Header className=\"profile-header\">\n        {this.renderNav(profile)}\n        <Row>\n          {this.renderPicture(profile)}\n          <Col className=\"profile-header-right\" xs={{ span: false }}>\n            {this.renderHeaderRight(profile)}\n          </Col>\n        </Row>\n      </Card.Header>\n    );\n  }\n}","import React from \"react\";\nimport { Form, } from 'react-bootstrap';\nimport TagSelect from '../TagSelect';\n\nexport default class EditableProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.onChange = this.onChange.bind(this);\n    this.convertToOptions = this.convertToOptions.bind(this);\n  }\n\n  onChange(field, value) {\n    this.props.onProfileFieldEdit(field, value);\n  }\n\n  convertToOptions(items) {\n    return items.map(item => ({\n      label: item,\n      value: item\n    }));\n  }\n\n  render() {\n    const { profile } = this.props;\n\n    return (\n      <Form>\n        <h4><span>👩‍🔬</span> Bio</h4>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"3\"\n          value={profile.bio || ''}\n          onChange={event => this.onChange('bio', event.target.value)}\n        />\n        <hr />\n        <h4><span>🧪</span> Interests</h4>\n        <TagSelect\n          type=\"interests\"\n          value={profile.interests}\n          onChange={interests => this.onChange('interests', interests)}\n        />\n        <hr />\n        <h4><span>🧰</span> Skills</h4>\n        <TagSelect\n          type=\"skills\"\n          value={profile.languages}\n          onChange={languages => this.onChange('languages', languages)}\n        />\n      </Form>\n    );\n  }\n}","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\n\nconst DEFAULT_BIO = 'Apparently, this user prefers to keep an air of mystery about them.'\n\nexport default function ReadOnlyProfile({ profile }) {\n  return (\n    <>\n      <h4><span>👩‍🔬</span> Bio</h4>\n      <Card.Text>\n        {profile.bio || DEFAULT_BIO}\n      </Card.Text>\n\n      <hr />\n      <h4><span>🧪</span> Interests</h4>\n      <div className=\"profile-badges\">\n        {profile.interests.map(interest => (\n          <Badge pill key={interest} variant=\"dark\">\n            {interest}\n          </Badge>\n        ))}\n      </div>\n      <hr />\n      <h4><span>🧰</span> Skills</h4>\n      <div className=\"profile-badges\">\n        {profile.languages.map(language => (\n          <Badge pill key={language} variant=\"dark\">\n            {language}\n          </Badge>\n        ))}\n      </div>\n    </>\n  );\n}","import React from 'react';\nimport EditableProfile from './editableProfile';\nimport ReadOnlyProfile from './readOnlyProfile';\n\nexport default class ProfileOverview extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      profile,\n      editableProfile,\n      isEditable,\n      onProfileFieldEdit\n    } = this.props;\n\n    return (\n      <>\n        {isEditable\n          ? <EditableProfile\n            onProfileFieldEdit={onProfileFieldEdit}\n            profile={editableProfile}\n          />\n          : <ReadOnlyProfile profile={profile} />\n        }\n      </>\n    );\n  }\n}","import React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport UserController from '../../controllers/userController';\nimport '../../styles/profile.scss';\n\nexport default class ProfileProjects extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getPersonalizedText(isOwnProfile) {\n    const { profile } = this.props;\n    if (isOwnProfile) {\n      return 'You have';\n    }\n    return `${profile.username} has`;\n  }\n\n  renderProjects(projects, actionText, isOwnProfile) {\n    return (\n      <>\n        {projects.length === 0 &&\n          <>\n            <span className=\"message\">\n              {this.getPersonalizedText(isOwnProfile)} not {actionText} any projects.\n          </span>\n            <br />\n          </>\n        }\n        <div className=\"profile-badges\">\n          {projects.map(p => (\n            <Badge pill key={p.id} variant=\"dark\">\n              <a href={`/#/project/${p.id}`}>{p.name}</a>\n            </Badge>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    const { profile } = this.props;\n    const ownedProjects = profile.ownedProjects.nodes;\n    const projects = profile.projects.nodes;\n\n    const isOwnProfile = UserController.isLoggedIn()\n      && UserController.getToken().username === profile.username;\n\n    return (\n      <div className=\"profile-projects\">\n        <h4>Owned Projects</h4>\n        {this.renderProjects(ownedProjects, 'created', isOwnProfile)}\n        <hr />\n        <h4>Joined Projects</h4>\n        {this.renderProjects(projects, 'joined', isOwnProfile)}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport RequestController from '../../controllers/requestController';\nimport UserController from '../../controllers/userController';\nimport WebController from '../../controllers/webController';\nimport '../../styles/profile.scss';\n\nconst PROJECT_STATUS = {\n  'pending': { color: 'dark' },\n  'accepted': { color: 'success' },\n  'declined': { color: 'danger' }\n};\n\nclass ProfileInbox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.accept = this.accept.bind(this);\n    this.decline = this.decline.bind(this);\n  }\n\n  async accept(projectId) {\n    const profileId = UserController.getToken().sub;\n    try {\n      await RequestController.accept(profileId, projectId);\n      WebController.navigate(`/#/project/${projectId}`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async decline(requestId) {\n    try {\n      await RequestController.decline(requestId);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  renderRequests(profile) {\n    const requestedProjects = profile.pendingProjects.nodes\n      .filter(p => p.requestType === 'request' && p.requestStatus === 'pending');\n\n    return (\n      <>\n        {requestedProjects.length === 0 &&\n          <>\n            <span className=\"message\">\n              You have not requested to join any projects.\n            </span>\n            <br />\n          </>\n        }\n        <div className=\"profile-badges\">\n          {requestedProjects.map(p => (\n            <Badge pill key={p.id} variant={PROJECT_STATUS[p.requestStatus].color}>\n              <a href={`/#/project/${p.id}`}>\n                {p.name}\n                &nbsp;({p.requestStatus})\n              </a>\n            </Badge>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  renderInvites(profile) {\n    const invitedProjects = profile.pendingProjects.nodes\n      .filter(p => p.requestType === 'invite' && p.requestStatus === 'pending');\n\n    return (\n      <>\n        {invitedProjects.length === 0 &&\n          <span className=\"message\">\n            You have not been invited to any projects.\n          </span>\n        }\n        <ListGroup>\n          {invitedProjects.map(p => (\n            <ListGroup.Item key={p.requestId} className=\"invite-list-item\">\n              <a href={`/#/project/${p.id}`}>{p.name}</a>\n              <ButtonGroup className=\"invite-actions\" size=\"sm\">\n                <Button\n                  variant=\"success\"\n                  onClick={() => this.accept(p.id)}\n                >\n                  Accept\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  onClick={() => this.decline(p.requestId)}\n                >\n                  Decline\n                </Button>\n              </ButtonGroup>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      </>\n    );\n  }\n\n  render() {\n    const { profile } = this.props;\n\n    return (\n      <div className=\"profile-inbox\">\n        <h4>Requests</h4>\n        {this.renderRequests(profile)}\n        <hr />\n        <h4>Invites</h4>\n        {this.renderInvites(profile)}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ProfileInbox);","import React from 'react';\nimport Select from 'react-select';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport '../../styles/modal.scss';\nimport UserController from '../../controllers/userController';\nimport ProjectController from '../../controllers/projectController';\n\nexport default class InviteToProjectModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projectOptions: [],\n      selectedProject: null\n    }\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  async componentDidMount() {\n    if (!UserController.isLoggedIn()) {\n      return;\n    }\n    \n    const profileId = UserController.getToken().sub;\n    const projects = await ProjectController.getOwnedProjects(profileId);\n    this.setState({\n      projectOptions: projects.map(this.convertToOption)\n    });\n  }\n\n  convertToOption(project) {\n    return { label: project.name, value: project.id };\n  }\n\n  onChange(selectedProject) {\n    this.setState({ selectedProject });\n  }\n\n  render() {\n    const { show, onClose, onConfirm } = this.props;\n    const { projectOptions, selectedProject } = this.state;\n    const isConfirmDisabled = selectedProject === null;\n\n    return (\n      <Modal show={show} animation={false} onHide={onClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Invite to Project</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          Send an invitation for the following project:\n          <Select className=\"modal-select\"\n            variant=\"dark\"\n            options={projectOptions}\n            value={selectedProject}\n            onChange={this.onChange}\n          />\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"dark\" onClick={onClose}>Close</Button>\n          <Button\n            variant=\"dark\" \n            disabled={isConfirmDisabled}\n            onClick={() => onConfirm(selectedProject.value)}\n          >\n            Confirm\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\nimport { withContext } from '../components/layout';\nimport Card from 'react-bootstrap/Card';\nimport ProfileController from '../controllers/profileController';\nimport ProfileHeader from '../components/profile/profileHeader';\nimport ProfileOverview from '../components/profile/profileOverview';\nimport ProfileProjects from '../components/profile/profileProjects';\nimport ProfileInbox from '../components/profile/profileInbox';\nimport Loading from '../components/loading';\nimport InviteToProjectModal from '../components/modals/inviteToProjectModal';\nimport ProjectController from '../controllers/projectController';\nimport WebController from '../controllers/webController';\nimport '../styles/profile.scss';\n\nexport const ProfileTab = {\n  OVERVIEW: 'overview',\n  PROJECTS: 'projects',\n  INBOX: 'inbox'\n};\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: null,\n      editableProfile: null,\n      isEditable: false,\n      tab: ProfileTab.OVERVIEW,\n      finishedLoading: false,\n      showInviteModal: false\n    };\n\n    this.toggleEditable = this.toggleEditable.bind(this);\n    this.onProfileFieldEdit = this.onProfileFieldEdit.bind(this);\n    this.saveProfile = this.saveProfile.bind(this);\n    this.inviteToProject = this.inviteToProject.bind(this);\n    this.changeTab = this.changeTab.bind(this);\n  }\n\n  async componentDidMount() {    \n    const { match: { params } } = this.props;\n    const username = params.username;\n\n    if (!username) {\n      this.setState({ finishedLoading: true });\n      return;\n    }\n\n    try {\n      const profile = await ProfileController.getProfile(username);\n      this.setState({\n        profile,\n        editableProfile: { ...profile },\n        finishedLoading: true\n      });\n    } catch (error) {\n      this.setState({ finishedLoading: true });\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate() {\n    this.setTabFromURL();\n  }\n\n  setTabFromURL() {\n    const { tab } = this.state;\n    const params = WebController.getQueryParams();\n    const nextTab = params.get('tab') || ProfileTab.OVERVIEW;\n\n    if (nextTab !== tab) {\n      this.changeTab(nextTab);\n    }\n  }\n\n  changeTab(tab) {\n    this.setState({ tab });\n\n    const params = WebController.getQueryParams();\n    params.set('tab', tab);\n    \n    WebController.updateQueryParams(params);\n  }\n\n  toggleEditable() {\n    this.setState(prevState => ({\n      isEditable: !prevState.isEditable\n    }));\n  }\n\n  onProfileFieldEdit(field, value) {\n    const { editableProfile } = this.state;\n    editableProfile[field] = value;\n    this.setState({ editableProfile });\n  }\n\n  async saveProfile() {\n    const { editableProfile } = this.state;\n    try {\n      await ProfileController.updateProfile(editableProfile);\n      this.setState({\n        profile: { ...editableProfile }\n      });\n      this.toggleEditable();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async inviteToProject(projectId) {\n    const { profile } = this.state;\n    const { showAlert } = this.props;\n    this.setState({ showInviteModal: false });\n\n    try {\n      await ProjectController.createInvite(profile.id, projectId);\n      showAlert(\n        'You have invited this user to your project.',\n        'success'\n      );\n    } catch (error) {\n      showAlert('You have already invited this user.', 'warning');\n    }\n  }\n\n  render() {\n    const {\n      profile,\n      editableProfile,\n      tab,\n      isEditable,\n      finishedLoading,\n      showInviteModal\n    } = this.state;\n\n    if (!profile) {\n      return (\n        <>\n          <Helmet>\n            <title>Profile</title>\n          </Helmet>\n          {finishedLoading\n            ? <h5>Profile not found.</h5>\n            : <Loading />\n          }\n        </>\n      );\n    }\n\n    return (\n      <>\n        <Helmet>\n          <title>{profile.username}</title>\n        </Helmet>\n        <InviteToProjectModal\n          show={showInviteModal}\n          onConfirm={this.inviteToProject}\n          onClose={() => this.setState({ showInviteModal: false })}\n        />\n        <Card className=\"profile-container\" bg=\"secondary\" border=\"secondary\">\n          <ProfileHeader\n            profile={profile}\n            tab={tab}\n            isEditable={isEditable}\n            onSaveProfile={this.saveProfile}\n            onToggleEditable={this.toggleEditable}\n            onInvite={() => this.setState({ showInviteModal: true })}\n            onTabChange={this.changeTab}\n          />\n          <Card.Body>\n            {tab === ProfileTab.OVERVIEW &&\n              <ProfileOverview\n                profile={profile}\n                editableProfile={editableProfile}\n                isEditable={isEditable}\n                onProfileFieldEdit={this.onProfileFieldEdit}\n              />\n            }\n            {tab === ProfileTab.PROJECTS &&\n              <ProfileProjects profile={profile} />\n            }\n            {tab === ProfileTab.INBOX &&\n              <ProfileInbox profile={profile} />\n            }\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default withRouter(withContext(Profile, 'profile-page'));","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\nimport Layout from '../../components/layout';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport EditableProject from '../../components/project/editableProject';\nimport UserController from '../../controllers/userController';\nimport ProjectController from '../../controllers/projectController';\nimport WebController from '../../controllers/webController';\nimport '../../styles/project.scss';\nimport '../../styles/createProject.scss';\n\nclass CreateProject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      project: {\n        ownerId: null,\n        name: '',\n        description: '',\n        directions: '',\n        languages: [],\n        interests: [],\n        selfJoinable: true,\n        status: 'Planning Phase',\n        type: 'public'\n      }\n    }\n\n    this.onProjectFieldEdit = this.onProjectFieldEdit.bind(this);\n    this.createProject = this.createProject.bind(this);\n  }\n\n  async componentDidMount() {\n    if (!UserController.isLoggedIn()) {\n      WebController.navigate('/');\n    } else {\n      const id = UserController.getToken().sub;\n      const { project } = this.state;\n      project.ownerId = id;\n      this.setState({ project });\n    }\n  }\n\n  onProjectFieldEdit(field, value) {\n    const { project } = this.state;\n    project[field] = value;\n    this.setState({ project });\n  }\n\n  async createProject() {\n    const { project } = this.state;\n    try {\n      const projectId = await ProjectController.createProject(project);\n      WebController.navigate(`/#/project/${projectId}`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const { project } = this.state;\n    const isCreateDisabled = project.name.trim() === '';\n\n    return (\n      <Layout className={\"project-page create-project-page\"}>\n        <Helmet>\n          <title>Create a Project</title>\n        </Helmet>\n        <Row>\n          <Col>\n            <Card className=\"project-container\" bg=\"secondary\" border=\"secondary\">\n              <Card.Header>\n                <br />\n                <h2><span>💡</span> Create a Project</h2>\n              </Card.Header>\n              <Card.Body>\n                <EditableProject\n                  project={project}\n                  onProjectFieldEdit={this.onProjectFieldEdit}\n                />\n                <hr />\n                <Button\n                  variant=\"dark\"\n                  size=\"lg\"\n                  onClick={this.createProject}\n                  block\n                  disabled={isCreateDisabled}\n                >\n                  Create\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Layout>\n    );\n  }\n}\n\nexport default withRouter(CreateProject);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Home from './pages/home';\nimport Projects from './pages/projects';\nimport Project from './pages/project';\nimport People from './pages/people';\nimport Profile from './pages/profile';\nimport CreateProject from './pages/projects/create';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path='/profile/:username'><Profile /></Route>\n        <Route path='/projects/create'><CreateProject /></Route>\n        <Route path='/projects'><Projects /></Route>\n        <Route path='/people'><People /></Route>\n        <Route path='/project/:id'><Project /></Route>\n        <Route exact path='/'><Home /></Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/default-profile.f540a12d.png\";"],"sourceRoot":""}