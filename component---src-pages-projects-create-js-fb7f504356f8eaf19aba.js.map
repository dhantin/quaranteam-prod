{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Row.js","webpack:///./src/pages/projects/create.js","webpack:///./src/components/project/editableProject.js"],"names":["DEVICE_SIZES","Row","forwardRef","_ref","ref","bsPrefix","className","noGutters","_ref$as","as","Component","props","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","apply","concat","displayName","defaultProps","CreateProject","state","project","ownerId","name","description","directions","languages","interests","selfJoinable","status","type","onProjectFieldEdit","bind","createProject","componentDidMount","a","UserController","isLoggedIn","id","getToken","sub","this","setState","navigate","field","value","ProjectController","projectId","console","log","render","isCreateDisabled","trim","bg","border","Header","Body","variant","size","onClick","block","disabled","React","STATUS_OPTIONS","map","label","EditableProject","onChange","convertToOption","item","Control","placeholder","event","target","maxLength","rows","options"],"mappings":"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","file":"component---src-pages-projects-create-js-fb7f504356f8eaf19aba.js","sourcesContent":["import \"core-js/modules/es6.array.for-each\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { navigate } from 'gatsby';\nimport Layout from '../../components/layout';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport EditableProject from '../../components/project/editableProject';\nimport UserController from '../../controllers/userController';\nimport ProjectController from '../../controllers/projectController';\nimport '../../styles/project.scss';\nimport '../../styles/createProject.scss';\n\nexport default class CreateProject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      project: {\n        ownerId: null,\n        name: '',\n        description: '',\n        directions: '',\n        languages: [],\n        interests: [],\n        selfJoinable: true,\n        status: 'Planning Phase',\n        type: 'public'\n      }\n    }\n\n    this.onProjectFieldEdit = this.onProjectFieldEdit.bind(this);\n    this.createProject = this.createProject.bind(this);\n  }\n\n  async componentDidMount() {\n    if (!UserController.isLoggedIn()) {\n      navigate('/');\n    } else {\n      const id = UserController.getToken().sub;\n      const { project } = this.state;\n      project.ownerId = id;\n      this.setState({ project });\n    }\n  }\n\n  onProjectFieldEdit(field, value) {\n    const { project } = this.state;\n    project[field] = value;\n    this.setState({ project });\n  }\n\n  async createProject() {\n    const { project } = this.state;\n    try {\n      const projectId = await ProjectController.createProject(project);\n      navigate(`/project/${projectId}`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const { project } = this.state;\n    const isCreateDisabled = project.name.trim() === '';\n\n    return (\n      <Layout className={\"project-page create-project-page\"}>\n        <Helmet>\n          <title>Create a Project</title>\n        </Helmet>\n        <Row>\n          <Col>\n            <Card className=\"project-container\" bg=\"secondary\" border=\"secondary\">\n              <Card.Header>\n                <br />\n                <h2><span>💡</span> Create a Project</h2>\n              </Card.Header>\n              <Card.Body>\n                <EditableProject\n                  project={project}\n                  onProjectFieldEdit={this.onProjectFieldEdit}\n                />\n                <hr />\n                <Button\n                  variant=\"dark\"\n                  size=\"lg\"\n                  onClick={this.createProject}\n                  block\n                  disabled={isCreateDisabled}\n                >\n                  Create\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Layout>\n    );\n  }\n}","import React from \"react\";\nimport { Form } from 'react-bootstrap';\nimport TagSelect from \"../TagSelect\";\nimport Select from 'react-select';\n\nconst NAME_MAX_LENGTH = 80;\n\nconst STATUS_OPTIONS =\n  ['Planning Phase', 'Design Phase', 'Development Phase', 'Testing Phase', 'Deployment Phase']\n    .map(status => ({ value: status, label: status }));\n\nexport default class EditableProject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.convertToOption = this.convertToOption.bind(this);\n  }\n\n  onChange(field, value) {\n    this.props.onProjectFieldEdit(field, value);\n  }\n\n  convertToOption(item) {\n    return {\n      label: item,\n      value: item\n    };\n  }\n\n  render() {\n    const { project } = this.props;\n\n    return (\n      <Form>\n        <h4><span>📋</span> Name <small>(required)</small></h4>\n        <Form.Control\n          value={project.name}\n          placeholder=\"A short title\"\n          onChange={event => this.onChange('name', event.target.value)}\n          maxLength={NAME_MAX_LENGTH}\n        />\n        <hr />\n        <h4><span>ℹ️</span> Description</h4>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"5\"\n          value={project.description || ''}\n          placeholder={'The project description is shown publicly to'\n                      + ' users who are interested in your project'\n                      + ' (Markdown is supported).'}\n          onChange={event => this.onChange('description', event.target.value)}\n        />\n        <hr />\n        <h4><span>💻</span> Directions</h4>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"5\"\n          value={project.directions || ''}\n          placeholder={'Directions are shown only to project members,'\n                      + ' and should include information like Discord/Slack'\n                      + ' links, onboarding directions, etc (Markdown is supported).'}\n          onChange={event => this.onChange('directions', event.target.value)}\n        />\n        <hr />\n        <h4><span>🧰</span> Skills</h4>\n        <TagSelect\n          type=\"skills\"\n          value={project.languages}\n          onChange={languages => this.onChange('languages', languages)}\n        />\n        <hr />\n        <h4><span>🧪</span> Interest Areas</h4>\n        <TagSelect\n          type=\"interests\"\n          value={project.interests}\n          onChange={interests => this.onChange('interests', interests)}\n        />\n        <hr />\n        <h4><span>👩‍🔬</span> Joinable By Others?</h4>\n        <Form.Control\n          as=\"select\"\n          onChange={event => this.onChange('selfJoinable', event.target.value === 'true')}\n          value={project.selfJoinable}\n        >\n          <option value={true}>Yes! Anyone can join on their own.</option>\n          <option value={false}>No, people need to ask before joining.</option>\n        </Form.Control>\n        <hr />\n        <h4><span>⏰</span> Project Status</h4>\n        <Select\n          type=\"status\"\n          options={STATUS_OPTIONS}\n          value={this.convertToOption(project.status)}\n          onChange={status => this.onChange('status', status.value)}\n        />\n        <hr />\n        <h4><span>👀</span> Hidden from others?</h4>\n        <Form.Control\n          as=\"select\"\n          onChange={event => this.onChange('type', event.target.value)}\n          value={project.type}\n        >\n          <option value=\"public\">No! The project will be visible to all!</option>\n          <option value=\"private\">Yes, only team members can see the project.</option>\n        </Form.Control>\n      </Form>\n    );\n  }\n}\n"],"sourceRoot":""}