{"version":3,"sources":["controllers/webController.js","controllers/graphqlClient.js","controllers/userController.js","components/header.js","components/modals/loginModal.js","components/layout.js","components/register.js","components/homeTimeline.js","controllers/projectController.js","controllers/profileController.js","pages/home.js","components/project/projectCard.js","components/loading.js","pages/projects.js","components/project/joinProjectButton.js","components/modals/confirmationModal.js","components/confirmationWrapper.js","components/project/projectHeader.js","controllers/requestController.js","components/modals/inviteMemberModal.js","controllers/tagController.js","components/TagSelect.js","components/project/editableProject.js","components/project/readOnlyProject.js","components/project/projectOverview.js","components/project/projectOwnerNux.js","components/project/projectMemberNux.js","controllers/nuxController.js","components/project/manageProjectMembers.js","pages/project.js","components/profile/readOnlyProfile.js","components/profile/profileCard.js","pages/people.js","components/profile/profileHeader.js","components/profile/editableProfile.js","components/profile/profileOverview.js","components/profile/profileProjects.js","components/profile/profileInbox.js","components/profile/profileNux.js","components/modals/inviteToProjectModal.js","controllers/imageController.js","components/modals/profilePictureModal.js","pages/profile.js","pages/projects/create.js","index.js","images/default-profile.png"],"names":["getQueryParams","hash","window","location","URLSearchParams","split","updateQueryParams","params","baseURL","href","paramsEmpty","toString","history","replaceState","navigate","route","pushState","reload","cookies","Cookies","httpLink","HttpLink","uri","authLink","ApolloLink","operation","forward","jwt","get","setContext","headers","client","ApolloClient","link","concat","cache","InMemoryCache","defaultOptions","query","fetchPolicy","REGISTER_MUTATION","gql","LOGIN_MUTATION","email","username","password","a","mutate","mutation","variables","res","data","register","jwtToken","set","path","WebController","message","login","getToken","jwtDecode","handleGitHubLogin","delete","isLoggedIn","logOut","remove","GITHUB_AUTH_URL","API_PREFIX","LoginIntent","Header","props","bind","UserController","showLoginModal","this","className","Navbar","variant","NavbarBrand","Nav","NavLink","Dropdown","drop","Toggle","size","Menu","Item","onClick","Button","React","Component","withContext","withRouter","LoginModal","state","isLoading","errorMessage","onChange","field","event","value","target","setState","onLogin","show","onClose","Modal","onHide","centered","handleFocusableElements","handleKeys","onKeyEvent","Col","closeButton","Title","Body","Alert","Form","Group","Control","type","placeholder","Footer","disabled","block","style","color","LayoutContext","createContext","Layout","isAlertVisible","isLoginModalVisible","loginIntent","alertType","alertText","followLoginIntent","showAlert","renderAlert","text","dismissible","children","context","Provider","pageClassName","consumer","Consumer","ERROR_MESSAGES","Register","error","isRegisterDisabled","trim","to","TimelineTab","TIMELINE_ELEMENT_PROPS","contentStyle","background","contentArrowStyle","borderRight","iconStyle","OWNER_STEPS","title","icon","MEMBER_STEPS","HomeTimeline","tab","changeTab","steps","ButtonGroup","active","map","step","i","key","GET_PROJ_COUNT_QUERY","GET_PROJECT_QUERY","GET_PROJECTS_QUERY","GET_FILTERED_PROJECTS_QUERY","GET_OWNED_PROJECTS_QUERY","CREATE_PROJECT_MUTATION","UPDATE_PROJECT_MUTATION","DELETE_PROJECT_MUTATION","allProjects","totalCount","project","id","projectById","pendingMembers","nodes","p","requestId","edges","requestStatus","status","requestType","node","search","createProject","profileId","profileById","ownedProjects","getProjects","getFilteredProjects","getOwnedProjects","getProject","deleteProject","updateProject","getProjCount","GET_PROF_COUNT_QUERY","GET_PROFILES_QUERY","GET_FILTERED_PROFILES_QUERY","PROFILE_QUERY","UPDATE_PROFILE_MUTATION","allProfiles","profile","profileByUsername","pendingProjects","bio","getProfile","updateProfile","getProfiles","getFilteredProfiles","getProfCount","Home","projectCount","profileCount","ProjectController","ProfileController","console","log","Helmet","Container","Row","xs","span","md","ProjectCard","Card","bg","textDecoration","name","Text","disallowedTypes","unwrapDisallowed","source","description","members","interests","length","interest","Badge","pill","languages","language","Loading","Spinner","animation","Projects","projects","displayedProjects","finishedLoading","retrieveProjects","debounce","updateSearch","renderHeader","renderProjects","renderCreateButton","fetchMoreProjects","slice","fetchedProjects","FormControl","hasMore","dataLength","next","loader","sm","fluid","showUnder","JoinProjectButton","sub","isOwner","ownerId","isMember","some","m","selfJoinable","ConfirmationModal","onConfirm","ConfirmationWrapper","showConfirmationModal","confirm","Children","child","cloneElement","ProjectHeader","onTabChange","fill","activeKey","ProjectTab","OVERVIEW","Link","eventKey","MANAGE","isEditable","isEditValid","onJoin","onLeave","onInvite","onToggleEditable","onSave","onDelete","isOwnProject","owner","renderNav","ACCEPT_MUTATION","DECLINE_MUTATION","CREATE_MEMBERSHIP_MUTATION","DELETE_MEMBERSHIP_MUTATION","CREATE_INVITE_MUTATION","CREATE_REQUEST_MUTATION","projectId","accept","decline","requestToJoinProject","joinProject","leaveProject","inviteToProject","InviteToProjectModal","profileOptions","selectedProfile","profiles","filter","convertToOption","label","isConfirmDisabled","options","SKILLS","INTERESTS","GET_SKILLS_QUERY","GET_INTERESTS_QUERY","allTags","t","getSkills","getInterests","formTheme","theme","colors","primary25","primary","backgroundColor","TagSelect","TagController","tags","convertToOptions","items","item","isMulti","STATUS_OPTIONS","ChatType","EditableProject","getChatType","changeChatType","renderChatChannelInput","onProjectFieldEdit","discordUrl","isCreateView","ToggleButtonGroup","ToggleButton","maxLength","as","rows","directions","ReadOnlyProject","membersCount","member","lang","ProjectOverview","editableProject","STEPS","content","disableBeacon","placement","ProjectOwnerNux","continuous","hideBackButton","scrollToFirstStep","showProgress","styles","primaryColor","tooltip","fontSize","tooltipContent","padding","ProjectMemberNux","parseBool","bool","hasShownProfileNux","localStorage","getItem","hasShownOwnerProjectNux","hasShownMemberProjectNux","setProfileNuxShown","setItem","setOwnerProjectNuxShown","setMemberProjectNuxShown","ManageProjectMembers","RequestController","ListGroup","kick","renderMembers","renderPendingMembers","Project","showInviteModal","runOwnerNux","runMemberNux","toggleEditable","saveProject","inviteMember","match","Number","triggerNux","setTabFromURL","isProjectOwner","isProjectMember","includes","NuxController","nextTab","prevState","border","DEFAULT_BIO","ReadOnlyProfile","ProfileCard","extraInterests","extraSkills","Image","src","pictureUrl","DEFAULT_PROFILE","roundedCircle","People","displayedProfiles","retrieveProfiles","fetchMoreProfiles","renderProfiles","fetchedProfiles","ProfileHeader","isOwnProfile","ProfileTab","PROJECTS","INBOX","onUpdatePicture","lg","offset","Figure","Caption","onSaveProfile","showEditOptions","renderPicture","renderHeaderRight","EditableProfile","onProfileFieldEdit","ProfileOverview","editableProfile","ProfileProjects","actionText","getPersonalizedText","PROJECT_STATUS","ProfileInbox","requestedProjects","invitedProjects","renderRequests","renderInvites","ProfileNux","projectOptions","selectedProject","imageBlob","formData","FormData","append","config","axios","post","upload","ProfilePictureModal","image","setEditorRef","selectImage","editor","getImage","toBlob","blob","ImageController","uploadURL","confirmDisabled","onDrop","noKeyboard","noClick","getRootProps","getInputProps","ref","Profile","showPictureModal","runNux","saveProfile","updatePicture","createInvite","CreateProject","isCreateDisabled","logAnalytics","action","ReactGA","pageview","pathname","initialize","createHistory","App","exact","listen","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0tBAqBe,OACbA,eAtBF,WACE,IAAMC,EAAOC,OAAOC,SAASF,KAC7B,OAAO,IAAIG,gBAAgBH,EAAKI,MAAM,KAAK,KAqB3CC,kBAlBF,SAA2BC,GACzB,IAAMC,EAAUN,OAAOC,SAASM,KAAKJ,MAAM,KAAK,GAC1CK,EAAoC,KAAtBH,EAAOI,WAE3BT,OAAOU,QAAQC,aACb,GACA,GACAL,GAAWE,EAAc,GAAK,KAAOH,EAAOI,aAY9CG,SARF,SAAkBC,GAChBb,OAAOU,QAAQI,UAAU,GAAI,GAAID,GACjCb,OAAOC,SAASc,W,mCCVZC,EAAU,IAAIC,IAEdC,EAAW,IAAIC,IAAS,CAC5BC,IAEI,iDAGAC,EAAW,IAAIC,KAAW,SAACC,EAAWC,GAC1C,IAAMC,EAAMT,EAAQU,IAAI,OAUxB,OARID,GACFF,EAAUI,WAAW,CACnBC,QAAS,CACP,cAAgB,UAAhB,OAA2BH,MAK1BD,EAAQD,MAGJM,EAAS,IAAIC,IAAa,CACrCC,KAAMV,EAASW,OAAOd,GACtBe,MAAO,IAAIC,IACXC,eAAgB,CACdC,MAAO,CACLC,YAAa,e,wgBC7BnB,IAKMrB,EAAU,IAAIC,IAEdqB,EAAoBC,IAAH,KAWjBC,EAAiBD,IAAH,K,4CAUpB,WAAwBE,EAAOC,EAAUC,GAAzC,iBAAAC,EAAA,+EAEsBf,EAAOgB,OAAO,CAC9BC,SAAUR,EACVS,UAAW,CAAEN,QAAOC,WAAUC,cAJpC,OAEUK,EAFV,OAOUvB,EAAMuB,EAAIC,KAAKC,SAASC,SAC9BnC,EAAQoC,IAAI,MAAO3B,EAAK,CAAE4B,KAAM,MAEhCC,EAAc1C,SAAd,qBAAqC8B,IAVzC,sDAYU,CACJa,QAAS,0DAbf,0D,kEAkBA,WAAqBd,EAAOE,GAA5B,iBAAAC,EAAA,+EAEsBf,EAAOgB,OAAO,CAC9BC,SAAUN,EACVO,UAAW,CAAEN,QAAOE,cAJ1B,UAEUK,EAFV,SAOUvB,EAAMuB,EAAIC,KAAKO,MAAML,UAP/B,wBASMnC,EAAQoC,IAAI,MAAO3B,EAAK,CAAE4B,KAAM,MATtC,kBAUa,CAAE5B,QAVf,aAYY,CAAE8B,QAAS,iCAZvB,gI,sBA4CA,SAASE,IACP,IAAMhC,EAAMT,EAAQU,IAAI,OACxB,IAAKD,EACH,OAAO,KAET,IACE,OAAOiC,IAAUjC,GACjB,SACA,OAAO,MAQI,OACbyB,S,gDACAM,M,8CACAG,kBA5CF,WACE,IAAMtD,EAASiD,EAAcxD,iBACvB2B,EAAMpB,EAAOqB,IAAI,OACvBrB,EAAOuD,OAAO,OACdN,EAAclD,kBAAkBC,GAE5BoB,IACFT,EAAQoC,IAAI,MAAO3B,EAAK,CAAE4B,KAAM,MAChCC,EAAc1C,SAAd,qBAAqC6C,IAAWf,aAqClDmB,WAjCF,WACE,IAAMpC,EAAMT,EAAQU,IAAI,OACxB,IAAKD,EACH,OAAO,EAET,IAEE,OADAiC,IAAUjC,IACH,EACP,SACA,OAAO,IAyBTqC,OATF,WACE9C,EAAQ+C,OAAO,MAAO,CAAEV,KAAM,OAS9BI,WACAO,gBAAiBC,oDAGNC,EACF,UADEA,EAEK,iBC7GZC,I,yDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDN,OAAS,EAAKA,OAAOO,KAAZ,gBAHG,E,qDAOjBC,EAAeR,SACf9D,OAAOU,QAAQI,UAAU,GAAI,GAAI,KACjCd,OAAOC,SAASc,W,+BAGR,IACAwD,EAAmBC,KAAKJ,MAAxBG,eACF7B,EAAW4B,EAAeT,aAC5BS,EAAeb,WAAWf,SAC1B,KAEJ,OACE,4BAAQ+B,UAAU,UAChB,6BACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,QACd,kBAACC,EAAA,EAAD,CAAarE,KAAK,KAAI,8CAAtB,eACA,kBAACsE,EAAA,EAAD,CAAKJ,UAAU,WACb,kBAACK,EAAA,EAAD,CACEL,UAAU,sBACVlE,KAAK,eAFP,YAMA,kBAACuE,EAAA,EAAD,CAASvE,KAAK,aAAd,UAEC+D,EAAeT,aAEZ,kBAACkB,EAAA,EAAD,CAAUC,KAAK,QACb,kBAACD,EAAA,EAASE,OAAV,CAAiBN,QAAQ,gBAAgBO,KAAK,KAAKT,UAAU,iBAC3D,kBAAC,IAAD,OAEF,kBAACM,EAAA,EAASI,KAAV,KACE,kBAACJ,EAAA,EAASK,KAAV,CAAe7E,KAAI,qBAAgBmC,IAAnC,cAGA,kBAACqC,EAAA,EAASK,KAAV,CAAe7E,KAAI,qBAAgBmC,EAAhB,kBAAnB,eAGA,kBAACqC,EAAA,EAASK,KAAV,CAAe7E,KAAI,qBAAgBmC,EAAhB,eAAnB,YAGA,kBAACqC,EAAA,EAASK,KAAV,CAAe7E,KAAI,sBAAnB,kBAGA,kBAACwE,EAAA,EAASK,KAAV,CAAeC,QAASb,KAAKV,QAA7B,YAIJ,kBAACwB,EAAA,EAAD,CACEb,UAAU,YACVE,QAAQ,QACRU,QAAS,kBAAMd,EAAeL,KAHhC,iB,GAxDGqB,IAAMC,YAyEZC,MAAYC,YAAWvB,K,yDC9EjBwB,I,yDACnB,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXnD,MAAO,GACPE,SAAU,GACVkD,WAAW,EACXC,aAAc,MAGhB,EAAKC,SAAW,EAAKA,SAAS1B,KAAd,gBAChB,EAAKb,MAAQ,EAAKA,MAAMa,KAAX,gBAXI,E,qDAcV2B,EAAOC,GACd,IAAMC,EAAQD,EAAME,OAAOD,MAC3B1B,KAAK4B,SAAL,gBAAiBJ,EAAQE,M,2JAIzB1B,KAAK4B,SAAS,CAAEP,WAAW,IACnBQ,EAAY7B,KAAKJ,MAAjBiC,Q,EACoB7B,KAAKoB,MAAzBnD,E,EAAAA,MAAOE,E,EAAAA,S,kBAGP2B,EAAed,MAAMf,EAAOE,G,OAClC0D,I,gDAEA7B,KAAK4B,SAAS,CAAEN,aAAc,KAAMvC,U,QAEtCiB,KAAK4B,SAAS,CAAEP,WAAW,I,8IAGnB,IAAD,SACmBrB,KAAKJ,MAAvBkC,EADD,EACCA,KAAMC,EADP,EACOA,QADP,EAE6B/B,KAAKoB,MAAjCE,EAFD,EAECA,aAAcD,EAFf,EAEeA,UAEtB,OACE,kBAACW,GAAA,EAAD,CACEF,KAAMA,EACN7B,UAAU,QACVgC,OAAQF,EACRrB,KAAK,KACLwB,UAAQ,GAER,kBAAC,KAAD,CACEC,yBAAyB,EACzBC,WAAY,CAAC,SACbC,WAAYrC,KAAKhB,QAEnB,kBAACsD,EAAA,EAAD,KACE,kBAACN,GAAA,EAAMrC,OAAP,CAAc4C,aAAW,GACvB,kBAACP,GAAA,EAAMQ,MAAP,KACE,gEADF,WAIF,kBAACR,GAAA,EAAMS,KAAP,CAAYxC,UAAU,aACnBqB,GAAgB,kBAACoB,GAAA,EAAD,CAAOvC,QAAQ,UAAUmB,GAC1C,kBAACqB,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,QAAN,CAAcC,KAAK,QAAQC,YAAY,QAAQxB,SAAU,SAACE,GAAD,OAAW,EAAKF,SAAS,QAASE,OAE7F,kBAACkB,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWxB,SAAU,SAACE,GAAD,OAAW,EAAKF,SAAS,WAAYE,SAI1G,kBAACO,GAAA,EAAMgB,OAAP,KACE,kBAAClC,EAAA,EAAD,CACEX,QAAQ,UACRU,QAASb,KAAKhB,MACdiE,SAAU5B,EACV6B,OAAK,GAEJ7B,EAAY,gBAAkB,SAEjC,qCACA,kBAACP,EAAA,EAAD,CAAQ/E,KAAM+D,EAAeN,gBAAiBW,QAAQ,UAAU+C,OAAK,GACnE,8BAAM,kBAAC,IAAD,CAAUjD,UAAU,OAAOS,KAAK,UAAtC,wBAGJ,6BACA,0DAGE,uBAAG3E,KAAK,IAAIoH,MAAO,CAAEC,MAAO,YAA5B,oBAGJ,kC,GAzFgCrC,IAAMC,YCDjCqC,I,OAAgBtC,IAAMuC,iBAE7BC,G,kDACJ,WAAY3D,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXoC,gBAAgB,EAChBC,qBAAqB,EACrBC,YAAa,KACbC,UAAW,KACXC,UAAW,MAGb,EAAKC,kBAAoB,EAAKA,kBAAkBhE,KAAvB,gBACzB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKiE,UAAY,EAAKA,UAAUjE,KAAf,gBACjB,EAAKkE,YAAc,EAAKA,YAAYlE,KAAjB,gBAdF,E,gEAkBjBG,KAAK4B,SAAS,CAAE6B,qBAAqB,IADnB,IAEVC,EAAgB1D,KAAKoB,MAArBsC,YAER,GAAIA,IAAgBhE,EAAqB,CACvC,IAAMxB,EAAW4B,EAAeb,WAAWf,SAC3CY,EAAc1C,SAAd,qBAAqC8B,SAC5BwF,IAAgBhE,GACzBZ,EAAc1C,SAAd,wB,qCAIWsH,GACb1D,KAAK4B,SAAS,CACZ6B,qBAAqB,EACrBC,kB,gCAIMM,EAAMlB,GACd9C,KAAK4B,SAAS,CACZ4B,gBAAgB,EAChBG,UAAWb,EACXc,UAAWI,M,oCAIA,IAAD,SACqChE,KAAKoB,MAA9CoC,EADI,EACJA,eAAgBG,EADZ,EACYA,UAAWC,EADvB,EACuBA,UAEnC,OAAKJ,EAKH,kBAACd,GAAA,EAAD,CACEzC,UAAU,eACVE,QAASwD,EACTM,aAAa,EACblC,QAAS,kBAAM,EAAKH,SAAS,CAAE4B,gBAAgB,MAE9CI,GAVI,O,+BAeD,IAAD,SACyB5D,KAAKJ,MAA7BK,EADD,EACCA,UAAWiE,EADZ,EACYA,SACXT,EAAwBzD,KAAKoB,MAA7BqC,oBAEFU,EAAU,CACdL,UAAW9D,KAAK8D,UAChB/D,eAAgBC,KAAKD,gBAGvB,OACE,kBAACsD,GAAce,SAAf,CAAwB1C,MAAOyC,GAC7B,kBAAC,GAAD,MACA,kBAAC,GAAD,CACErC,KAAM2B,EACN1B,QAAS,kBAAM,EAAKH,SAAS,CAAE6B,qBAAqB,KACpD5B,QAAS7B,KAAK6D,oBAEhB,yBAAK5D,UAAU,mBACZD,KAAK+D,cACN,0BAAM9D,UAAWA,GAAYiE,S,GAnFlBnD,IAAMC,WA0FpB,SAASC,GAAYD,EAAWqD,GACrC,OAAO,SAA4BzE,GACjC,IAAM0E,EACJ,kBAACjB,GAAckB,SAAf,MACG,SAAAJ,GAAO,OACN,kBAACnD,EAAD,iBACMpB,EADN,CAEEkE,UAAWK,EAAQL,UACnB/D,eAAgBoE,EAAQpE,qBAMhC,OAAIsE,EAEA,kBAAC,GAAD,CAAQpE,UAAWoE,GAChBC,GAKAA,GAIIpD,mBAAWqC,ICpHpBiB,GAAiB,CACrB,UAAa,0DAGTC,G,kDACJ,WAAY7E,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXnD,MAAO,GACPC,SAAU,GACVC,SAAU,GACVmD,aAAc,MAGhB,EAAKC,SAAW,EAAKA,SAAS1B,KAAd,gBAChB,EAAKnB,SAAW,EAAKA,SAASmB,KAAd,gBAXC,E,gEAejB,IACM6E,EADS5F,EAAcxD,iBACR4B,IAAI,SAErBwH,GACF1E,KAAK4B,SAAS,CACZN,aAAckD,GAAeE,IAAU,iC,+BAKpClD,EAAOC,GACd,IAAMC,EAAQD,EAAME,OAAOD,MAC3B1B,KAAK4B,SAAL,gBAAiBJ,EAAQE,M,gKAIa1B,KAAKoB,MAAnCnD,E,EAAAA,MAAOC,E,EAAAA,SAAUC,E,EAAAA,S,kBAGjB2B,EAAepB,SAAST,EAAOC,EAAUC,G,OAC/CW,EAAc1C,SAAd,qBAAqC8B,I,gDAErC8B,KAAK4B,SAAS,CAAEN,aAAc,KAAMvC,U,8IAI9B,IAAD,OACCgB,EAAmBC,KAAKJ,MAAxBG,eADD,EAOHC,KAAKoB,MAJPnD,EAHK,EAGLA,MACAC,EAJK,EAILA,SACAC,EALK,EAKLA,SACAmD,EANK,EAMLA,aAGIqD,EAAsC,KAAjB1G,EAAM2G,QACX,KAApB1G,EAAS0G,QAAqC,KAApBzG,EAASyG,OAErC,OACI,yBAAK3E,UAAU,YACb,iDAGCqB,GAAgB,kBAACoB,GAAA,EAAD,CAAOvC,QAAQ,UAAUmB,GAC1C,kBAACqB,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,QAAN,CAAcC,KAAK,QAAQC,YAAY,QAAQxB,SAAU,SAACE,GAAD,OAAW,EAAKF,SAAS,QAASE,OAE7F,kBAACkB,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWxB,SAAU,SAACE,GAAD,OAAW,EAAKF,SAAS,WAAYE,OAElG,kBAACkB,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWxB,SAAU,SAACE,GAAD,OAAW,EAAKF,SAAS,WAAYE,OAEtG,kBAACX,EAAA,EAAD,CAAQD,QAASb,KAAKtB,SAAUyB,QAAQ,UAAU+C,OAAK,EAACD,SAAU0B,GAAlE,YAGA,qCACA,kBAAC7D,EAAA,EAAD,CAAQ/E,KAAM+D,EAAeN,gBAAiBW,QAAQ,UAAU+C,OAAK,GACnE,8BAAM,kBAAC,IAAD,CAAUjD,UAAU,OAAOS,KAAK,UAAtC,0BAEF,uDAEE,2BACE,kBAAC,IAAD,CAAMmE,GAAG,IAAIhE,QAAS,kBAAMd,EAAeL,KAA3C,kB,GAhFOqB,IAAMC,WAyFdC,MAAYC,YAAWuD,K,mBChGhCK,I,cACG,SADHA,GAEI,SAGJC,GAAyB,CAC7BC,aAAc,CAAEC,WAAY,UAAW7B,MAAO,QAC9C8B,kBAAmB,CAAEC,YAAa,qBAClCC,UAAW,CAAEH,WAAY,UAAW7B,MAAO,SAGvCiC,GAAc,CAClB,CACEC,MAAO,WACPtB,KAAM,yFACNuB,KAAM,kBAAC,IAAD,OAER,CACED,MAAO,SACPtB,KAAM,0EACNuB,KAAM,kBAAC,IAAD,OAER,CACED,MAAO,mBACPtB,KAAM,iPAGNuB,KAAM,kBAAC,IAAD,OAER,CACED,MAAO,eACPtB,KAAM,mJAENuB,KAAM,kBAAC,IAAD,OAER,CACED,MAAO,WACPtB,KAAM,+IAENuB,KAAM,kBAAC,IAAD,QAIJC,GAAe,CACnB,CACEF,MAAO,WACPtB,KAAM,yFACNuB,KAAM,kBAAC,IAAD,OAER,CACED,MAAO,iBACPtB,KAAM,qIAENuB,KAAM,kBAAC,IAAD,OAER,CACED,MAAO,iBACPtB,KAAM,yJAENuB,KAAM,kBAAC,IAAD,OAER,CACED,MAAO,WACPtB,KAAM,0IAENuB,KAAM,kBAAC,IAAD,QAIWE,G,kDACnB,WAAY7F,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXsE,IAAKZ,IAGP,EAAKa,UAAY,EAAKA,UAAU9F,KAAf,gBAPA,E,sDAUT6F,GACR1F,KAAK4B,SAAS,CAAE8D,U,+BAGR,IAAD,OACCA,EAAQ1F,KAAKoB,MAAbsE,IACFE,EAAQF,IAAQZ,GAAoBO,GAAcG,GAExD,OACE,yBAAKvF,UAAU,iBACb,wBAAIA,UAAU,mBAAkB,8CAAhC,sBACA,kBAAC4F,GAAA,EAAD,CAAa5F,UAAU,eACrB,kBAACa,EAAA,EAAD,CACED,QAAS,kBAAM,EAAK8E,UAAUb,KAC9BgB,OAAQJ,IAAQZ,GAChB3E,QAAQ,aAHV,yBAOA,kBAACW,EAAA,EAAD,CACED,QAAS,kBAAM,EAAK8E,UAAUb,KAC9BgB,OAAQJ,IAAQZ,GAChB3E,QAAQ,aAHV,6BAQF,kBAAC,oBAAD,KACGyF,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACT,kBAAC,2BAAD,iBACMlB,GADN,CAEEQ,KAAMS,EAAKT,KACXW,IAAKD,IAEL,4BAAKD,EAAKV,OACV,uBAAGrF,UAAU,gBACV+F,EAAKhC,gB,GA/CoBjD,IAAMC,W,ogHC1EhD,IAAMmF,GAAuBpI,IAAH,MAQpBqI,GAAoBrI,IAAH,MAqBjBsI,GAAqBtI,IAAH,MAiBlBuI,GAA8BvI,IAAH,MAyB3BwI,GAA2BxI,IAAH,MAUxByI,GAA0BzI,IAAH,MAoCvB0I,GAA0B1I,IAAH,MAkCvB2I,GAA0B3I,IAAH,M,8CAQ7B,4BAAAK,EAAA,+EAEsBf,EAAOO,MAAM,CAC7BA,MAAOuI,KAHb,cAEU3H,EAFV,yBAKWA,EAAIC,KAAKkI,YAAYC,YALhC,qG,oEAWA,WAA6BC,GAA7B,SAAAzI,EAAA,+EAEUf,EAAOgB,OAAO,CAClBC,SAAUmI,GACVlI,UAAWsI,IAJjB,0H,oEAWA,WAA6BC,GAA7B,SAAA1I,EAAA,+EAEUf,EAAOgB,OAAO,CAClBC,SAAUoI,GACVnI,UAAW,CAAEuI,QAJnB,0H,oEAWA,WAA0BA,GAA1B,iBAAA1I,EAAA,+EAEsBf,EAAOO,MAAM,CAC7BA,MAAOwI,GACP7H,UAAW,CAAEuI,QAJnB,cAEUtI,EAFV,QAMUqI,EAAUrI,EAAIC,KAAKsI,aAGjBC,eAAeC,MACrBJ,EAAQG,eAAeC,MAAMlB,KAAI,SAACmB,EAAGjB,GAAJ,uBAC5BiB,EAD4B,CAE/BC,UAAWN,EAAQG,eAAeI,MAAMnB,GAAGa,GAC3CO,cAAeR,EAAQG,eAAeI,MAAMnB,GAAGqB,OAC/CC,YAAaV,EAAQG,eAAeI,MAAMnB,GAAGnD,UAdrD,kBAiBW+D,GAjBX,qG,oEAuBA,4BAAAzI,EAAA,+EAEsBf,EAAOO,MAAM,CAC7BA,MAAOyI,KAHb,cAEU7H,EAFV,yBAMWA,EAAIC,KAAKkI,YAAYS,MAAMrB,KAAI,SAAAmB,GAAC,OAAIA,EAAEM,SANjD,qG,oEAYA,WAAmCC,GAAnC,eAAArJ,EAAA,+EAEsBf,EAAOO,MAAM,CAC7BA,MAAO0I,GACP/H,UAAW,CAAEkJ,YAJnB,cAEUjJ,EAFV,yBAOWA,EAAIC,KAAKkI,YAAYS,MAAMrB,KAAI,SAAAmB,GAAC,OAAIA,EAAEM,SAPjD,qG,oEAaA,WAA6BX,GAA7B,eAAAzI,EAAA,+EAEsBf,EAAOgB,OAAO,CAC9BC,SAAUkI,GACVjI,UAAWsI,IAJjB,cAEUrI,EAFV,yBAMWA,EAAIC,KAAKiJ,cAAcb,QAAQC,IAN1C,qG,oEAYA,WAAgCa,GAAhC,eAAAvJ,EAAA,+EAEsBf,EAAOO,MAAM,CAC7BA,MAAO2I,GACPhI,UAAW,CAAEoJ,eAJnB,cAEUnJ,EAFV,yBAOWA,EAAIC,KAAKmJ,YAAYC,cAAcZ,OAP9C,qG,sBAae,QACba,Y,4CACAC,oB,6CACAC,iB,6CACAC,W,6CACAP,c,6CACAQ,c,6CACAC,c,6CACAC,a,68DCjRF,IAAMC,GAAuBtK,IAAH,MAQpBuK,GAAqBvK,IAAH,MAiBlBwK,GAA8BxK,IAAH,MA2B3ByK,GAAgBzK,IAAH,MAcb0K,GAA0B1K,IAAH,M,8CAqB7B,4BAAAK,EAAA,+EAEsBf,EAAOO,MAAM,CAC7BA,MAAOyK,KAHb,cAEU7J,EAFV,yBAMWA,EAAIC,KAAKiK,YAAY9B,YANhC,qG,oEAYA,WAA0B1I,GAA1B,iBAAAE,EAAA,+EAEsBf,EAAOO,MAAM,CAC7BA,MAAO4K,GACPjK,UAAW,CAAEL,cAJnB,cAEUM,EAFV,QAOUmK,EAAUnK,EAAIC,KAAKmK,mBAGjBC,gBAAgB5B,MACtB0B,EAAQE,gBAAgB5B,MAAMlB,KAAI,SAACmB,EAAGjB,GAAJ,uBAC/BiB,EAD+B,CAElCC,UAAWwB,EAAQE,gBAAgBzB,MAAMnB,GAAGa,GAC5CO,cAAesB,EAAQE,gBAAgBzB,MAAMnB,GAAGqB,OAChDC,YAAaoB,EAAQE,gBAAgBzB,MAAMnB,GAAGnD,UAfpD,kBAkBW6F,GAlBX,qG,oEAwBA,WAA6BA,GAA7B,SAAAvK,EAAA,6DACEuK,EAAQG,IAAMH,EAAQG,KAAO,KAD/B,kBAGUzL,EAAOgB,OAAO,CAClBC,SAAUmK,GACVlK,UAAWoK,IALjB,0H,oEAYA,4BAAAvK,EAAA,+EAEsBf,EAAOO,MAAM,CAC7BA,MAAO0K,KAHb,cAEU9J,EAFV,yBAMWA,EAAIC,KAAKiK,YAAYtB,MAAMrB,KAAI,SAAAmB,GAAC,OAAIA,EAAEM,SANjD,qG,oEAYA,WAAmCC,GAAnC,eAAArJ,EAAA,+EAEsBf,EAAOO,MAAM,CAC7BA,MAAO2K,GACPhK,UAAW,CAAEkJ,YAJnB,cAEUjJ,EAFV,yBAOWA,EAAIC,KAAKiK,YAAYtB,MAAMrB,KAAI,SAAAmB,GAAC,OAAIA,EAAEM,SAPjD,qG,sBAae,QACbuB,W,6CACAC,c,6CACAC,Y,4CACAC,oB,6CACAC,a,6CC7JmBC,I,yDACnB,WAAYxJ,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXiI,aAAc,EACdC,aAAc,GALC,E,yLAUjBxJ,EAAeX,oB,kBAGcoK,GAAkBnB,e,cAAvCiB,E,gBACqBG,GAAkBL,e,OAAvCG,E,OACNtJ,KAAK4B,SAAS,CAAEyH,eAAcC,iB,kDAE9BG,QAAQC,IAAR,M,+IAIM,IAAD,EACgC1J,KAAKoB,MAApCkI,EADD,EACCA,aAAcD,EADf,EACeA,aAEtB,OACE,oCACE,kBAAC,GAAD,CAAQpJ,UAAU,aAChB,kBAAC0J,EAAA,EAAD,KACE,8CAEF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACvH,EAAA,EAAD,CAAKwH,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,GAAK9J,UAAU,aAChD,wBAAIA,UAAU,eACZ,8CADF,eAGA,6BACA,uMAKA,2BACE,yCADF,iFAEiB,2BAAIqJ,GAFrB,uBAGG,2BAAID,GAHP,eAMF,kBAAC/G,EAAA,EAAD,CAAKwH,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,IACjC,kBAAC,GAAD,QAGJ,6BACA,kBAAC,GAAD,OAEF,gCACE,0DAGJ,yBAAK9J,UAAU,UACf,yBAAKA,UAAU,mB,GA7DWc,IAAMC,Y,0FCDzB,SAASiJ,GAAT,GAAmC,IAAZpD,EAAW,EAAXA,QACpC,OACE,kBAACqD,GAAA,EAAD,CAAMjK,UAAU,cAAckK,GAAG,aAC/B,uBAAGpO,KAAI,qBAAgB8K,EAAQC,IAAM3D,MAAO,CAAEC,MAAO,UAAWgH,eAAgB,YAC9E,kBAACF,GAAA,EAAKzH,KAAN,KACE,kBAACyH,GAAA,EAAKvK,OAAN,KAAckH,EAAQwD,MACtB,kBAACH,GAAA,EAAKI,KAAN,KACE,kBAAC,KAAD,CACErK,UAAU,WACVsK,gBAAiB,CAAC,UAAW,OAAQ,SACrCC,kBAAkB,EAClBC,OAAQ5D,EAAQ6D,aAbF,iDAiBpB,kBAACR,GAAA,EAAKlH,OAAN,KACE,uCADF,IACmB6D,EAAQ8D,QAAQ/D,WAAa,EAC9C,6BACA,sCAHF,IAGkBC,EAAQS,QAAU,cAClC,6BAECT,EAAQ+D,UAAUC,OAAS,GAC1B,oCACE,0CACChE,EAAQ+D,UAAU7E,KAAI,SAAA+E,GAAQ,OAC7B,kBAACC,GAAA,EAAD,CAAOC,MAAI,EAAC9E,IAAK4E,EAAU3K,QAAQ,QAChC2K,MAGL,8BAIHjE,EAAQoE,UAAUJ,OAAS,GAC1B,oCACE,uCACChE,EAAQoE,UAAUlF,KAAI,SAAAmF,GAAQ,OAC7B,kBAACH,GAAA,EAAD,CAAOC,MAAI,EAAC9E,IAAKgF,EAAU/K,QAAQ,QAChC+K,U,qBC5CJ,SAASC,KACtB,OACE,yBAAKlL,UAAU,WACb,kBAACmL,GAAA,EAAD,CAASC,UAAU,OAAOlL,QAAQ,UAClC,2C,wBCWAmL,G,kDACJ,WAAY1L,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXmK,SAAU,GACVC,kBAAmB,GACnB/D,OAAQ,GACRgE,iBAAiB,GAGnB,EAAKC,iBAAmBC,aAfR,IAiBd,EAAKD,iBAAiB7L,KAAtB,iBAEF,EAAK+L,aAAe,EAAKA,aAAa/L,KAAlB,gBACpB,EAAKgM,aAAe,EAAKA,aAAahM,KAAlB,gBACpB,EAAKiM,eAAiB,EAAKA,eAAejM,KAApB,gBACtB,EAAKkM,mBAAqB,EAAKA,mBAAmBlM,KAAxB,gBAC1B,EAAKmM,kBAAoB,EAAKA,kBAAkBnM,KAAvB,gBAlBR,E,0KAsBjBG,KAAK0L,mB,sLAGgBjE,G,0EACrBzH,KAAK4B,SAAS,CAAE6J,iBAAiB,I,UAGdhE,E,gCACP8B,GAAkBxB,oBAAoBN,G,2DACtC8B,GAAkBzB,c,4BAFtByD,E,KAINvL,KAAK4B,SAAS,CACZ2J,WACAC,kBAAmBD,EAASU,MAAM,EAvCf,K,kDA0CrBxC,QAAQC,IAAR,M,QAGF1J,KAAK4B,SAAS,CAAE6J,iBAAiB,I,oJAGtBhE,GACXzH,KAAK4B,SAAS,CAAE6F,a,0CAGG,IAAD,EACsBzH,KAAKoB,MAArCmK,EADU,EACVA,SAAUC,EADA,EACAA,kBACZU,EAAkBX,EAASU,MAC/BT,EAAkBX,OAClBW,EAAkBX,OAxDG,GA2DvB7K,KAAK4B,SAAS,CACZ4J,kBAAmBA,EAAkBhO,OAAO0O,O,2CAI1B,IAAD,OACnB,OACE,kBAACpL,EAAA,EAAD,CACED,QAAS,WACHf,EAAeT,cACjB7D,OAAOU,QAAQI,UAAU,GAAI,GAAI,sBACjCd,OAAOC,SAASc,WAGhBwD,EAD2B,EAAKH,MAAxBG,gBACOL,IAGnBO,UAAU,kBACVE,QAAQ,gBACRmF,MAAM,oBAZR,O,qCAmBY,IAAD,OACLmC,EAAWzH,KAAKoB,MAAhBqG,OAER,OACE,oCACE,4BACE,8CADF,YAEKzH,KAAK+L,sBAEV,0FAGA,kBAACI,GAAA,EAAD,CACEpJ,YAAY,wCACZ9C,UAAU,SACVyB,MAAO+F,EACP3E,KAAK,OACLpC,KAAK,KACLa,SAAQ,uCAAE,WAAOE,GAAP,eAAArD,EAAA,6DACFqJ,EAAShG,EAAME,OAAOD,MAC5B,EAAKkK,aAAanE,GAFV,SAGF,EAAKiE,iBAAiBjE,GAHpB,2CAAF,2D,uCASE,IAAD,EAC0CzH,KAAKoB,MAAtDmK,EADO,EACPA,SAAUE,EADH,EACGA,gBAAiBD,EADpB,EACoBA,kBAC7BY,EAAUb,EAASV,OAASW,EAAkBX,OAEpD,OAAKY,EAImB,IAApBF,EAASV,OACJ,6DAIP,kBAAC,KAAD,CACEwB,WAAYb,EAAkBX,OAC9ByB,KAAMtM,KAAKgM,kBACXI,QAASA,EACTG,OAAQ,0BAAMtM,UAAU,sBAAhB,eAER,kBAAC4J,EAAA,EAAD,KACG2B,EAAkBzF,KAAI,SAAAmB,GAAC,OACtB,kBAAC5E,EAAA,EAAD,CAAKkK,GAAG,IAAItG,IAAKgB,EAAEJ,IACjB,kBAACmD,GAAD,CAAapD,QAASK,UAjBvB,kBAACiE,GAAD,Q,+BA0BT,OACE,oCACE,kBAACxB,EAAA,EAAD,KACE,4CAEF,kBAACC,EAAA,EAAD,CAAW6C,OAAK,GACbzM,KAAK6L,eACL7L,KAAK8L,kBAER,kBAAC,KAAD,CAAaY,UAvJY,KAwJvB,4BAAI,kBAAC,IAAD,CAAWpH,MAAM,yB,GAtJRvE,IAAMC,WA6JdC,MAAYC,YAAWoK,IAAW,iB,MC3KlC,SAASqB,GAAT,GAAkD,IAArB9F,EAAoB,EAApBA,QAAShG,EAAW,EAAXA,QACnD,IAAKf,EAAeT,aAClB,OAAO,KAGT,IAAMsI,EAAY7H,EAAeb,WAAW2N,IACtCC,EAAUlF,IAAcd,EAAQiG,QAChCC,EACJlG,EAAQ8D,QAAQ1D,MAAM+F,MAAK,SAAAC,GAAC,OAAIA,EAAEnG,KAAOa,KAE3C,OAAIkF,GAAWE,EACN,KAIPlG,EAAQG,eAAeC,MAAM+F,MAAK,SAAAC,GAAC,OAAIA,EAAEnG,KAAOa,KAI9C,kBAAC7G,EAAA,EAAD,CAAQX,QAAQ,OAAOO,KAAK,KAAKuC,UAAQ,GAAzC,6BAOF,kBAACnC,EAAA,EAAD,CAAQX,QAAQ,OAAOO,KAAK,KAAKG,QAASA,GACvCgG,EAAQqG,aAAe,eAAiB,mB,OC1BhC,SAASC,GAAkBvN,GAAQ,IACxCkC,EAAsClC,EAAtCkC,KAAM/C,EAAgCa,EAAhCb,QAASgD,EAAuBnC,EAAvBmC,QAASqL,EAAcxN,EAAdwN,UAEhC,OACE,kBAACpL,GAAA,EAAD,CACEF,KAAMA,EACNG,OAAQF,EACRrB,KAAK,KACLwB,UAAQ,GAER,kBAACF,GAAA,EAAMrC,OAAP,CAAc4C,aAAW,GACvB,kBAACP,GAAA,EAAMQ,MAAP,iBAIF,kBAACR,GAAA,EAAMS,KAAP,KACG1D,GAEH,kBAACiD,GAAA,EAAMgB,OAAP,KACE,kBAAClC,EAAA,EAAD,CAAQX,QAAQ,OAAOU,QAASkB,GAAhC,SACA,kBAACjB,EAAA,EAAD,CACEX,QAAQ,OACRU,QAASuM,GAFX,a,ICvBaC,G,kDACnB,WAAYzN,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXkM,uBAAuB,GAGzB,EAAKC,QAAU,EAAKA,QAAQ1N,KAAb,gBAPE,E,sDAWjBG,KAAK4B,SAAS,CAAE0L,uBAAuB,IACvCtN,KAAKJ,MAAMwN,c,+BAGH,IAAD,OACCrO,EAAYiB,KAAKJ,MAAjBb,QACAuO,EAA0BtN,KAAKoB,MAA/BkM,sBAEFpJ,EAAWnD,IAAMyM,SAASzH,IAC9B/F,KAAKJ,MAAMsE,UACX,SAAAuJ,GAAK,OAAI1M,IAAM2M,aACbD,EAAO,CACL5M,QAAS,kBAAM,EAAKe,SAAS,CAAE0L,uBAAuB,UAI5D,OACE,oCACE,kBAACH,GAAD,CACErL,KAAMwL,EACNvO,QAASA,EACTgD,QAAS,kBAAM,EAAKH,SAAS,CAAE0L,uBAAuB,KACtDF,UAAWpN,KAAKuN,UAEjBrJ,O,GApCwCnD,IAAMC,WCWlC2M,G,kDACnB,WAAY/N,GAAQ,uCACZA,G,sDAGEiH,GAAU,IAAD,EACY7G,KAAKJ,MAA1BgO,EADS,EACTA,YAAalI,EADJ,EACIA,IAKrB,OAHqB5F,EAAeT,cAC/BS,EAAeb,WAAW2N,MAAQ/F,EAAQiG,QAO7C,oCACE,kBAACzM,EAAA,EAAD,CAAKwN,MAAI,EAAC1N,QAAQ,QAAQ2N,UAAWpI,GACnC,kBAACrF,EAAA,EAAIO,KAAL,CAAUX,UAAU,eAAeY,QAAS,kBAAM+M,EAAYG,GAAWC,YACvE,kBAAC3N,EAAA,EAAI4N,KAAL,CAAUC,SAAS,YAAnB,aAEF,kBAAC7N,EAAA,EAAIO,KAAL,CAAUX,UAAU,iBAAiBY,QAAS,kBAAM+M,EAAYG,GAAWI,UACzE,kBAAC9N,EAAA,EAAI4N,KAAL,CAAUC,SAAS,UAAnB,oBAGJ,8BAbK,O,+BAkBD,IAAD,EAYHlO,KAAKJ,MAVP8F,EAFK,EAELA,IACAmB,EAHK,EAGLA,QACAuH,EAJK,EAILA,WACAC,EALK,EAKLA,YACAC,EANK,EAMLA,OACAC,EAPK,EAOLA,QACAC,EARK,EAQLA,SACAC,EATK,EASLA,iBACAC,EAVK,EAULA,OACAC,EAXK,EAWLA,SAGIC,EAAe9O,EAAeT,cAC/BS,EAAeb,WAAW2N,MAAQ/F,EAAQgI,MAAM/H,GAE/CiG,EAAWjN,EAAeT,eAC1BuP,GACD/H,EAAQ8D,QAAQ1D,MAAM+F,MACvB,SAAAC,GAAC,OAAIA,EAAEnG,KAAOhH,EAAeb,WAAW2N,OAG5C,OACE,kBAAC1C,GAAA,EAAKvK,OAAN,CAAaM,UAAU,kBACpBD,KAAK8O,UAAUjI,GAChB,4BAAI,2BACDA,EAAQwD,KACRuE,GAAgBlJ,IAAQqI,GAAWC,UAClC,oCACGI,GACC,oCACGC,GAAe,kBAAC,IAAD,CAAS/I,MAAM,eAAezE,QAAS6N,IACvD,kBAAC,IAAD,CAASpJ,MAAM,iBAAiBzE,QAAS4N,MAG3CL,GACA,oCACE,kBAAC,IAAD,CAAQnO,UAAU,cAAcqF,MAAM,eAAezE,QAAS4N,IAC9D,kBAAC,GAAD,CACE1P,QAzEgB,gDA0EhBqO,UAAWuB,GAEX,kBAAC,IAAD,CAAY1O,UAAU,eAAeqF,MAAM,wBAQtDsJ,GAAgBlJ,IAAQqI,GAAWI,QAClC,kBAACrN,EAAA,EAAD,CAAQD,QAAS2N,EAAU9N,KAAK,KAAKP,QAAQ,QAA7C,iBAGF,kBAACwM,GAAD,CAAmB9F,QAASA,EAAShG,QAASyN,IAC7CvB,GACC,oCACE,kBAAC,GAAD,CACEhO,QA3FqB,8CA4FrBqO,UAAWmB,GAEX,kBAACzN,EAAA,EAAD,CAAQX,QAAQ,OACdO,KAAK,KACLT,UAAU,wBAFZ,wB,GA5F6Bc,IAAMC,W,m6DCXjD,IAAM+N,GAAkBhR,IAAH,MAmBfiR,GAAmBjR,IAAH,MAUhBkR,GAA6BlR,IAAH,MAa1BmR,GAA6BnR,IAAH,MAQ1BoR,GAAyBpR,IAAH,MActBqR,GAA0BrR,IAAH,M,8CAc7B,WAAsB4J,EAAW0H,GAAjC,SAAAjR,EAAA,+EAEUf,EAAOgB,OAAO,CAClBC,SAAUyQ,GACVxQ,UAAW,CAAEoJ,YAAW0H,eAJ9B,0H,oEAWA,WAAuBlI,GAAvB,SAAA/I,EAAA,+EAEUf,EAAOgB,OAAO,CAClBC,SAAU0Q,GACVzQ,UAAW,CAAE4I,eAJnB,0H,oEAWA,WAAoCQ,EAAW0H,GAA/C,SAAAjR,EAAA,+EAEUf,EAAOgB,OAAO,CAClBC,SAAU8Q,GACV7Q,UAAW,CAAEoJ,YAAW0H,eAJ9B,0H,oEAWA,WAA2B1H,EAAW0H,GAAtC,SAAAjR,EAAA,+EAEUf,EAAOgB,OAAO,CAClBC,SAAU2Q,GACV1Q,UAAW,CAAEoJ,YAAW0H,eAJ9B,0H,oEAWA,WAA4B1H,EAAW0H,GAAvC,SAAAjR,EAAA,+EAEUf,EAAOgB,OAAO,CAClBC,SAAU4Q,GACV3Q,UAAW,CAAEoJ,YAAW0H,eAJ9B,0H,oEAWA,WAA+B1H,EAAW0H,GAA1C,SAAAjR,EAAA,+EAEUf,EAAOgB,OAAO,CAClBC,SAAU6Q,GACV5Q,UAAW,CAAEoJ,YAAW0H,eAJ9B,0H,sBAWe,QACbC,O,+CACAC,Q,6CACAC,qB,+CACAC,Y,+CACAC,a,+CACAC,gB,yDCjJmBC,I,yDACnB,WAAYhQ,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXyO,eAAgB,GAChBC,gBAAiB,MAGnB,EAAKvO,SAAW,EAAKA,SAAS1B,KAAd,gBARC,E,qLAYZC,EAAeT,a,iEAIGmK,GAAkBP,c,OAAnC8G,E,OACA7R,EAAW4B,EAAeb,WAAWf,SAE3C8B,KAAK4B,SAAS,CACZiO,eAAgBE,EACbC,QAAO,SAAA9I,GAAC,OAAIA,EAAEhJ,WAAaA,KAC3B6H,IAAI/F,KAAKiQ,mB,4IAIAtH,GACd,MAAO,CAAEuH,MAAOvH,EAAQzK,SAAUwD,MAAOiH,EAAQ7B,M,+BAG1CgJ,GACP9P,KAAK4B,SAAS,CAAEkO,sB,+BAGR,IAAD,EAC8B9P,KAAKJ,MAAlCkC,EADD,EACCA,KAAMC,EADP,EACOA,QAASqL,EADhB,EACgBA,UADhB,EAEqCpN,KAAKoB,MAAzCyO,EAFD,EAECA,eAAgBC,EAFjB,EAEiBA,gBAClBK,EAAwC,OAApBL,EAE1B,OACE,kBAAC9N,GAAA,EAAD,CAAOF,KAAMA,EAAMuJ,WAAW,EAAOpJ,OAAQF,GAC3C,kBAACC,GAAA,EAAMrC,OAAP,CAAc4C,aAAW,GACvB,kBAACP,GAAA,EAAMQ,MAAP,uBAGF,kBAACR,GAAA,EAAMS,KAAP,iDAEE,kBAAC,KAAD,CAAQxC,UAAU,eAChBE,QAAQ,OACRiQ,QAASP,EACTnO,MAAOoO,EACPvO,SAAUvB,KAAKuB,YAInB,kBAACS,GAAA,EAAMgB,OAAP,KACE,kBAAClC,EAAA,EAAD,CAAQX,QAAQ,OAAOU,QAASkB,GAAhC,SACA,kBAACjB,EAAA,EAAD,CACEX,QAAQ,OACR8C,SAAUkN,EACVtP,QAAS,kBAAMuM,EAAU0C,EAAgBpO,SAH3C,iB,GA1DwCX,IAAMC,Y,0cCJxD,IAAIqP,GAAS,KACTC,GAAY,KAEVC,GAAmBxS,IAAH,MAahByS,GAAsBzS,IAAH,M,8CAazB,4BAAAK,EAAA,0DACMiS,GADN,yCAEWA,IAFX,gCAMsBhT,EAAOO,MAAM,CAC7BA,MAAO2S,KAPb,cAMU/R,EANV,OASI6R,GAAS7R,EAAIC,KAAKgS,QAAQxJ,MAAMlB,KAAI,SAAA2K,GAAC,OAAIA,EAAErG,QAT/C,kBAUWgG,IAVX,wG,oEAgBA,4BAAAjS,EAAA,0DACMkS,GADN,yCAEWA,IAFX,gCAMsBjT,EAAOO,MAAM,CAC7BA,MAAO4S,KAPb,cAMUhS,EANV,OASI8R,GAAY9R,EAAIC,KAAKgS,QAAQxJ,MAAMlB,KAAI,SAAA2K,GAAC,OAAIA,EAAErG,QATlD,kBAUWiG,IAVX,wG,sBAgBe,QACbK,U,4CACAC,a,6CC/DF,SAASC,GAAUC,GACjB,OAAO,gBACFA,EADL,CAEEC,OAAO,gBACFD,EAAMC,OADL,CAEJC,UAAW,OACXC,QAAS,UACTC,gBAAiB,kB,IAKFC,G,kDACnB,WAAYvR,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXgP,QAAS,IAJM,E,qLASTtN,EAAS9C,KAAKJ,MAAdkD,K,SAGgB,cAATA,E,gCACHsO,GAAcR,e,2DACdQ,GAAcT,Y,4BAFlBU,E,KAINrR,KAAK4B,SAAS,CACZwO,QAASpQ,KAAKsR,iBAAiBD,K,kDAGjC5H,QAAQC,IAAR,M,uJAIa6H,GACf,OAAKA,EAIEA,EAAMxL,KAAI,SAAAyL,GAAI,MAAK,CACxBtB,MAAOsB,EACP9P,MAAO8P,MALA,K,+BASD,IACApB,EAAYpQ,KAAKoB,MAAjBgP,QADD,EAEqBpQ,KAAKJ,MAAzB8B,EAFD,EAECA,MAAOH,EAFR,EAEQA,SAEf,OACE,kBAAC,KAAD,CACEuP,MAAOD,GACPT,QAASA,EACT1O,MAAO1B,KAAKsR,iBAAiB5P,GAC7BH,SAAU,SAAAgQ,GAAK,OACbhQ,EAASgQ,EAAQA,EAAMxL,KAAI,SAAAE,GAAC,OAAIA,EAAEvE,SAAS,KAE7C+P,SAAO,Q,GAhDwB1Q,IAAMC,WCNvC0Q,GACJ,CAAC,iBAAkB,eAAgB,oBAAqB,gBAAiB,mBAAoB,yCAC1F3L,KAAI,SAAAuB,GAAM,MAAK,CAAE5F,MAAO4F,EAAQ4I,MAAO5I,MAGtCqK,GACI,SADJA,GAEE,OAGaC,G,kDACnB,WAAYhS,GAAQ,IAAD,8BACjB,cAAMA,IAED2B,SAAW,EAAKA,SAAS1B,KAAd,gBAChB,EAAKoQ,gBAAkB,EAAKA,gBAAgBpQ,KAArB,gBACvB,EAAKgS,YAAc,EAAKA,YAAYhS,KAAjB,gBACnB,EAAKiS,eAAiB,EAAKA,eAAejS,KAApB,gBACtB,EAAKkS,uBAAyB,EAAKA,uBAAuBlS,KAA5B,gBAPb,E,qDAUV2B,EAAOE,GACd1B,KAAKJ,MAAMoS,mBAAmBxQ,EAAOE,K,sCAGvB8P,GACd,MAAO,CACLtB,MAAOsB,EACP9P,MAAO8P,K,oCAMT,MA9BwB,MA6BDxR,KAAKJ,MAAMiH,QAA1BoL,WAECN,GAEFA,K,qCAGM7O,GACb9C,KAAKJ,MAAMoS,mBACT,aACAlP,IAAS6O,GAvCa,IAuCyB,M,+CAIzB,IAAD,SACW3R,KAAKJ,MAA/BiH,EADe,EACfA,QAER,OAHuB,EACNqL,aAaf,oCACE,kBAACvP,GAAA,EAAKkH,IAAN,KACE,kBAACsI,GAAA,EAAD,CACErP,KAAK,QACLuH,KAAK,iBACL3I,MAAO1B,KAAK6R,cACZ5R,UAAU,mBACVsB,SAAUvB,KAAK8R,gBAEf,kBAACM,GAAA,EAAD,CACE1Q,MAAOiQ,GACPjR,KAAK,KACLP,QAAQ,SAHV,kCAOA,kBAACiS,GAAA,EAAD,CACE1Q,MAAOiQ,GACPjR,KAAK,KACLP,QAAQ,SAHV,6BASJ,kBAACwC,GAAA,EAAKE,QAAN,CACEE,YAAY,8EACZrB,MApFkB,MAqFhBmF,EAAQoL,WACJ,gCACApL,EAAQoL,WAEd1Q,SAAU,SAAAE,GAAK,OAAI,EAAKF,SAAS,aAAcE,EAAME,OAAOD,QAC5DuB,SAAUjD,KAAK6R,gBAAkBF,MA1CnC,kBAAChP,GAAA,EAAKE,QAAN,CACEE,YAAY,8EACZrB,MAAOmF,EAAQoL,WACf1Q,SAAU,SAAAE,GAAK,OAAI,EAAKF,SAAS,aAAcE,EAAME,OAAOD,Y,+BA6C1D,IAAD,OACCmF,EAAY7G,KAAKJ,MAAjBiH,QAER,OACE,kBAAClE,GAAA,EAAD,KACE,4BAAI,8CAAJ,SAAyB,8CACzB,kBAACA,GAAA,EAAKE,QAAN,CACEnB,MAAOmF,EAAQwD,KACftH,YAAY,gBACZxB,SAAU,SAAAE,GAAK,OAAI,EAAKF,SAAS,OAAQE,EAAME,OAAOD,QACtD2Q,UAhHc,KAkHhB,6BACA,4BAAI,8CAAJ,gBACA,kBAAC1P,GAAA,EAAKE,QAAN,CACEyP,GAAG,WACHC,KAAK,IACL7Q,MAAOmF,EAAQ6D,aAAe,GAC9B3H,YAAa,iHAGbxB,SAAU,SAAAE,GAAK,OAAI,EAAKF,SAAS,cAAeE,EAAME,OAAOD,UAE/D,6BACA,4BAAI,8CAAJ,eACA,kBAACiB,GAAA,EAAKE,QAAN,CACEyP,GAAG,WACHC,KAAK,IACL7Q,MAAOmF,EAAQ2L,YAAc,GAC7BzP,YAAa,6JAGbxB,SAAU,SAAAE,GAAK,OAAI,EAAKF,SAAS,aAAcE,EAAME,OAAOD,UAE9D,6BAEA,4BAAI,8CAAJ,iBACC1B,KAAK+R,yBACN,6BAEA,4BAAI,8CAAJ,WACA,kBAAC,GAAD,CACEjP,KAAK,SACLpB,MAAOmF,EAAQoE,UACf1J,SAAU,SAAA0J,GAAS,OAAI,EAAK1J,SAAS,YAAa0J,MAEpD,6BACA,4BAAI,8CAAJ,mBACA,kBAAC,GAAD,CACEnI,KAAK,YACLpB,MAAOmF,EAAQ+D,UACfrJ,SAAU,SAAAqJ,GAAS,OAAI,EAAKrJ,SAAS,YAAaqJ,MAEpD,6BACA,4BAAI,gEAAJ,wBACA,kBAACjI,GAAA,EAAKE,QAAN,CACEyP,GAAG,SACH/Q,SAAU,SAAAE,GAAK,OAAI,EAAKF,SAAS,eAAuC,SAAvBE,EAAME,OAAOD,QAC9DA,MAAOmF,EAAQqG,cAEf,4BAAQxL,OAAO,GAAf,sCACA,4BAAQA,OAAO,GAAf,2CAEF,6BACA,4BAAI,wCAAJ,mBACA,kBAAC,KAAD,CACEoB,KAAK,SACLsN,QAASsB,GACThQ,MAAO1B,KAAKiQ,gBAAgBpJ,EAAQS,QACpC/F,SAAU,SAAA+F,GAAM,OAAI,EAAK/F,SAAS,SAAU+F,EAAO5F,UAErD,6BACA,4BAAI,8CAAJ,wBACA,kBAACiB,GAAA,EAAKE,QAAN,CACEyP,GAAG,SACH/Q,SAAU,SAAAE,GAAK,OAAI,EAAKF,SAAS,OAAQE,EAAME,OAAOD,QACtDA,MAAOmF,EAAQ/D,MAEf,4BAAQpB,MAAM,UAAd,2CACA,4BAAQA,MAAM,WAAd,qD,GAzKmCX,IAAMC,WCTpC,SAASyR,GAAT,GAAuC,IAAZ5L,EAAW,EAAXA,QAClC6L,EAAe7L,EAAQ8D,QAAQ/D,WAAa,EAE5CmG,EAAWjN,EAAeT,cAC3BwH,EAAQ8D,QAAQ1D,MAAM+F,MACvB,SAAAC,GAAC,OAAIA,EAAEnG,KAAOhH,EAAeb,WAAW2N,OAGtCC,EAAU/M,EAAeT,cAC1BwH,EAAQiG,UAAYhN,EAAeb,WAAW2N,IAEnD,OACE,oCACE,wBAAI3M,UAAU,uBAAsB,8CAApC,gBACA,kBAAC,KAAD,CACEA,UAAU,WACVwK,OAAQ5D,EAAQ6D,aApBI,+CAsBtB,8BACEmC,GAAWE,IACX,oCACE,wBAAI9M,UAAU,sBAAqB,8CAAnC,eACA,kBAAC,KAAD,CACEA,UAAU,WACVwK,OAAQ5D,EAAQ2L,YA3BD,8CA6BjB,6BACA,wBAAIvS,UAAU,wBAAuB,8CAArC,iBACA,yBAAKA,UAAU,4BACZ4G,EAAQoL,WAEL,uBAAGlW,KAAM8K,EAAQoL,WAAYtQ,OAAO,UACjCkF,EAAQoL,YAlCE,+CAwCnB,8BAGJ,wBAAIhS,UAAU,mBAAkB,oGAAhC,aAAmEyS,EAAnE,KACA,yBAAKzS,UAAU,0BACb,kBAAC8K,GAAA,EAAD,CAAOC,MAAI,EAAC7K,QAAQ,WAClB,uBAAGpE,KAAI,qBAAgB8K,EAAQgI,MAAM3Q,WAClC2I,EAAQgI,MAAM3Q,SADjB,aAID2I,EAAQ8D,QAAQ1D,MAAMlB,KAAI,SAAA4M,GAAM,OAC/B,kBAAC5H,GAAA,EAAD,CAAOC,MAAI,EAAC9E,IAAKyM,EAAOzU,SAAUiC,QAAQ,QACxC,uBAAGpE,KAAI,qBAAgB4W,EAAOzU,WAC3ByU,EAAOzU,eAKhB,6BACA,wBAAI+B,UAAU,kBAAiB,8CAA/B,WACA,yBAAKA,UAAU,yBACZ4G,EAAQoE,UAAUlF,KAAI,SAAA6M,GAAI,OACzB,kBAAC7H,GAAA,EAAD,CAAOC,MAAI,EAAC9E,IAAK0M,EAAMzS,QAAQ,QAC5ByS,OAIP,6BACA,wBAAI3S,UAAU,qBAAoB,8CAAlC,mBACA,yBAAKA,UAAU,4BACZ4G,EAAQ+D,UAAU7E,KAAI,SAAA+E,GAAQ,OAC7B,kBAACC,GAAA,EAAD,CAAOC,MAAI,EAAC9E,IAAK4E,EAAU3K,QAAQ,QAChC2K,OAIP,6BACA,wBAAI7K,UAAU,kBAAiB,wCAA/B,mBACA,kBAACiK,GAAA,EAAKI,KAAN,KACGzD,EAAQS,S,ICpFIuL,G,kDACnB,WAAYjT,GAAQ,uCACZA,G,qDAGE,IAAD,EAMHI,KAAKJ,MAJPiH,EAFK,EAELA,QACAiM,EAHK,EAGLA,gBACA1E,EAJK,EAILA,WACA4D,EALK,EAKLA,mBAGF,OACE,oCACG5D,EACG,kBAAC,GAAD,CACA4D,mBAAoBA,EACpBnL,QAASiM,IAET,kBAACL,GAAD,CAAiB5L,QAASA,S,GApBO9F,IAAMC,W,SCD7C+R,GAAQ,CACZ,CACEpR,OAAQ,kBACRqR,QAAS,6EAETC,eAAe,EACfC,UAAW,UAEb,CACEvR,OAAQ,eACRqR,QAAS,4GAETC,eAAe,EACfC,UAAW,UAEb,CACEvR,OAAQ,gBACRqR,QAAS,qGAETC,eAAe,EACfC,UAAW,eAEb,CACEvR,OAAQ,sBACRqR,QAAS,0QAGTC,eAAe,EACfC,UAAW,UAEb,CACEvR,OAAQ,kBACRqR,QAAS,kIAETC,eAAe,EACfC,UAAW,eAEb,CACEvR,OAAQ,qBACRqR,QAAS,sFACTC,eAAe,EACfC,UAAW,WAIA,SAASC,KACtB,OACE,kBAAC,KAAD,CACEvN,MAAOmN,GACPK,YAAU,EACVC,gBAAc,EACdC,mBAAiB,EACjBC,cAAY,EACZC,OAAQ,CACNpD,QAAS,CACPqD,aAAc,WAEhBC,QAAS,CACPC,SAAU,QAEZC,eAAgB,CACdC,QAAS,uBC7DnB,IAAMd,GAAQ,CACZ,CACEpR,OAAQ,kBACRqR,QAAS,4EAETC,eAAe,EACfC,UAAW,UAEb,CACEvR,OAAQ,sBACRqR,QAAS,8KAGTC,eAAe,EACfC,UAAW,UAEb,CACEvR,OAAQ,wBACRqR,QAAS,oGACTC,eAAe,EACfC,UAAW,UAEb,CACEvR,OAAQ,qBACRqR,QAAS,0EACTC,eAAe,EACfC,UAAW,WAIA,SAASY,KACtB,OACE,kBAAC,KAAD,CACElO,MAAOmN,GACPK,YAAU,EACVC,gBAAc,EACdC,mBAAiB,EACjBC,cAAY,EACZC,OAAQ,CACNpD,QAAS,CACPqD,aAAc,WAEhBC,QAAS,CACPC,SAAU,QAEZC,eAAgB,CACdC,QAAS,uBCzBnB,SAASE,GAAUC,GACjB,MAAgB,SAATA,IAAmB,EAGb,QACbC,mBA7BF,WACE,OAAOF,GAAUG,aAAaC,QAAQ,wBA6BtCC,wBA1BF,WACE,OAAOL,GAAUG,aAAaC,QAAQ,6BA0BtCE,yBAvBF,WACE,OAAON,GAAUG,aAAaC,QAAQ,8BAuBtCG,mBApBF,WACEJ,aAAaK,QAAQ,qBAAsB,SAoB3CC,wBAjBF,WACEN,aAAaK,QAAQ,0BAA2B,SAiBhDE,yBAdF,WACEP,aAAaK,QAAQ,2BAA4B,U,SCX9BG,G,kDACnB,WAAY9U,GAAQ,IAAD,8BACjB,cAAMA,IAED0P,OAAS,EAAKA,OAAOzP,KAAZ,gBACd,EAAK0P,QAAU,EAAKA,QAAQ1P,KAAb,gBAJE,E,4FAON8H,EAAW0H,G,0FAEdsF,GAAkBrF,OAAO3H,EAAW0H,G,OAC1C7T,OAAOC,SAASc,S,+CAEhBkN,QAAQC,IAAR,M,wLAIUvC,G,0FAEJwN,GAAkBpF,QAAQpI,G,OAChC3L,OAAOC,SAASc,S,+CAEhBkN,QAAQC,IAAR,M,mLAIO/B,EAAW0H,G,0FAEZsF,GAAkBjF,aAAa/H,EAAW0H,G,OAChD7T,OAAOC,SAASc,S,+CAEhBkN,QAAQC,IAAR,M,uJAIa,IAAD,OACN7C,EAAY7G,KAAKJ,MAAjBiH,QACF8D,EAAU9D,EAAQ8D,QAAQ1D,MAEhC,OAAuB,IAAnB0D,EAAQE,OAER,oCACE,uCACA,0BAAM5K,UAAU,WAAhB,0CAGA,8BAMJ,oCACE,uCACA,kBAAC2U,GAAA,EAAD,KACGjK,EAAQ5E,KAAI,SAAAmB,GAAC,OACZ,kBAAC0N,GAAA,EAAUhU,KAAX,CAAgBsF,IAAKgB,EAAEC,UAAWlH,UAAU,qBAC1C,uBAAGlE,KAAI,qBAAgBmL,EAAEhJ,WAAagJ,EAAEhJ,UACxC,kBAAC2H,GAAA,EAAD,CAAa5F,UAAU,mBACrB,kBAAC,GAAD,CACElB,QA9DgB,4DA+DhBqO,UAAW,kBAAM,EAAKyH,KAAK3N,EAAEJ,GAAID,EAAQC,MAEzC,kBAAChG,EAAA,EAAD,CAAQX,QAAQ,SAASO,KAAK,MAA9B,kB,6CAYQ,IAAD,OACbmG,EAAY7G,KAAKJ,MAAjBiH,QAER,GAAIA,EAAQqG,aACV,OAAO,KAGT,IAAMlG,EAAiBH,EAAQG,eAAeC,MAAM+I,QAClD,SAAA9I,GAAC,MAAwB,YAApBA,EAAEG,eAAiD,YAAlBH,EAAEK,eAG1C,OAA8B,IAA1BP,EAAe6D,OAEf,oCACE,6BACA,+CACA,0BAAM5K,UAAU,WAAhB,8CAQJ,oCACE,6BACA,+CACA,kBAAC2U,GAAA,EAAD,KACG5N,EAAejB,KAAI,SAAAmB,GAAC,OACnB,kBAAC0N,GAAA,EAAUhU,KAAX,CAAgBsF,IAAKgB,EAAEC,UAAWlH,UAAU,qBAC1C,uBAAGlE,KAAI,qBAAgBmL,EAAEhJ,WAAagJ,EAAEhJ,UACxC,kBAAC2H,GAAA,EAAD,CAAa5F,UAAU,kBAAkBS,KAAK,MAC5C,kBAACI,EAAA,EAAD,CACEX,QAAQ,UACRU,QAAS,kBAAM,EAAKyO,OAAOpI,EAAEJ,GAAID,EAAQC,MAF3C,UAMA,kBAAChG,EAAA,EAAD,CACEX,QAAQ,SACRU,QAAS,kBAAM,EAAK0O,QAAQrI,EAAEC,aAFhC,oB,+BAeZ,OACE,oCACGnH,KAAK8U,gBACL9U,KAAK+U,4B,GAnIoChU,IAAMC,WCS3C+M,GAAa,CACxBC,SAAU,WACVG,OAAQ,UAGJ6G,G,kDACJ,WAAYpV,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXsE,IAAKqI,GAAWC,SAChBvC,iBAAiB,EACjB5E,QAAS,KACTiM,gBAAiB,KACjB1E,YAAY,EACZ6G,iBAAiB,EACjBC,aAAa,EACbC,cAAc,GAGhB,EAAK1F,YAAc,EAAKA,YAAY5P,KAAjB,gBACnB,EAAK6P,aAAe,EAAKA,aAAa7P,KAAlB,gBACpB,EAAKuV,eAAiB,EAAKA,eAAevV,KAApB,gBACtB,EAAKmS,mBAAqB,EAAKA,mBAAmBnS,KAAxB,gBAC1B,EAAKwV,YAAc,EAAKA,YAAYxV,KAAjB,gBACnB,EAAKqI,cAAgB,EAAKA,cAAcrI,KAAnB,gBACrB,EAAKyV,aAAe,EAAKA,aAAazV,KAAlB,gBACpB,EAAK8F,UAAY,EAAKA,UAAU9F,KAAf,gBArBA,E,uLAyBAhE,EAAamE,KAAKJ,MAA3B2V,MAAS1Z,OACXiL,EAAK0O,OAAO3Z,EAAOiL,I,uBAGvB9G,KAAK4B,SAAS,CAAE6J,iBAAiB,I,mDAKXlC,GAAkBtB,WAAWnB,G,OAA7CD,E,OACN7G,KAAK4B,SAAS,CACZiF,UACAiM,gBAAgB,gBAAMjM,GACtB4E,iBAAiB,IAEnBzL,KAAKyV,aACLzV,KAAK0V,gB,kDAEL1V,KAAK4B,SAAS,CAAE6J,iBAAiB,IACjChC,QAAQC,IAAR,M,mJAIU,IAAD,EACoC1J,KAAKoB,MAA5CyF,EADG,EACHA,QAASqO,EADN,EACMA,YAAaC,EADnB,EACmBA,aAE9B,GAAKrV,EAAeT,cAAiBwH,IAGjCqO,IAAeC,EAAnB,CAIA,IAAMQ,EAAiB9O,EAAQiG,UAAYhN,EAAeb,WAAW2N,IAC/DgJ,EAAkB/O,EAAQ8D,QAAQ1D,MAAMlB,KAAI,SAAAkH,GAAC,OAAIA,EAAE/O,YACtD2X,SAAS/V,EAAeb,WAAWf,WAEjC4X,GAAc1B,2BAA6BuB,GAC9C3V,KAAK2F,UAAUoI,GAAWC,UAC1B8H,GAActB,0BACdxU,KAAK4B,SAAS,CAAEsT,aAAa,MACnBY,GAAczB,4BAA8BuB,IACtD5V,KAAK2F,UAAUoI,GAAWC,UAC1B8H,GAAcrB,2BACdzU,KAAK4B,SAAS,CAAEuT,cAAc,Q,2CAKhCnV,KAAK0V,kB,sCAGU,IAAD,EACW1V,KAAKoB,MAAtByF,EADM,EACNA,QAASnB,EADH,EACGA,IACI5F,EAAeT,cAC/BS,EAAeb,WAAW2N,MAAQ/F,EAAQiG,SAE1BpH,IAAQqI,GAAWC,UACtChO,KAAK2F,UAAUoI,GAAWC,UAG5B,IACM+H,EADSjX,EAAcxD,iBACN4B,IAAI,QAAU6Q,GAAWC,SAE5C+H,IAAYrQ,GACd1F,KAAK2F,UAAUoQ,K,gCAITrQ,GACR1F,KAAK4B,SAAS,CAAE8D,QAEhB,IAAM7J,EAASiD,EAAcxD,iBAC7BO,EAAO+C,IAAI,MAAO8G,GAElB5G,EAAclD,kBAAkBC,K,uCAIhCmE,KAAK4B,UAAS,SAAAoU,GAAS,MAAK,CAC1B5H,YAAa4H,EAAU5H,iB,yCAIR5M,EAAOE,GAAQ,IACxBoR,EAAoB9S,KAAKoB,MAAzB0R,gBACRA,EAAgBtR,GAASE,EACzB1B,KAAK4B,SAAS,CAAEkR,sB,2JAIRA,EAAoB9S,KAAKoB,MAAzB0R,gB,kBAEAvJ,GAAkBpB,cAAc2K,G,OACtC9S,KAAK4B,SAAS,CACZiF,QAAQ,gBAAMiM,KAEhB9S,KAAKoV,iB,gDAEL3L,QAAQC,IAAR,M,4QAKM7C,EAAY7G,KAAKoB,MAAjByF,Q,kBAEA0C,GAAkBrB,cAAcrB,EAAQC,I,OAC9ChI,EAAc1C,SAAS,e,gDAEvBqN,QAAQC,IAAR,M,2LAIe/B,G,gFACTd,EAAY7G,KAAKoB,MAAjByF,QACA/C,EAAc9D,KAAKJ,MAAnBkE,UACR9D,KAAK4B,SAAS,CAAEqT,iBAAiB,I,kBAGzBN,GAAkBhF,gBAAgBhI,EAAWd,EAAQC,I,OAC3DhD,EACE,6CACA,W,gDAGFA,EAAU,sCAAuC,W,yQAK3C+C,EAAY7G,KAAKoB,MAAjByF,QACFc,EAAY7H,EAAeb,WAAW2N,I,UAEtC/F,EAAQqG,a,gCACJyH,GAAkBlF,YACtB9H,EACAd,EAAQC,I,+CAGJ6N,GAAkBnF,qBACtB7H,EACAd,EAAQC,I,QAGZtL,OAAOC,SAASc,S,kDAEhBkN,QAAQC,IAAR,M,8QAKM7C,EAAY7G,KAAKoB,MAAjByF,QACFc,EAAY7H,EAAeb,WAAW2N,I,kBAGpC+H,GAAkBjF,aACtB/H,EACAd,EAAQC,I,OAEVhI,EAAc1C,SAAd,e,gDAEAqN,QAAQC,IAAR,M,8IAIM,IAAD,SAUH1J,KAAKoB,MARPsE,EAFK,EAELA,IACAmB,EAHK,EAGLA,QACA4E,EAJK,EAILA,gBACA2C,EALK,EAKLA,WACA0E,EANK,EAMLA,gBACAmC,EAPK,EAOLA,gBACAC,EARK,EAQLA,YACAC,EATK,EASLA,aAGF,IAAKtO,EACH,OACE,oCACE,kBAAC8C,EAAA,EAAD,KACE,2CAED8B,EACG,kDACA,kBAACN,GAAD,OAMV,IAAMkD,EAAcyE,GAAmD,KAAhCA,EAAgBzI,KAAKzF,OAE5D,OACE,oCACE,kBAAC+E,EAAA,EAAD,KACE,+BAAQ9C,EAAQwD,OAEjB6K,GAAe,kBAAC/B,GAAD,MACfgC,GAAgB,kBAACrB,GAAD,MACjB,kBAAC,GAAD,CACEhS,KAAMmT,EACN7H,UAAWpN,KAAKsV,aAChBvT,QAAS,kBAAM,EAAKH,SAAS,CAAEqT,iBAAiB,OAElD,kBAAC/K,GAAA,EAAD,CAAMjK,UAAU,oBAAoBkK,GAAG,YAAY8L,OAAO,aACxD,kBAAC,GAAD,CACEpP,QAASA,EACTuH,WAAYA,EACZC,YAAaA,EACb3I,IAAKA,EACL8I,SAAU,kBAAM,EAAK5M,SAAS,CAAEqT,iBAAiB,KACjD3G,OAAQtO,KAAKyP,YACblB,QAASvO,KAAK0P,aACdhB,OAAQ1O,KAAKqV,YACb1G,SAAU3O,KAAKkI,cACfuG,iBAAkBzO,KAAKoV,eACvBxH,YAAa5N,KAAK2F,YAGpB,kBAACuE,GAAA,EAAKzH,KAAN,KACGiD,IAAQqI,GAAWC,UAClB,kBAAC,GAAD,CACEnH,QAASA,EACTiM,gBAAiBA,EACjB1E,WAAYA,EACZ4D,mBAAoBhS,KAAKgS,qBAG5BtM,IAAQqI,GAAWI,QAClB,kBAAC,GAAD,CAAsBtH,QAASA,W,GAhQvB7F,aAyQPC,MAAYC,YAAW8T,IAAU,gB,8BC7RnCkB,GACX,sEAEa,SAASC,GAAT,GAAuC,IAAZxN,EAAW,EAAXA,QACxC,OACE,oCACE,4BAAI,gEAAJ,QACA,kBAACuB,GAAA,EAAKI,KAAN,KACG3B,EAAQG,KAAOoN,IAGlB,6BACA,4BAAI,8CAAJ,cACA,yBAAKjW,UAAU,kBACZ0I,EAAQiC,UAAU7E,KAAI,SAAA+E,GAAQ,OAC7B,kBAACC,GAAA,EAAD,CAAOC,MAAI,EAAC9E,IAAK4E,EAAU3K,QAAQ,QAChC2K,OAIP,6BACA,4BAAI,8CAAJ,WACA,yBAAK7K,UAAU,kBACZ0I,EAAQsC,UAAUlF,KAAI,SAAAmF,GAAQ,OAC7B,kBAACH,GAAA,EAAD,CAAOC,MAAI,EAAC9E,IAAKgF,EAAU/K,QAAQ,QAChC+K,QClBE,SAASkL,GAAT,GAAmC,IAAZzN,EAAW,EAAXA,QAC9B0N,EACJ1N,EAAQiC,UAAUC,OAJI,EAKlByL,EACJ3N,EAAQsC,UAAUJ,OANI,EAQxB,OACE,kBAACX,GAAA,EAAD,CAAMjK,UAAU,cAAckK,GAAG,aAC/B,uBAAGpO,KAAI,qBAAgB4M,EAAQzK,UAAYiF,MAAO,CAAEC,MAAO,UAAWgH,eAAgB,YACpF,kBAACF,GAAA,EAAKzH,KAAN,KACE,kBAACyH,GAAA,EAAKvK,OAAN,CAAaM,UAAU,eACrB,8BACE,kBAACsW,GAAA,EAAD,CACEC,IAAK7N,EAAQ8N,YAAcC,KAC3BC,eAAa,IAEdhO,EAAQzK,WAGb,kBAACgM,GAAA,EAAKI,KAAN,KACG3B,EAAQG,KAAOoN,KAIpB,kBAAChM,GAAA,EAAKlH,OAAN,KACgC,IAA7B2F,EAAQiC,UAAUC,QACe,IAA7BlC,EAAQsC,UAAUJ,QACnB,qEAGHlC,EAAQiC,UAAUC,OAAS,GAC1B,oCACE,0CACClC,EAAQiC,UAAUqB,MAAM,EAnCb,GAoCTlG,KAAI,SAAA+E,GAAQ,OACX,kBAACC,GAAA,EAAD,CAAOC,MAAI,EAAC9E,IAAK4E,EAAU3K,QAAQ,QAChC2K,MAGNuL,GAAkB,+CACnB,8BAIH1N,EAAQsC,UAAUJ,OAAS,GAC1B,oCACE,uCACClC,EAAQsC,UAAUgB,MAAM,EAjDb,GAkDTlG,KAAI,SAAAmF,GAAQ,OACX,kBAACH,GAAA,EAAD,CAAOC,MAAI,EAAC9E,IAAKgF,EAAU/K,QAAQ,QAChC+K,MAGNoL,GAAe,mD,WC9CTM,G,kDACnB,WAAYhX,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,CACX2O,SAAU,GACV8G,kBAAmB,GACnBpP,OAAQ,GACRgE,iBAAiB,GAGnB,EAAKqL,iBAAmBnL,aAdR,IAgBd,EAAKmL,iBAAiBjX,KAAtB,iBAEF,EAAK+L,aAAe,EAAKA,aAAa/L,KAAlB,gBACpB,EAAKkX,kBAAoB,EAAKA,kBAAkBlX,KAAvB,gBACzB,EAAKgM,aAAe,EAAKA,aAAahM,KAAlB,gBACpB,EAAKmX,eAAiB,EAAKA,eAAenX,KAApB,gBAhBL,E,0KAoBjBG,KAAK8W,mB,sLAGgBrP,G,0EACrBzH,KAAK4B,SAAS,CAAE6J,iBAAiB,I,UAGdhE,E,gCACP+B,GAAkBN,oBAAoBzB,G,2DACtC+B,GAAkBP,c,4BAFtB8G,E,KAIN/P,KAAK4B,SAAS,CACZmO,WACA8G,kBAAmB9G,EAAS9D,MAAM,EArCf,K,kDAwCrBxC,QAAQC,IAAR,M,QAGF1J,KAAK4B,SAAS,CAAE6J,iBAAiB,I,oJAGtBhE,GACXzH,KAAK4B,SAAS,CAAE6F,a,0CAGG,IAAD,EACsBzH,KAAKoB,MAArC2O,EADU,EACVA,SAAU8G,EADA,EACAA,kBACZI,EAAkBlH,EAAS9D,MAC/B4K,EAAkBhM,OAClBgM,EAAkBhM,OAtDG,GAyDvB7K,KAAK4B,SAAS,CACZiV,kBAAmBA,EAAkBrZ,OAAOyZ,O,qCAIhC,IAAD,OACLxP,EAAWzH,KAAKoB,MAAhBqG,OAER,OACE,oCACE,4BAAI,gEAAJ,WACA,uEAGA,kBAAC0E,GAAA,EAAD,CACErJ,KAAK,OACLpC,KAAK,KACLT,UAAU,SACV8C,YAAY,qCACZrB,MAAO+F,EACPlG,SAAQ,uCAAE,WAAOE,GAAP,eAAArD,EAAA,6DACFqJ,EAAShG,EAAME,OAAOD,MAC5B,EAAKkK,aAAanE,GAFV,SAGF,EAAKqP,iBAAiBrP,GAHpB,2CAAF,2D,uCAUE,IAAD,EAC0CzH,KAAKoB,MAAtD2O,EADO,EACPA,SAAU8G,EADH,EACGA,kBAAmBpL,EADtB,EACsBA,gBAC/BW,EAAU2D,EAASlF,OAASgM,EAAkBhM,OAEpD,OAAKY,EAImB,IAApBsE,EAASlF,OACJ,6DAIP,kBAAC,KAAD,CACEwB,WAAYwK,EAAkBhM,OAC9ByB,KAAMtM,KAAK+W,kBACX3K,QAASA,EACTG,OAAQ,0BAAMtM,UAAU,sBAAhB,eAER,kBAAC4J,EAAA,EAAD,KACGgN,EAAkB9Q,KAAI,SAAAmB,GACrB,OACE,kBAAC5E,EAAA,EAAD,CAAK0H,GAAG,IAAI9D,IAAKgB,EAAEJ,IACjB,kBAACsP,GAAD,CAAazN,QAASzB,UAlBzB,kBAACiE,GAAD,Q,+BA4BT,OACE,oCACE,kBAACxB,EAAA,EAAD,KACE,0CAEF,kBAAC,GAAD,CAAQ1J,UAAU,eAChB,kBAAC2J,EAAA,EAAD,CAAW6C,OAAK,GACbzM,KAAK6L,eACL7L,KAAKgX,kBAER,kBAAC,KAAD,CAAatK,UAjIU,KAkIrB,4BAAI,kBAAC,IAAD,CAAWpH,MAAM,0B,GAhIGtE,a,UCLfkW,G,kDACnB,WAAYtX,GAAQ,uCACZA,G,sDAGE+I,GAAU,IAAD,EACY3I,KAAKJ,MAA1BgO,EADS,EACTA,YAAalI,EADJ,EACIA,IAEfyR,EAAerX,EAAeT,cAC/BS,EAAeb,WAAWf,WAAayK,EAAQzK,SAEpD,OACE,oCACE,kBAACmC,EAAA,EAAD,CAAKwN,MAAI,EAAC1N,QAAQ,QAAQ2N,UAAWpI,GACnC,kBAACrF,EAAA,EAAIO,KAAL,CAAUX,UAAU,uBAAuBY,QAAS,kBAAM+M,EAAYwJ,GAAWpJ,YAC/E,kBAAC3N,EAAA,EAAI4N,KAAL,CAAUC,SAAS,YAAnB,aAEF,kBAAC7N,EAAA,EAAIO,KAAL,CAAUX,UAAU,uBAAuBY,QAAS,kBAAM+M,EAAYwJ,GAAWC,YAC/E,kBAAChX,EAAA,EAAI4N,KAAL,CAAUC,SAAS,YAAnB,aAEDiJ,GACC,kBAAC9W,EAAA,EAAIO,KAAL,CAAUX,UAAU,oBAAoBY,QAAS,kBAAM+M,EAAYwJ,GAAWE,SAC5E,kBAACjX,EAAA,EAAI4N,KAAL,CAAUC,SAAS,SAAnB,WAIN,gC,oCAKQvF,GAAU,IAAD,EACmB3I,KAAKJ,MAArCwO,EADa,EACbA,WAAYmJ,EADC,EACDA,gBAEpB,OACE,kBAACjV,EAAA,EAAD,CAAKkV,GAAI,CAAEzN,KAAM,EAAG0N,OAAQ,GAAK3N,GAAI,CAAEC,KAAM,EAAG0N,OAAQ,IACtD,kBAACC,GAAA,EAAD,KACE,kBAACA,GAAA,EAAOnB,MAAR,CACEC,IAAK7N,EAAQ8N,YAAcC,KAC3BC,eAAa,IAEdvI,GACC,kBAACsJ,GAAA,EAAOC,QAAR,CAAgB9W,QAAS0W,GACvB,kBAAC,IAAD,MADF,uB,wCASQ5O,GAAU,IAAD,EAOrB3I,KAAKJ,MALPwO,EAFuB,EAEvBA,WACAK,EAHuB,EAGvBA,iBACAD,EAJuB,EAIvBA,SACAoJ,EALuB,EAKvBA,cACAlS,EANuB,EAMvBA,IAGIyR,EAAerX,EAAeT,cAC/BS,EAAeb,WAAWf,WAAayK,EAAQzK,SAC9C2Z,EAAkBnS,IAAQ0R,GAAWpJ,UAAYmJ,EAEvD,OACE,oCACE,wBAAIlX,UAAU,kBAAiB,2BAC5B0I,EAAQzK,SACR2Z,GAAmBzJ,GAClB,oCACE,kBAAC,IAAD,CAAS9I,MAAM,eAAezE,QAAS+W,IACvC,kBAAC,IAAD,CAAStS,MAAM,iBAAiBzE,QAAS4N,KAG5CoJ,IAAoBzJ,GACnB,kBAAC,IAAD,CAAYnO,UAAU,cAAcqF,MAAM,eAAezE,QAAS4N,MAGrE3O,EAAeT,eAAiB8X,GAC/B,kBAACrW,EAAA,EAAD,CAAQJ,KAAK,KAAKP,QAAQ,OAAOU,QAAS2N,GAA1C,wB,+BAQE,IACA7F,EAAY3I,KAAKJ,MAAjB+I,QAER,OACE,kBAACuB,GAAA,EAAKvK,OAAN,CAAaM,UAAU,kBACpBD,KAAK8O,UAAUnG,GAChB,kBAACkB,EAAA,EAAD,KACG7J,KAAK8X,cAAcnP,GACpB,kBAACrG,EAAA,EAAD,CAAKrC,UAAU,uBAAuB6J,GAAI,CAAEC,MAAM,IAC/C/J,KAAK+X,kBAAkBpP,U,GAhGO5H,IAAMC,WCT5BgX,G,kDACnB,WAAYpY,GAAQ,IAAD,8BACjB,cAAMA,IAED2B,SAAW,EAAKA,SAAS1B,KAAd,gBAChB,EAAKyR,iBAAmB,EAAKA,iBAAiBzR,KAAtB,gBAJP,E,qDAOV2B,EAAOE,GACd1B,KAAKJ,MAAMqY,mBAAmBzW,EAAOE,K,uCAGtB6P,GACf,OAAOA,EAAMxL,KAAI,SAAAyL,GAAI,MAAK,CACxBtB,MAAOsB,EACP9P,MAAO8P,Q,+BAID,IAAD,OACC7I,EAAY3I,KAAKJ,MAAjB+I,QAER,OACE,kBAAChG,GAAA,EAAD,KACE,4BAAI,gEAAJ,QACA,kBAACA,GAAA,EAAKE,QAAN,CACEyP,GAAG,WACHC,KAAK,IACL7Q,MAAOiH,EAAQG,KAAO,GACtBvH,SAAU,SAAAE,GAAK,OAAI,EAAKF,SAAS,MAAOE,EAAME,OAAOD,UAEvD,6BACA,4BAAI,8CAAJ,cACA,kBAAC,GAAD,CACEoB,KAAK,YACLpB,MAAOiH,EAAQiC,UACfrJ,SAAU,SAAAqJ,GAAS,OAAI,EAAKrJ,SAAS,YAAaqJ,MAEpD,6BACA,4BAAI,8CAAJ,WACA,kBAAC,GAAD,CACE9H,KAAK,SACLpB,MAAOiH,EAAQsC,UACf1J,SAAU,SAAA0J,GAAS,OAAI,EAAK1J,SAAS,YAAa0J,W,GA3CflK,IAAMC,WCA9BkX,G,kDACnB,WAAYtY,GAAQ,uCACZA,G,qDAGE,IAAD,EAMHI,KAAKJ,MAJP+I,EAFK,EAELA,QACAwP,EAHK,EAGLA,gBACA/J,EAJK,EAILA,WACA6J,EALK,EAKLA,mBAGF,OACE,oCACG7J,EACG,kBAAC,GAAD,CACA6J,mBAAoBA,EACpBtP,QAASwP,IAET,kBAAChC,GAAD,CAAiBxN,QAASA,S,GApBO5H,IAAMC,WCC9BoX,G,kDACnB,WAAYxY,GAAQ,uCACZA,G,gEAGYuX,GAAe,IACzBxO,EAAY3I,KAAKJ,MAAjB+I,QACR,OAAIwO,EACK,WAEH,GAAN,OAAUxO,EAAQzK,SAAlB,U,qCAGaqN,EAAU8M,EAAYlB,GACnC,OACE,oCACuB,IAApB5L,EAASV,QACR,oCACE,0BAAM5K,UAAU,WACbD,KAAKsY,oBAAoBnB,GAD5B,QACgDkB,EADhD,kBAGA,8BAGJ,yBAAKpY,UAAU,kBACZsL,EAASxF,KAAI,SAAAmB,GAAC,OACb,kBAAC6D,GAAA,EAAD,CAAOC,MAAI,EAAC9E,IAAKgB,EAAEJ,GAAI3G,QAAQ,QAC7B,uBAAGpE,KAAI,qBAAgBmL,EAAEJ,KAAOI,EAAEmD,c,+BAQpC,IACA1B,EAAY3I,KAAKJ,MAAjB+I,QACFd,EAAgBc,EAAQd,cAAcZ,MACtCsE,EAAW5C,EAAQ4C,SAAStE,MAE5BkQ,EAAerX,EAAeT,cAC/BS,EAAeb,WAAWf,WAAayK,EAAQzK,SAEpD,OACE,yBAAK+B,UAAU,oBACb,8CACCD,KAAK8L,eAAejE,EAAe,UAAWsP,GAC/C,6BACA,+CACCnX,KAAK8L,eAAeP,EAAU,SAAU4L,Q,GAjDJpW,IAAMC,WCM7CuX,GAAiB,CACrB,QAAW,CAAEnV,MAAO,QACpB,SAAY,CAAEA,MAAO,WACrB,SAAY,CAAEA,MAAO,WAGjBoV,G,kDACJ,WAAY5Y,GAAQ,IAAD,8BACjB,cAAMA,IAED0P,OAAS,EAAKA,OAAOzP,KAAZ,gBACd,EAAK0P,QAAU,EAAKA,QAAQ1P,KAAb,gBAJE,E,4FAONwP,G,8EACL1H,EAAY7H,EAAeb,WAAW2N,I,kBAEpC+H,GAAkBrF,OAAO3H,EAAW0H,G,OAC1CvQ,EAAc1C,SAAd,qBAAqCiT,I,gDAErC5F,QAAQC,IAAR,M,uLAIUvC,G,0FAEJwN,GAAkBpF,QAAQpI,G,OAChC3L,OAAOC,SAASc,S,+CAEhBkN,QAAQC,IAAR,M,oJAIWf,GACb,IAAM8P,EAAoB9P,EAAQE,gBAAgB5B,MAC/C+I,QAAO,SAAA9I,GAAC,MAAsB,YAAlBA,EAAEK,aAAiD,YAApBL,EAAEG,iBAEhD,OACE,oCACgC,IAA7BoR,EAAkB5N,QACjB,oCACE,0BAAM5K,UAAU,WAAhB,gDAGA,8BAGJ,yBAAKA,UAAU,kBACZwY,EAAkB1S,KAAI,SAAAmB,GAAC,OACtB,kBAAC6D,GAAA,EAAD,CAAOC,MAAI,EAAC9E,IAAKgB,EAAEJ,GAAI3G,QAASoY,GAAerR,EAAEG,eAAejE,OAC9D,uBAAGrH,KAAI,qBAAgBmL,EAAEJ,KACtBI,EAAEmD,KADL,QAEUnD,EAAEG,cAFZ,a,oCAWEsB,GAAU,IAAD,OACf+P,EAAkB/P,EAAQE,gBAAgB5B,MAC7C+I,QAAO,SAAA9I,GAAC,MAAsB,WAAlBA,EAAEK,aAAgD,YAApBL,EAAEG,iBAE/C,OACE,oCAC8B,IAA3BqR,EAAgB7N,QACf,0BAAM5K,UAAU,WAAhB,8CAIF,kBAAC2U,GAAA,EAAD,KACG8D,EAAgB3S,KAAI,SAAAmB,GAAC,OACpB,kBAAC0N,GAAA,EAAUhU,KAAX,CAAgBsF,IAAKgB,EAAEC,UAAWlH,UAAU,oBAC1C,uBAAGlE,KAAI,qBAAgBmL,EAAEJ,KAAOI,EAAEmD,MAClC,kBAACxE,GAAA,EAAD,CAAa5F,UAAU,iBAAiBS,KAAK,MAC3C,kBAACI,EAAA,EAAD,CACEX,QAAQ,UACRU,QAAS,kBAAM,EAAKyO,OAAOpI,EAAEJ,MAF/B,UAMA,kBAAChG,EAAA,EAAD,CACEX,QAAQ,SACRU,QAAS,kBAAM,EAAK0O,QAAQrI,EAAEC,aAFhC,oB,+BAcJ,IACAwB,EAAY3I,KAAKJ,MAAjB+I,QAER,OACE,yBAAK1I,UAAU,iBACb,wCACCD,KAAK2Y,eAAehQ,GACrB,6BACA,uCACC3I,KAAK4Y,cAAcjQ,Q,GApGD5H,IAAMC,WA0GlBE,eAAWsX,ICxHpBzF,GAAQ,CACZ,CACEpR,OAAQ,gBACRqR,QAAS,sGAETC,eAAe,EACfC,UAAW,UAEb,CACEvR,OAAQ,eACRqR,QAAS,iKAETC,eAAe,EACfC,UAAW,eAEb,CACEvR,OAAQ,wBACRqR,QAAS,8GAETC,eAAe,GAEjB,CACEtR,OAAQ,qBACRqR,QAAS,0KAETC,eAAe,EACfC,UAAW,eAEb,CACEvR,OAAQ,iBACRqR,QAAS,6DACTC,eAAe,EACfC,UAAW,eAEb,CACEvR,OAAQ,uBACRqR,QAAS,oIAETC,eAAe,IAIJ,SAAS4F,KACtB,OACE,kBAAC,KAAD,CACEjT,MAAOmN,GACPK,YAAU,EACVC,gBAAc,EACdE,cAAY,EACZD,mBAAiB,EACjBE,OAAQ,CACNpD,QAAS,CACPqD,aAAc,WAEhBC,QAAS,CACPC,SAAU,QAEZC,eAAgB,CACdC,QAAS,uB,ICrDEjE,G,kDACnB,WAAYhQ,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACX0X,eAAgB,GAChBC,gBAAiB,MAGnB,EAAKxX,SAAW,EAAKA,SAAS1B,KAAd,gBARC,E,qLAYZC,EAAeT,a,wDAIdsI,EAAY7H,EAAeb,WAAW2N,I,SACrBrD,GAAkBvB,iBAAiBL,G,OAApD4D,E,OACNvL,KAAK4B,SAAS,CACZkX,eAAgBvN,EAASxF,IAAI/F,KAAKiQ,mB,4IAItBpJ,GACd,MAAO,CAAEqJ,MAAOrJ,EAAQwD,KAAM3I,MAAOmF,EAAQC,M,+BAGtCiS,GACP/Y,KAAK4B,SAAS,CAAEmX,sB,+BAGR,IAAD,EAC8B/Y,KAAKJ,MAAlCkC,EADD,EACCA,KAAMC,EADP,EACOA,QAASqL,EADhB,EACgBA,UADhB,EAEqCpN,KAAKoB,MAAzC0X,EAFD,EAECA,eAAgBC,EAFjB,EAEiBA,gBAClB5I,EAAwC,OAApB4I,EAE1B,OACE,kBAAC/W,GAAA,EAAD,CAAOF,KAAMA,EAAMuJ,WAAW,EAAOpJ,OAAQF,GAC3C,kBAACC,GAAA,EAAMrC,OAAP,CAAc4C,aAAW,GACvB,kBAACP,GAAA,EAAMQ,MAAP,2BAGF,kBAACR,GAAA,EAAMS,KAAP,qDAEE,kBAAC,KAAD,CAAQxC,UAAU,eAChBE,QAAQ,OACRiQ,QAAS0I,EACTpX,MAAOqX,EACPxX,SAAUvB,KAAKuB,YAInB,kBAACS,GAAA,EAAMgB,OAAP,KACE,kBAAClC,EAAA,EAAD,CAAQX,QAAQ,OAAOU,QAASkB,GAAhC,SACA,kBAACjB,EAAA,EAAD,CACEX,QAAQ,OACR8C,SAAUkN,EACVtP,QAAS,kBAAMuM,EAAU2L,EAAgBrX,SAH3C,iB,GAvDwCX,IAAMC,W,mECHxD,WAAsBgY,GAAtB,mBAAA5a,EAAA,6DACQ6a,EAAW,IAAIC,UACZC,OAAO,QAASH,EAAW,SAE9BI,EAAS,CACbhc,QAAS,CACP,cAAgB,aAAhB,OATkB,qBAGxB,SAUoBic,KAAMC,KAZF,gCAYwBL,EAAUG,GAV1D,cAUQ5a,EAVR,yBAWSA,EAAIC,KAAKA,KAAKlB,MAXvB,4C,sBAce,QACbgc,O,6ECXmBC,I,yDACnB,WAAY5Z,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXqY,MAAO,KACPpY,WAAW,GAGb,EAAKqY,aAAe,EAAKA,aAAa7Z,KAAlB,gBACpB,EAAK8Z,YAAc,EAAKA,YAAY9Z,KAAjB,gBACnB,EAAK0Z,OAAS,EAAKA,OAAO1Z,KAAZ,gBAVG,E,yDAaN+Z,GACX5Z,KAAK4Z,OAASA,I,sJAINxM,EAAcpN,KAAKJ,MAAnBwN,UACRpN,KAAK4B,SAAS,CAAEP,WAAW,IACPrB,KAAK4Z,OAAOC,WAEpBC,OAAZ,uCAAmB,WAAOC,GAAP,eAAA3b,EAAA,+EAES4b,GAAgBT,OAAOQ,GAFhC,OAETE,EAFS,OAGf7M,EAAU6M,GAHK,gDAKfxQ,QAAQC,IAAR,MACA0D,EAAU,MANK,QASjB,EAAKxL,SAAS,CACZ6X,MAAO,KACPpY,WAAW,IAXI,yDAAnB,uD,wIAgBUoY,GACVzZ,KAAK4B,SAAS,CAAE6X,MAAOA,EAAM,O,+BAGrB,IAAD,SACsBzZ,KAAKoB,MAA1BqY,EADD,EACCA,MAAOpY,EADR,EACQA,UADR,EAEmBrB,KAAKJ,MAAvBkC,EAFD,EAECA,KAAMC,EAFP,EAEOA,QACRmY,EAA4B,OAAVT,GAAkBpY,EAE1C,OACE,kBAACW,GAAA,EAAD,CACE/B,UAAU,wBACV6B,KAAMA,EACNG,OAAQF,EACRrB,KAAK,KACLwB,UAAQ,GAER,kBAACF,GAAA,EAAMrC,OAAP,CAAc4C,aAAW,GACvB,kBAACP,GAAA,EAAMQ,MAAP,gCAIF,kBAACR,GAAA,EAAMS,KAAP,KACE,yBAAKxC,UAAU,QAAf,qCAGA,yBAAKA,UAAU,YACb,kBAAC,KAAD,CACEka,OAAQna,KAAK2Z,YACbS,YAAU,EACVC,SAAO,IAEN,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,wBAASD,IACP,kBAAC,KAAD,CACEE,IAAK,EAAKd,aACVD,MAAOA,GAAS/C,KAChBT,OAAQ,IAEV,0BAAWsE,WAMrB,kBAACvY,GAAA,EAAMgB,OAAP,KACE,kBAAClC,EAAA,EAAD,CAAQX,QAAQ,OAAOU,QAASkB,GAAhC,SACA,kBAACjB,EAAA,EAAD,CACEX,QAAQ,OACRU,QAAS,kBAAM,EAAK0Y,OAAOE,IAC3BxW,SAAUiX,GAET7Y,EAAY,aAAe,iB,GA3FSN,IAAMC,YCW1CoW,GAAa,CACxBpJ,SAAU,WACVqJ,SAAU,WACVC,MAAO,SAGHmD,G,kDACJ,WAAY7a,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,CACXuH,QAAS,KACTwP,gBAAiB,KACjB/J,YAAY,EACZ1I,IAAK0R,GAAWpJ,SAChBvC,iBAAiB,EACjBwJ,iBAAiB,EACjByF,kBAAkB,EAClBC,QAAQ,GAGV,EAAKvF,eAAiB,EAAKA,eAAevV,KAApB,gBACtB,EAAKoY,mBAAqB,EAAKA,mBAAmBpY,KAAxB,gBAC1B,EAAK+a,YAAc,EAAKA,YAAY/a,KAAjB,gBACnB,EAAKgb,cAAgB,EAAKA,cAAchb,KAAnB,gBACrB,EAAK8P,gBAAkB,EAAKA,gBAAgB9P,KAArB,gBACvB,EAAK8F,UAAY,EAAKA,UAAU9F,KAAf,gBACjB,EAAK4V,WAAa,EAAKA,WAAW5V,KAAhB,gBAnBD,E,uLAuBAhE,EAAamE,KAAKJ,MAA3B2V,MAAS1Z,OACXqC,EAAWrC,EAAOqC,S,uBAGtB8B,KAAK4B,SAAS,CAAE6J,iBAAiB,I,mDAKXjC,GAAkBT,WAAW7K,G,OAA7CyK,E,OACN3I,KAAK4B,SAAS,CACZ+G,UACAwP,gBAAgB,gBAAMxP,GACtB8C,iBAAiB,IAEnBzL,KAAKyV,a,kDAELzV,KAAK4B,SAAS,CAAE6J,iBAAiB,IACjChC,QAAQC,IAAR,M,2JAKF1J,KAAK0V,kB,sCAGU,IACPhQ,EAAQ1F,KAAKoB,MAAbsE,IAEFqQ,EADSjX,EAAcxD,iBACN4B,IAAI,QAAUka,GAAWpJ,SAE5C+H,IAAYrQ,GACd1F,KAAK2F,UAAUoQ,K,gCAITrQ,GACR1F,KAAK4B,SAAS,CAAE8D,QAEhB,IAAM7J,EAASiD,EAAcxD,iBAC7BO,EAAO+C,IAAI,MAAO8G,GAElB5G,EAAclD,kBAAkBC,K,mCAGpB,IAAD,EACgBmE,KAAKoB,MAAxBuH,EADG,EACHA,QAASgS,EADN,EACMA,OACZhS,IAAWgS,IAIK7a,EAAeT,cAC/BS,EAAeb,WAAWf,WAAayK,EAAQzK,WAE/B4X,GAAc7B,uBACjCjU,KAAK2F,UAAUyR,GAAWpJ,UAC1B8H,GAAcxB,qBACdtU,KAAK4B,SAAS,CAAE+Y,QAAQ,Q,uCAK1B3a,KAAK4B,UAAS,SAAAoU,GAAS,MAAK,CAC1B5H,YAAa4H,EAAU5H,iB,yCAIR5M,EAAOE,GAAQ,IACxByW,EAAoBnY,KAAKoB,MAAzB+W,gBACRA,EAAgB3W,GAASE,EACzB1B,KAAK4B,SAAS,CAAEuW,sB,2JAIRA,EAAoBnY,KAAKoB,MAAzB+W,gB,kBAEA3O,GAAkBR,cAAcmP,G,OACtCnY,KAAK4B,SAAS,CACZ+G,QAAQ,gBAAMwP,KAEhBnY,KAAKoV,iB,gDAEL3L,QAAQC,IAAR,M,4LAIgB+M,G,oEAClBzW,KAAK4B,SAAS,CAAE8Y,kBAAkB,KAE9BjE,E,uBAC0BzW,KAAKoB,MAAzB+W,gBACQ1B,WAAaA,E,SACvBzW,KAAK4a,c,sLAIOvL,G,gFACZ1G,EAAY3I,KAAKoB,MAAjBuH,QACA7E,EAAc9D,KAAKJ,MAAnBkE,UACR9D,KAAK4B,SAAS,CAAEqT,iBAAiB,I,kBAGzB1L,GAAkBuR,aAAanS,EAAQ7B,GAAIuI,G,OACjDvL,EACE,8CACA,W,gDAGFA,EAAU,sCAAuC,W,+IAI3C,IAAD,SAUH9D,KAAKoB,MARPuH,EAFK,EAELA,QACAwP,EAHK,EAGLA,gBACAzS,EAJK,EAILA,IACA0I,EALK,EAKLA,WACA3C,EANK,EAMLA,gBACAwJ,EAPK,EAOLA,gBACAyF,EARK,EAQLA,iBACAC,EATK,EASLA,OAGF,OAAKhS,EAeH,oCACE,kBAACgB,EAAA,EAAD,KACE,+BAAQhB,EAAQzK,WAEjByc,GAAU,kBAAC9B,GAAD,MACX,kBAAC,GAAD,CACE/W,KAAMmT,EACN7H,UAAWpN,KAAK2P,gBAChB5N,QAAS,kBAAM,EAAKH,SAAS,CAAEqT,iBAAiB,OAElD,kBAAC,GAAD,CACEnT,KAAM4Y,EACNtN,UAAWpN,KAAK6a,cAChB9Y,QAAS,kBAAM,EAAKH,SAAS,CAAE8Y,kBAAkB,OAEnD,kBAACxQ,GAAA,EAAD,CAAMjK,UAAU,oBAAoBkK,GAAG,YAAY8L,OAAO,aACxD,kBAAC,GAAD,CACEtN,QAASA,EACTjD,IAAKA,EACL0I,WAAYA,EACZwJ,cAAe5X,KAAK4a,YACpBnM,iBAAkBzO,KAAKoV,eACvB5G,SAAU,kBAAM,EAAK5M,SAAS,CAAEqT,iBAAiB,KACjDsC,gBAAiB,kBAAM,EAAK3V,SAAS,CAAE8Y,kBAAkB,KACzD9M,YAAa5N,KAAK2F,YAEpB,kBAACuE,GAAA,EAAKzH,KAAN,KACGiD,IAAQ0R,GAAWpJ,UAClB,kBAAC,GAAD,CACErF,QAASA,EACTwP,gBAAiBA,EACjB/J,WAAYA,EACZ6J,mBAAoBjY,KAAKiY,qBAG5BvS,IAAQ0R,GAAWC,UAClB,kBAAC,GAAD,CAAiB1O,QAASA,IAE3BjD,IAAQ0R,GAAWE,OAClB,kBAAC,GAAD,CAAc3O,QAASA,OApD7B,oCACE,kBAACgB,EAAA,EAAD,KACE,2CAED8B,EACG,kDACA,kBAACN,GAAD,W,GA5JQpK,IAAMC,WAmNbE,eAAWD,GAAYwZ,GAAS,iBCjOzCM,I,yDACJ,WAAYnb,GAAQ,IAAD,8BACjB,cAAMA,IAEDwB,MAAQ,CACXyF,QAAS,CACPiG,QAAS,KACTzC,KAAM,GACNK,YAAa,GACb8H,WAAY,GACZvH,UAAW,GACXL,UAAW,GACXsC,cAAc,EACd5F,OAAQ,iBACRxE,KAAM,SACNmP,WAAY,MAIhB,EAAKD,mBAAqB,EAAKA,mBAAmBnS,KAAxB,gBAC1B,EAAK6H,cAAgB,EAAKA,cAAc7H,KAAnB,gBAnBJ,E,kLAuBZC,EAAeT,cAGZyH,EAAKhH,EAAeb,WAAW2N,KAC7B/F,EAAY7G,KAAKoB,MAAjByF,SACAiG,QAAUhG,EAClB9G,KAAK4B,SAAS,CAAEiF,aALhB/H,EAAc1C,SAAS,K,+IASRoF,EAAOE,GAAQ,IACxBmF,EAAY7G,KAAKoB,MAAjByF,QACRA,EAAQrF,GAASE,EACjB1B,KAAK4B,SAAS,CAAEiF,c,+JAIRA,EAAY7G,KAAKoB,MAAjByF,Q,kBAEkB0C,GAAkB7B,cAAcb,G,OAAlDwI,E,OACNvQ,EAAc1C,SAAd,qBAAqCiT,I,gDAErC5F,QAAQC,IAAR,M,8IAIM,IACA7C,EAAY7G,KAAKoB,MAAjByF,QACFmU,EAA2C,KAAxBnU,EAAQwD,KAAKzF,OAEtC,OACE,kBAAC,GAAD,CAAQ3E,UAAW,oCACjB,kBAAC0J,EAAA,EAAD,KACE,oDAEF,kBAACE,EAAA,EAAD,KACE,kBAACvH,EAAA,EAAD,KACE,kBAAC4H,GAAA,EAAD,CAAMjK,UAAU,oBAAoBkK,GAAG,YAAY8L,OAAO,aACxD,kBAAC/L,GAAA,EAAKvK,OAAN,KACE,6BACA,4BAAI,8CAAJ,sBAEF,kBAACuK,GAAA,EAAKzH,KAAN,KACE,kBAAC,GAAD,CACEoE,QAASA,EACTmL,mBAAoBhS,KAAKgS,mBACzBE,cAAY,IAEd,6BACA,kBAACpR,EAAA,EAAD,CACEX,QAAQ,OACRO,KAAK,KACLG,QAASb,KAAK0H,cACdxE,OAAK,EACLD,SAAU+X,GALZ,mB,GAzEYja,IAAMC,YA2FnBE,eAAW6Z,I,+BCpF1B,SAASE,GAAaxf,EAAUyf,GAC9BC,KAAQC,SAAS3f,EAAS4f,SAAW5f,EAASF,MAGhD4f,KAAQG,WAAW,iBACnBL,GAAazf,OAAOC,UAEpB,IAAMS,GAAUqf,OAGhB,SAASC,KACP,OACE,kBAAC,IAAD,CAAYtf,QAASA,IACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2C,KAAK,sBAAqB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAK,oBAAmB,kBAAC,GAAD,OAC/B,kBAAC,IAAD,CAAOA,KAAK,aAAY,kBAAC,GAAD,OACxB,kBAAC,IAAD,CAAOA,KAAK,WAAU,kBAAC,GAAD,OACtB,kBAAC,IAAD,CAAOA,KAAK,gBAAe,kBAAC,GAAD,OAC3B,kBAAC,IAAD,CAAO4c,OAAK,EAAC5c,KAAK,KAAI,kBAAC,GAAD,SAX9B3C,GAAQwf,OAAOT,IAiBfU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACL,GAAD,OAEFM,SAASC,eAAe,U,wCChD1BC,EAAOC,QAAU,IAA0B,8C","file":"static/js/main.936350e2.chunk.js","sourcesContent":["function getQueryParams() {\n  const hash = window.location.hash;\n  return new URLSearchParams(hash.split('?')[1]);\n}\n\nfunction updateQueryParams(params) {\n  const baseURL = window.location.href.split('?')[0];\n  const paramsEmpty = params.toString() === '';\n\n  window.history.replaceState(\n    {},\n    '',\n    baseURL + (paramsEmpty ? '' : '?') + params.toString()\n  );\n}\n\nfunction navigate(route) {\n  window.history.pushState({}, '', route);\n  window.location.reload();\n}\n\nexport default {\n  getQueryParams,\n  updateQueryParams,\n  navigate\n};","import {\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n  ApolloLink\n} from 'apollo-boost';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nconst httpLink = new HttpLink({\n  uri: process.env.NODE_ENV === 'development'\n    ? 'http://localhost:3000/graphql'\n    : 'https://quaranteamtech.herokuapp.com/graphql'\n});\n\nconst authLink = new ApolloLink((operation, forward) => {\n  const jwt = cookies.get('jwt');\n\n  if (jwt) {\n    operation.setContext({\n      headers: {\n        'Authorization': `Bearer ${jwt}`\n      }\n    });\n  }\n  \n  return forward(operation);\n});\n\nexport const client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n  defaultOptions: {\n    query: {\n      fetchPolicy: 'no-cache'\n    }\n  }\n});","import gql from 'graphql-tag';\nimport Cookies from 'universal-cookie';\nimport jwtDecode from 'jwt-decode';\nimport WebController from '../controllers/webController';\nimport { client } from './graphqlClient';\n\nconst API_PREFIX = process.env.NODE_ENV === 'development'\n  ? 'http://localhost:3000/'\n  : 'https://quaranteamtech.herokuapp.com/';\nconst GITHUB_AUTH_ENDPOINT = 'auth/github';\n\nconst cookies = new Cookies();\n\nconst REGISTER_MUTATION = gql`\n  mutation ($username: String!, $email: String!, $password:String!) {\n    register(\n      input: {\n        username: $username\n        email: $email\n        password: $password\n      }\n    ) { jwtToken }\n  }`;\n\nconst LOGIN_MUTATION = gql`\n  mutation ($email: String!, $password:String!) {\n    login(\n      input: {\n        email: $email\n        password: $password\n      }\n    ) { jwtToken }\n  }`;\n\nasync function register(email, username, password) {\n  try {\n    const res = await client.mutate({\n      mutation: REGISTER_MUTATION,\n      variables: { email, username, password }\n    });\n\n    const jwt = res.data.register.jwtToken;\n    cookies.set('jwt', jwt, { path: '/' });\n\n    WebController.navigate(`/#/profile/${username}`);\n  } catch (error) {\n    throw {\n      message: 'An account already exists with this email or username.'\n    };\n  }\n}\n\nasync function login(email, password) {\n  try {\n    const res = await client.mutate({\n      mutation: LOGIN_MUTATION,\n      variables: { email, password }\n    });\n\n    const jwt = res.data.login.jwtToken;\n    if (jwt) {\n      cookies.set('jwt', jwt, { path: '/' });\n      return { jwt };\n    } else {\n      throw { message: 'Invalid username or password.' };\n    }\n  } catch (error) {\n    throw error;\n  }\n}\n\nfunction handleGitHubLogin() {\n  const params = WebController.getQueryParams();\n  const jwt = params.get('jwt');\n  params.delete('jwt');\n  WebController.updateQueryParams(params);\n\n  if (jwt) {\n    cookies.set('jwt', jwt, { path: '/' });\n    WebController.navigate(`/#/profile/${getToken().username}`);\n  }\n}\n\nfunction isLoggedIn() {\n  const jwt = cookies.get('jwt');\n  if (!jwt) {\n    return false;\n  }\n  try {\n    jwtDecode(jwt);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction getToken() {\n  const jwt = cookies.get('jwt');\n  if (!jwt) {\n    return null;\n  }\n  try {\n    return jwtDecode(jwt);\n  } catch {\n    return null;\n  }\n}\n\nfunction logOut() {\n  cookies.remove('jwt', { path: '/' });\n}\n\nexport default {\n  register,\n  login,\n  handleGitHubLogin,\n  isLoggedIn,\n  logOut,\n  getToken,\n  GITHUB_AUTH_URL: API_PREFIX + GITHUB_AUTH_ENDPOINT\n};\n\nexport const LoginIntent = {\n  PROFILE: 'profile',\n  CREATE_PROJECT: 'create_project'\n};","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavLink,\n  Button,\n  Dropdown\n} from 'react-bootstrap';\nimport { FaUser } from 'react-icons/fa';\nimport { withContext } from '../components/layout';\nimport UserController, { LoginIntent } from \"../controllers/userController\";\nimport '../styles/header.scss';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.logOut = this.logOut.bind(this);\n  }\n\n  logOut() {\n    UserController.logOut();\n    window.history.pushState({}, '', '/');\n    window.location.reload();\n  }\n\n  render() {\n    const { showLoginModal } = this.props;\n    const username = UserController.isLoggedIn()\n      ? UserController.getToken().username\n      : null;\n\n    return (\n      <header className=\"header\">\n        <div>\n          <Navbar variant=\"dark\">\n            <NavbarBrand href=\"/\"><span>🧬</span> Quaranteam</NavbarBrand>\n            <Nav className=\"ml-auto\">\n              <NavLink\n                className=\"header-projects-nav\"\n                href=\"/#/projects\"\n              >\n                Projects\n              </NavLink>\n              <NavLink href=\"/#/people\">People</NavLink>\n\n              {UserController.isLoggedIn()\n                ? (\n                  <Dropdown drop=\"left\">\n                    <Dropdown.Toggle variant=\"outline-light\" size=\"sm\" className=\"user-dropdown\">\n                      <FaUser />\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item href={`/#/profile/${username}`}>\n                        My Profile\n                      </Dropdown.Item>\n                      <Dropdown.Item href={`/#/profile/${username}?tab=projects`}>\n                        My Projects\n                      </Dropdown.Item>\n                      <Dropdown.Item href={`/#/profile/${username}?tab=inbox`}>\n                        My Inbox\n                      </Dropdown.Item>\n                      <Dropdown.Item href={`/#/projects/create`}>\n                        Create Project\n                      </Dropdown.Item>\n                      <Dropdown.Item onClick={this.logOut}>Logout</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                ) : (\n                  <Button\n                    className=\"login-btn\"\n                    variant=\"light\"\n                    onClick={() => showLoginModal(LoginIntent.PROFILE)}\n                  >\n                    Login\n                  </Button>\n                )\n              }\n            </Nav>\n          </Navbar>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default withContext(withRouter(Header));","import React from \"react\";\nimport { Button, Col } from 'react-bootstrap';\nimport Alert from 'react-bootstrap/Alert'\nimport Form from 'react-bootstrap/Form';\nimport { FaGithub } from 'react-icons/fa';\nimport Modal from 'react-bootstrap/Modal';\nimport UserController from '../../controllers/userController';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport '../../styles/auth.scss';\n\nexport default class LoginModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      isLoading: false,\n      errorMessage: null\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.login = this.login.bind(this);\n  }\n\n  onChange(field, event) {\n    const value = event.target.value;\n    this.setState({ [field]: value });\n  }\n\n  async login() {\n    this.setState({ isLoading: true });\n    const { onLogin } = this.props;\n    const { email, password } = this.state;\n\n    try {\n      await UserController.login(email, password);\n      onLogin();\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n    }\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    const { show, onClose } = this.props;\n    const { errorMessage, isLoading } = this.state;\n\n    return (\n      <Modal\n        show={show}\n        className=\"login\"\n        onHide={onClose}\n        size=\"md\"\n        centered\n      >\n        <KeyboardEventHandler\n          handleFocusableElements={true}\n          handleKeys={['enter']}\n          onKeyEvent={this.login}\n        />\n        <Col>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              <span>👩‍🔬</span> Login\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"show-grid\">\n            {errorMessage && <Alert variant=\"danger\">{errorMessage}</Alert>}\n            <Form>\n              <Form.Group>\n                <Form.Control type=\"email\" placeholder=\"Email\" onChange={(event) => this.onChange('email', event)} />\n              </Form.Group>\n              <Form.Group>\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={(event) => this.onChange('password', event)} />\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"primary\"\n              onClick={this.login}\n              disabled={isLoading}\n              block\n            >\n              {isLoading ? 'Logging in...' : 'Login'}\n            </Button>\n            <h5>Or...</h5>\n            <Button href={UserController.GITHUB_AUTH_URL} variant=\"success\" block>\n              <span><FaGithub className=\"icon\" size=\"1.8em\" /> Login with GitHub</span>\n            </Button>\n          </Modal.Footer>\n          <hr />\n          <h6>\n            Don't have an account?\n            &nbsp;\n            <a href=\"/\" style={{ color: '#333333' }}>Register here!</a>\n          </h6>\n        </Col>\n        <br />\n      </Modal>\n    );\n  }\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Header from './header';\nimport LoginModal from './modals/loginModal';\nimport Alert from 'react-bootstrap/Alert';\nimport '../styles/layout.scss';\nimport WebController from '../controllers/webController';\nimport UserController, { LoginIntent } from '../controllers/userController';\n\nexport const LayoutContext = React.createContext();\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isAlertVisible: false,\n      isLoginModalVisible: false,\n      loginIntent: null,\n      alertType: null,\n      alertText: null\n    };\n\n    this.followLoginIntent = this.followLoginIntent.bind(this);\n    this.showLoginModal = this.showLoginModal.bind(this);\n    this.showAlert = this.showAlert.bind(this);\n    this.renderAlert = this.renderAlert.bind(this);\n  }\n\n  followLoginIntent() {\n    this.setState({ isLoginModalVisible: false });\n    const { loginIntent } = this.state;\n\n    if (loginIntent === LoginIntent.PROFILE) {\n      const username = UserController.getToken().username;\n      WebController.navigate(`/#/profile/${username}`)\n    } else if (loginIntent === LoginIntent.CREATE_PROJECT) {\n      WebController.navigate(`/#/projects/create`);\n    }\n  }\n\n  showLoginModal(loginIntent) {\n    this.setState({\n      isLoginModalVisible: true,\n      loginIntent\n    });\n  }\n\n  showAlert(text, type) {\n    this.setState({\n      isAlertVisible: true,\n      alertType: type,\n      alertText: text\n    });\n  }\n\n  renderAlert() {\n    const { isAlertVisible, alertType, alertText } = this.state;\n\n    if (!isAlertVisible) {\n      return null;\n    }\n\n    return (\n      <Alert\n        className=\"layout-alert\"\n        variant={alertType}\n        dismissible={true}\n        onClose={() => this.setState({ isAlertVisible: false })}\n      >\n        {alertText}\n      </Alert>\n    );\n  }\n\n  render() {\n    const { className, children } = this.props;\n    const { isLoginModalVisible } = this.state;\n\n    const context = {\n      showAlert: this.showAlert,\n      showLoginModal: this.showLoginModal\n    };\n\n    return (\n      <LayoutContext.Provider value={context}>\n        <Header />\n        <LoginModal\n          show={isLoginModalVisible}\n          onClose={() => this.setState({ isLoginModalVisible: false })}\n          onLogin={this.followLoginIntent}\n        />\n        <div className=\"container-fluid\">\n          {this.renderAlert()}\n          <main className={className}>{children}</main>\n        </div>\n      </LayoutContext.Provider>\n    );\n  }\n}\n\nexport function withContext(Component, pageClassName) {\n  return function connectedComponent(props) {\n    const consumer = (\n      <LayoutContext.Consumer>\n        {context =>\n          <Component\n            {...props}\n            showAlert={context.showAlert}\n            showLoginModal={context.showLoginModal}\n          />\n        }\n      </LayoutContext.Consumer>\n    );\n\n    if (pageClassName) {\n      return (\n        <Layout className={pageClassName}>\n          {consumer}\n        </Layout>\n      );\n    }\n\n    return consumer;\n  }\n}\n\nexport default withRouter(Layout);","import React from \"react\";\nimport { withRouter, Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Alert from 'react-bootstrap/Alert'\nimport Form from 'react-bootstrap/Form';\nimport { FaGithub } from 'react-icons/fa';\nimport UserController, { LoginIntent } from '../controllers/userController';\nimport WebController from '../controllers/webController';\nimport '../styles/auth.scss';\nimport { withContext } from './layout';\n\nconst ERROR_MESSAGES = {\n  'duplicate': 'An account already exists with this email or username.'\n};\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      errorMessage: null\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.register = this.register.bind(this);\n  }\n\n  componentDidMount() {\n    const params = WebController.getQueryParams();\n    const error = params.get('error');\n\n    if (error) {\n      this.setState({\n        errorMessage: ERROR_MESSAGES[error] || 'An unknown error occurred.'\n      });\n    }\n  }\n\n  onChange(field, event) {\n    const value = event.target.value;\n    this.setState({ [field]: value });\n  }\n\n  async register() {\n    const { email, username, password } = this.state;\n\n    try {\n      await UserController.register(email, username, password);\n      WebController.navigate(`/#/profile/${username}`);\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n    }\n  }\n\n  render() {\n    const { showLoginModal } = this.props;\n    const {\n      email,\n      username,\n      password,\n      errorMessage\n    } = this.state;\n\n    const isRegisterDisabled = email.trim() === '' ||\n      username.trim() === '' || password.trim() === '';\n\n    return (\n        <div className=\"register\">\n          <h1>\n            Create an Account\n          </h1>\n          {errorMessage && <Alert variant=\"danger\">{errorMessage}</Alert>}\n          <Form>\n            <Form.Group>\n              <Form.Control type=\"email\" placeholder=\"Email\" onChange={(event) => this.onChange('email', event)}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" placeholder=\"Username\" onChange={(event) => this.onChange('username', event)}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"password\" placeholder=\"Password\" onChange={(event) => this.onChange('password', event)}/>\n            </Form.Group>\n            <Button onClick={this.register} variant=\"primary\" block disabled={isRegisterDisabled}>\n              Register\n            </Button>\n            <h6>Or...</h6>\n            <Button href={UserController.GITHUB_AUTH_URL} variant=\"success\" block>\n              <span><FaGithub className=\"icon\" size=\"1.8em\"/> Register with GitHub</span>\n            </Button>\n            <h6>\n              Already have an account?\n              <b>\n                <Link to=\"#\" onClick={() => showLoginModal(LoginIntent.PROFILE)}> Login</Link>\n              </b>\n            </h6>\n          </Form>\n        </div>\n    );\n  }\n}\n\nexport default withContext(withRouter(Register));","import React from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport { FaUser, FaLightbulb, FaPlus, FaUserFriends, FaLaptopCode, FaSearch } from 'react-icons/fa';\nimport 'react-vertical-timeline-component/style.min.css';\nimport '../styles/homeTimeline.scss';\n\nconst TimelineTab = {\n  OWNER: 'owner',\n  MEMBER: 'member'\n};\n\nconst TIMELINE_ELEMENT_PROPS = {\n  contentStyle: { background: '#6c757d', color: '#fff' },\n  contentArrowStyle: { borderRight: '7px solid #6c757d' },\n  iconStyle: { background: '#6c757d', color: '#fff' }\n};\n\nconst OWNER_STEPS = [\n  {\n    title: 'Register',\n    text: 'Create a profile on Quaranteam, including a bio, your skills, and your interest areas.',\n    icon: <FaUser />\n  },\n  {\n    title: 'Ideate',\n    text: 'Come up with an exciting idea for a side project you\\'d like to work on.',\n    icon: <FaLightbulb />\n  },\n  {\n    title: 'Create a Project',\n    text: 'Create a project listing on Quaranteam. You will be able to specify the project\\'s'\n      + ' description, relevant interest areas, and skills required. You can'\n      + ' also configure whether members can join directly, or whether they must be invited by you.',\n    icon: <FaPlus />\n  },\n  {\n    title: 'Find Members',\n    text: 'Users can request to join your project themselves, or you can invite them to your'\n      + ' project yourself. There are many talented users on Quaranteam!',\n    icon: <FaUserFriends />\n  },\n  {\n    title: 'Develop!',\n    text: 'Now that the project has a team, development can begin. As the owner, you can coordinate'\n      + ' with teammates as to how to collaborate. Good luck!',\n    icon: <FaLaptopCode />\n  }\n];\n\nconst MEMBER_STEPS = [\n  {\n    title: 'Register',\n    text: 'Create a profile on Quaranteam, including a bio, your skills, and your interest areas.',\n    icon: <FaUser />\n  },\n  {\n    title: 'Find a Project',\n    text: 'Quaranteam hosts numerous exciting projects. Search through the listings and find'\n      + ' one that matches your skills and interest areas.',\n    icon: <FaSearch />\n  },\n  {\n    title: 'Join a Project',\n    text: 'Once you\\'ve found an exciting project, the next step is to join. Some projects can be'\n      + ' joined immediately; for other, you will need to request to join.',\n    icon: <FaUserFriends />\n  },\n  {\n    title: 'Develop!',\n    text: 'Now that you\\'ve joined a project, you can begin developing. The project owner will provide'\n      + ' guidelines on how to collaborate. Good luck!',\n    icon: <FaLaptopCode />\n  }\n];\n\nexport default class HomeTimeline extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tab: TimelineTab.OWNER\n    };\n\n    this.changeTab = this.changeTab.bind(this);\n  }\n\n  changeTab(tab) {\n    this.setState({ tab });\n  }\n\n  render() {\n    const { tab } = this.state;\n    const steps = tab === TimelineTab.OWNER ? OWNER_STEPS : MEMBER_STEPS;\n\n    return (\n      <div className=\"home-timeline\">\n        <h1 className=\"timeline-header\"><span>🤔</span> How does it work?</h1>\n        <ButtonGroup className=\"tab-changer\">\n          <Button\n            onClick={() => this.changeTab(TimelineTab.OWNER)}\n            active={tab === TimelineTab.OWNER}\n            variant=\"secondary\"\n          >\n            I have a project idea\n          </Button>\n          <Button\n            onClick={() => this.changeTab(TimelineTab.MEMBER)}\n            active={tab === TimelineTab.MEMBER}\n            variant=\"secondary\"\n          >\n            I want to join a project\n          </Button>\n        </ButtonGroup>\n        <VerticalTimeline>\n          {steps.map((step, i) => (\n            <VerticalTimelineElement \n              {...TIMELINE_ELEMENT_PROPS}\n              icon={step.icon}\n              key={i}\n            >\n              <h3>{step.title}</h3>\n              <p className=\"element-text\">\n                {step.text}\n              </p>\n            </VerticalTimelineElement>\n          ))}\n        </VerticalTimeline>\n      </div>\n    );\n  }\n}","import gql from 'graphql-tag';\nimport { client } from './graphqlClient';\n\nconst GET_PROJ_COUNT_QUERY = gql`\n  query {\n    allProjects {\n      totalCount\n    }\n  }\n`;\n\nconst GET_PROJECT_QUERY = gql`\n  query ($id: Int!) {\n    projectById(id: $id) {\n      description, directions\n      name, languages\n      selfJoinable, status, type\n      id, interests, ownerId,\n      discordUrl\n      owner { id username }\n      members {\n        totalCount\n        nodes { id username }\n      }\n      pendingMembers {\n        nodes { id username }\n        edges { id type status }\n      }\n    }\n  }\n`;\n\nconst GET_PROJECTS_QUERY = gql`\n  query {\n    allProjects(\n      condition: { type: \"public\" }\n    ) {\n      edges {\n        node {\n          id, name, description\n          languages, interests, status\n          selfJoinable, type\n          members { totalCount }\n        }\n      }\n    }\n  }\n`;\n\nconst GET_FILTERED_PROJECTS_QUERY = gql`\n  query ($search: String!) {\n    allProjects(\n      filter: {\n        or: [\n          { name: { includesInsensitive: $search } }\n          { description: { includesInsensitive: $search } }\n          { interestsText: { includesInsensitive: $search } }\n          { languagesText: { includesInsensitive: $search } }\n        ]\n      },\n      condition: { type: \"public\" }\n    ) {\n      edges {\n        node {\n          id, name, description\n          languages, interests, status\n          selfJoinable, type\n          members { totalCount }\n        }\n      }\n    }\n  }\n`;\n\nconst GET_OWNED_PROJECTS_QUERY = gql`\n  query ($profileId: Int!) {\n    profileById(id: $profileId) {\n      ownedProjects {\n        nodes { id name }\n      }\n    }\n  }\n`;\n\nconst CREATE_PROJECT_MUTATION = gql` \n  mutation (\n    $ownerId: Int!\n    $name: String!\n    $description: String!\n    $directions: String!\n    $languages: [String]!\n    $interests: [String]!\n    $selfJoinable: Boolean!\n    $status: String!\n    $type: String!\n    $discordUrl: String!\n  ) {\n    createProject(\n      input: {\n        project: {\n          ownerId: $ownerId\n          name: $name\n          description: $description\n          directions: $directions\n          languages: $languages\n          interests: $interests\n          selfJoinable: $selfJoinable\n          status: $status\n          type: $type\n          discordUrl: $discordUrl\n        }\n      }\n    ) {\n      clientMutationId\n      project {\n        id\n      }\n    }\n  }`;\n\nconst UPDATE_PROJECT_MUTATION = gql`\n  mutation(\n    $id: Int!\n    $name: String!\n    $description: String!\n    $directions: String!\n    $languages: [String]!\n    $interests: [String]!\n    $selfJoinable: Boolean!\n    $status: String!\n    $type: String!\n    $discordUrl: String!\n  ) {\n    updateProjectById(\n      input: {\n        id: $id\n        projectPatch: {\n          name: $name\n          description: $description\n          directions: $directions\n          languages: $languages\n          interests: $interests\n          selfJoinable: $selfJoinable\n          status: $status\n          type: $type\n          discordUrl: $discordUrl\n        }\n      }\n    ) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETE_PROJECT_MUTATION = gql`\n  mutation($id: Int!) {\n    deleteProjectById(input: {id: $id}) {\n      clientMutationId\n    }\n  }\n`;\n\nasync function getProjCount() {\n  try {\n    const res = await client.query({\n      query: GET_PROJ_COUNT_QUERY\n    });\n    return res.data.allProjects.totalCount;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function updateProject(project) {\n  try {\n    await client.mutate({\n      mutation: UPDATE_PROJECT_MUTATION,\n      variables: project\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function deleteProject(id) {\n  try {\n    await client.mutate({\n      mutation: DELETE_PROJECT_MUTATION,\n      variables: { id }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getProject(id) {\n  try {\n    const res = await client.query({\n      query: GET_PROJECT_QUERY,\n      variables: { id }\n    });\n    const project = res.data.projectById;\n\n    // Including request type/status for each pending member\n    project.pendingMembers.nodes =\n      project.pendingMembers.nodes.map((p, i) => ({\n        ...p,\n        requestId: project.pendingMembers.edges[i].id,\n        requestStatus: project.pendingMembers.edges[i].status,\n        requestType: project.pendingMembers.edges[i].type\n      }));\n    \n    return project;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getProjects() {\n  try {\n    const res = await client.query({\n      query: GET_PROJECTS_QUERY\n    });\n\n    return res.data.allProjects.edges.map(p => p.node);\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getFilteredProjects(search) {\n  try {\n    const res = await client.query({\n      query: GET_FILTERED_PROJECTS_QUERY,\n      variables: { search }\n    });\n\n    return res.data.allProjects.edges.map(p => p.node);\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function createProject(project) {\n  try {\n    const res = await client.mutate({\n      mutation: CREATE_PROJECT_MUTATION,\n      variables: project\n    });\n    return res.data.createProject.project.id;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getOwnedProjects(profileId) {\n  try {\n    const res = await client.query({\n      query: GET_OWNED_PROJECTS_QUERY,\n      variables: { profileId }\n    });\n\n    return res.data.profileById.ownedProjects.nodes;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default {\n  getProjects,\n  getFilteredProjects,\n  getOwnedProjects,\n  getProject,\n  createProject,\n  deleteProject,\n  updateProject,\n  getProjCount\n};\n","import gql from 'graphql-tag';\nimport { client } from './graphqlClient';\n\nconst GET_PROF_COUNT_QUERY = gql`\n  query {\n    allProfiles {\n      totalCount\n    }\n  }\n`;\n\nconst GET_PROFILES_QUERY = gql`\n  query {\n    allProfiles (orderBy: BIO_ASC) {\n      edges {\n        node {\n          username\n          id\n          bio\n          interests\n          languages\n          pictureUrl\n        }\n      }\n    }\n  }\n`;\n\nconst GET_FILTERED_PROFILES_QUERY = gql`\n  query ($search: String!) {\n    allProfiles(\n      orderBy: BIO_ASC,\n      filter: {\n        or: [\n          { username: { includesInsensitive: $search } }\n          { bio: { includesInsensitive: $search } }\n          { interestsText: { includesInsensitive: $search } }\n          { languagesText: { includesInsensitive: $search } }\n        ]\n      }\n    ) {\n      edges {\n        node {\n          username\n          id\n          bio\n          interests\n          languages\n          pictureUrl\n        }\n      }\n    }\n  }\n`;\n\nconst PROFILE_QUERY = gql`\n  query ($username: String!) {\n    profileByUsername(username: $username) {\n      id, username pictureUrl, \n      bio, interests, languages, tz,\n      ownedProjects { nodes { id, name } }\n      projects { nodes { id, name } }\n      pendingProjects {\n        nodes { id, name }\n        edges { id, status, type }\n      }\n    }\n  }`;\n\nconst UPDATE_PROFILE_MUTATION = gql`\n  mutation (\n    $username: String!\n    $bio: String\n    $pictureUrl: String\n    $interests: [String]!\n    $languages: [String]!\n  ) {\n    updateProfileByUsername(\n      input: {\n        username: $username\n        profilePatch: {\n          bio: $bio\n          pictureUrl: $pictureUrl\n          interests: $interests\n          languages: $languages\n        }\n      }\n    ) { clientMutationId }\n  }`;\n\nasync function getProfCount() {\n  try {\n    const res = await client.query({\n      query: GET_PROF_COUNT_QUERY\n    });\n\n    return res.data.allProfiles.totalCount;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getProfile(username) {\n  try {\n    const res = await client.query({\n      query: PROFILE_QUERY,\n      variables: { username }\n    });\n\n    const profile = res.data.profileByUsername;\n\n    // Including request type/status in each pending project\n    profile.pendingProjects.nodes = \n      profile.pendingProjects.nodes.map((p, i) => ({\n      ...p,\n      requestId: profile.pendingProjects.edges[i].id,\n      requestStatus: profile.pendingProjects.edges[i].status,\n      requestType: profile.pendingProjects.edges[i].type\n    }));\n    \n    return profile;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function updateProfile(profile) {\n  profile.bio = profile.bio || null;\n  try {\n    await client.mutate({\n      mutation: UPDATE_PROFILE_MUTATION,\n      variables: profile\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getProfiles() {\n  try {\n    const res = await client.query({\n      query: GET_PROFILES_QUERY\n    });\n\n    return res.data.allProfiles.edges.map(p => p.node);\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getFilteredProfiles(search) {\n  try {\n    const res = await client.query({\n      query: GET_FILTERED_PROFILES_QUERY,\n      variables: { search }\n    });\n\n    return res.data.allProfiles.edges.map(p => p.node);\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default {\n  getProfile,\n  updateProfile,\n  getProfiles,\n  getFilteredProfiles,\n  getProfCount\n};","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport Layout from '../components/layout';\nimport Register from '../components/register';\nimport HomeTimeline from '../components/homeTimeline';\nimport ProjectController from '../controllers/projectController';\nimport ProfileController from '../controllers/profileController';\nimport UserController from '../controllers/userController';\nimport '../styles/home.scss';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projectCount: 0,\n      profileCount: 0\n    };\n  }\n\n  async componentDidMount() {\n    UserController.handleGitHubLogin();\n\n    try {\n      const projectCount = await ProjectController.getProjCount();\n      const profileCount = await ProfileController.getProfCount();\n      this.setState({ projectCount, profileCount });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const { profileCount, projectCount } = this.state;\n\n    return (\n      <>\n        <Layout className=\"home-page\">\n          <Helmet>\n            <title>Quaranteam</title>\n          </Helmet>\n          <Container >\n            <Row>\n              <Col xs={{ span: 12 }} md={{ span: 6 }} className=\"home-text\">\n                <h1 className=\"home-header\">\n                  <span>🧬</span> Quaranteam\n              </h1>\n                <br />\n                <p>\n                  Perhaps your internship was cancelled. Or perhaps you're simply bored.\n                  Creating a side project is a fun and effective way to continue improving\n                  your development skills.\n              </p>\n                <p>\n                  <b>Quaranteam</b> is the best platform for finding projects and team members.\n                Register to join <b>{profileCount}</b> members working\n                on <b>{projectCount}</b> projects!\n              </p>\n              </Col>\n              <Col xs={{ span: 12 }} md={{ span: 6 }}>\n                <Register />\n              </Col>\n            </Row>\n            <br />\n            <HomeTimeline />\n          </Container>\n          <footer>\n            <p>Quaranteam.tech © 2020</p>\n          </footer>\n        </Layout>\n        <div className=\"stars\"></div>\n        <div className=\"twinkling\"></div>\n      </>\n    );\n  }\n}","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport ReactMarkdown from 'react-markdown';\nimport Badge from 'react-bootstrap/Badge';\nimport '../../styles/projects.scss';\nimport '../../styles/searchCard.scss';\nimport '../../styles/markdown.scss';\n\nconst DEFAULT_DESCRIPTION = 'This project currently has no description.';\n\nexport default function ProjectCard({ project }) {\n  return (\n    <Card className=\"search-card\" bg=\"secondary\">\n      <a href={`/#/project/${project.id}`} style={{ color: 'inherit', textDecoration: 'inherit' }}>\n        <Card.Body>\n          <Card.Header>{project.name}</Card.Header>\n          <Card.Text>\n            <ReactMarkdown\n              className=\"markdown\"\n              disallowedTypes={['heading', 'link', 'image']}\n              unwrapDisallowed={true}\n              source={project.description || DEFAULT_DESCRIPTION}\n            />\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          <b>Members:</b> {project.members.totalCount + 1}\n          <br />\n          <b>Status:</b> {project.status || 'None listed'}\n          <br />\n\n          {project.interests.length > 0 && (\n            <>\n              <b>Interests: </b>\n              {project.interests.map(interest => (\n                <Badge pill key={interest} variant=\"dark\">\n                  {interest}\n                </Badge>\n              ))}\n              <br />\n            </>\n          )}\n\n          {project.languages.length > 0 && (\n            <>\n              <b>Skills: </b>\n              {project.languages.map(language => (\n                <Badge pill key={language} variant=\"dark\">\n                  {language}\n                </Badge>\n              ))}\n            </>\n          )}\n        </Card.Footer>\n      </a>\n    </Card >\n  );\n}","import React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport '../styles/loading.scss';\n\nexport default function Loading() {\n  return (\n    <div className=\"loading\">\n      <Spinner animation=\"grow\" variant=\"light\"/>\n      <h6>Loading...</h6>\n    </div>\n  );\n}","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport ScrollToTop from 'react-scroll-up';\nimport ProjectCard from '../components/project/projectCard';\nimport Loading from '../components/loading';\nimport { withContext } from '../components/layout';\nimport { Container, Row, Col, FormControl, Button } from \"react-bootstrap\";\nimport ProjectController from '../controllers/projectController';\nimport UserController, { LoginIntent } from \"../controllers/userController\";\nimport { debounce } from 'throttle-debounce';\nimport { FaArrowUp } from \"react-icons/fa\";\nimport '../styles/projects.scss';\n\nconst DEBOUNCE_MS = 200;\nconst PROJECTS_PER_FETCH = 9;\nconst SCROLL_TO_TOP_SHOW_UNDER = 260;\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projects: [],\n      displayedProjects: [],\n      search: '',\n      finishedLoading: false\n    };\n\n    this.retrieveProjects = debounce(\n      DEBOUNCE_MS,\n      this.retrieveProjects.bind(this)\n    );\n    this.updateSearch = this.updateSearch.bind(this);\n    this.renderHeader = this.renderHeader.bind(this);\n    this.renderProjects = this.renderProjects.bind(this);\n    this.renderCreateButton = this.renderCreateButton.bind(this);\n    this.fetchMoreProjects = this.fetchMoreProjects.bind(this);\n  }\n\n  async componentDidMount() {\n    this.retrieveProjects();\n  }\n\n  async retrieveProjects(search) {\n    this.setState({ finishedLoading: false });\n\n    try {\n      const projects = search\n        ? await ProjectController.getFilteredProjects(search)\n        : await ProjectController.getProjects();\n\n      this.setState({\n        projects,\n        displayedProjects: projects.slice(0, PROJECTS_PER_FETCH)\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    this.setState({ finishedLoading: true });\n  }\n\n  updateSearch(search) {\n    this.setState({ search });\n  }\n\n  fetchMoreProjects() {\n    const { projects, displayedProjects } = this.state;\n    const fetchedProjects = projects.slice(\n      displayedProjects.length,\n      displayedProjects.length + PROJECTS_PER_FETCH\n    );\n\n    this.setState({\n      displayedProjects: displayedProjects.concat(fetchedProjects)\n    });\n  }\n\n  renderCreateButton() {\n    return (\n      <Button\n        onClick={() => {\n          if (UserController.isLoggedIn()) {\n            window.history.pushState({}, '', '/#/projects/create');\n            window.location.reload();\n          } else {\n            const { showLoginModal } = this.props;\n            showLoginModal(LoginIntent.CREATE_PROJECT);\n          }\n        }}\n        className=\"add-project-btn\"\n        variant=\"outline-light\"\n        title=\"Create a project\"\n      >\n        +\n      </Button>\n    );\n  }\n\n  renderHeader() {\n    const { search } = this.state;\n\n    return (\n      <>\n        <h1>\n          <span>💡</span> Projects\n            {this.renderCreateButton()}\n        </h1>\n        <p>\n          Discover projects and find one to join, or create your own!\n        </p>\n        <FormControl\n          placeholder=\"Search by title, technologies, etc...\"\n          className=\"search\"\n          value={search}\n          type=\"text\"\n          size=\"lg\"\n          onChange={async (event) => {\n            const search = event.target.value;\n            this.updateSearch(search);\n            await this.retrieveProjects(search);\n          }}\n        />\n      </>);\n  }\n\n  renderProjects() {\n    const { projects, finishedLoading, displayedProjects } = this.state;\n    const hasMore = projects.length > displayedProjects.length;\n\n    if (!finishedLoading) {\n      return <Loading />\n    }\n\n    if (projects.length === 0) {\n      return <h4>No projects match the search.</h4>;\n    }\n\n    return (\n      <InfiniteScroll\n        dataLength={displayedProjects.length}\n        next={this.fetchMoreProjects}\n        hasMore={hasMore}\n        loader={<span className=\"infinite-load-text\">Loading...</span>}\n      >\n        <Row>\n          {displayedProjects.map(p => (\n            <Col sm=\"4\" key={p.id}>\n              <ProjectCard project={p} />\n            </Col>\n          ))}\n        </Row>\n      </InfiniteScroll>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Helmet>\n          <title>Projects</title>\n        </Helmet>\n        <Container fluid>\n          {this.renderHeader()}\n          {this.renderProjects()}\n        </Container>\n        <ScrollToTop showUnder={SCROLL_TO_TOP_SHOW_UNDER}>\n          <h2><FaArrowUp title=\"Scroll to top\" /></h2>\n        </ScrollToTop>\n      </>\n    );\n  }\n}\n\nexport default withContext(withRouter(Projects), 'projects-page');","import React from 'react';\nimport '../../styles/profile.scss';\nimport Button from 'react-bootstrap/Button';\nimport UserController from '../../controllers/userController';\n\nexport default function JoinProjectButton({ project, onClick }) {\n  if (!UserController.isLoggedIn()) {\n    return null;\n  }\n\n  const profileId = UserController.getToken().sub;\n  const isOwner = profileId === project.ownerId;\n  const isMember = \n    project.members.nodes.some(m => m.id === profileId);\n\n  if (isOwner || isMember) {\n    return null;\n  }\n\n  const isPendingMember =\n    project.pendingMembers.nodes.some(m => m.id === profileId);\n  \n  if (isPendingMember) {\n    return (\n      <Button variant=\"dark\" size=\"sm\" disabled>\n        Awaiting request response\n      </Button>\n    );\n  }\n\n  return (\n    <Button variant=\"dark\" size=\"sm\" onClick={onClick}>\n      {project.selfJoinable ? 'Join Project' : 'Request to Join'}\n    </Button>\n  );\n}","import React from \"react\";\nimport { Button } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\n\nimport \"../../styles/auth.scss\";\n\nexport default function ConfirmationModal(props) {\n  const { show, message, onClose, onConfirm } = props;\n\n  return (\n    <Modal\n      show={show}\n      onHide={onClose}\n      size=\"md\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Confirm\n          </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {message}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"dark\" onClick={onClose}>Close</Button>\n        <Button\n          variant=\"dark\"\n          onClick={onConfirm}\n        >\n          Confirm\n          </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}","import React from 'react';\nimport ConfirmationModal from './modals/confirmationModal';\n\nexport default class ConfirmationWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showConfirmationModal: false,\n    };\n\n    this.confirm = this.confirm.bind(this);\n  }\n\n  confirm() {\n    this.setState({ showConfirmationModal: false });\n    this.props.onConfirm();\n  }\n\n  render() {\n    const { message } = this.props;\n    const { showConfirmationModal } = this.state;\n\n    const children = React.Children.map(\n      this.props.children,\n      child => React.cloneElement(\n        child, {\n          onClick: () => this.setState({ showConfirmationModal: true })\n        })\n    );\n\n    return (\n      <>\n        <ConfirmationModal\n          show={showConfirmationModal}\n          message={message}\n          onClose={() => this.setState({ showConfirmationModal: false })}\n          onConfirm={this.confirm}\n        />\n        {children}\n      </>\n    );\n  }\n}","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport JoinProjectButton from '../../components/project/joinProjectButton';\nimport \"../../styles/project.scss\";\nimport { FaEdit, FaTrashAlt, FaCheck, FaTimes } from 'react-icons/fa';\nimport UserController from '../../controllers/userController';\nimport ConfirmationWrapper from '../confirmationWrapper';\nimport { ProjectTab } from '../../pages/project';\n\nconst DELETE_CONFIRMATION_MESSAGE = 'Are you sure you want to delete this project?';\nconst LEAVE_CONFIRMATION_MESSAGE = 'Are you sure you want to leave the project?';\n\nexport default class ProjectHeader extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderNav(project) {\n    const { onTabChange, tab } = this.props;\n\n    const isOwnProject = UserController.isLoggedIn()\n      && UserController.getToken().sub === project.ownerId;\n\n    if (!isOwnProject) {\n      return null;\n    }\n\n    return (\n      <>\n        <Nav fill variant=\"pills\" activeKey={tab}>\n          <Nav.Item className=\"overview-tab\" onClick={() => onTabChange(ProjectTab.OVERVIEW)}>\n            <Nav.Link eventKey=\"overview\">Overview</Nav.Link>\n          </Nav.Item>\n          <Nav.Item className=\"manage-members\" onClick={() => onTabChange(ProjectTab.MANAGE)}>\n            <Nav.Link eventKey=\"manage\">Manage Members</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <hr />\n      </>\n    );\n  }\n\n  render() {\n    const {\n      tab,\n      project,\n      isEditable,\n      isEditValid,\n      onJoin,\n      onLeave,\n      onInvite,\n      onToggleEditable,\n      onSave,\n      onDelete\n    } = this.props;\n\n    const isOwnProject = UserController.isLoggedIn()\n      && UserController.getToken().sub === project.owner.id;\n\n    const isMember = UserController.isLoggedIn()\n      && !isOwnProject\n      && project.members.nodes.some(\n        m => m.id === UserController.getToken().sub\n      );\n\n    return (\n      <Card.Header className=\"project-header\">\n        {this.renderNav(project)}\n        <h2><b>\n          {project.name}\n          {isOwnProject && tab === ProjectTab.OVERVIEW && (\n            <>\n              {isEditable &&\n                <>\n                  {isEditValid && <FaCheck title=\"Save Changes\" onClick={onSave} />}\n                  <FaTimes title=\"Revert Changes\" onClick={onToggleEditable} />\n                </>\n              }\n              {!isEditable &&\n                <>\n                  <FaEdit className=\"edit-toggle\" title=\"Edit Project\" onClick={onToggleEditable} />\n                  <ConfirmationWrapper\n                    message={DELETE_CONFIRMATION_MESSAGE}\n                    onConfirm={onDelete}\n                    >\n                    <FaTrashAlt className=\"trash-toggle\" title=\"Delete Project\" />\n                  </ConfirmationWrapper>\n                </>\n              }\n            </>\n          )}\n        </b></h2>\n\n        {isOwnProject && tab === ProjectTab.MANAGE && (\n          <Button onClick={onInvite} size=\"sm\" variant=\"dark\">Invite Member</Button>\n        )}\n\n        <JoinProjectButton project={project} onClick={onJoin} />\n        {isMember &&\n          <>\n            <ConfirmationWrapper\n              message={LEAVE_CONFIRMATION_MESSAGE}\n              onConfirm={onLeave}\n            >\n              <Button variant=\"dark\"\n                size=\"sm\"\n                className=\"leave-project-button\">\n                Leave Project\n              </Button>\n            </ConfirmationWrapper>\n          </>\n        }\n      </Card.Header>\n    );\n  }\n}","import gql from 'graphql-tag';\nimport { client } from './graphqlClient';\n\nconst ACCEPT_MUTATION = gql`\n  mutation ($profileId: Int!, $projectId: Int!) {\n    updateRequestByProfileIdAndProjectId(input: {\n      requestPatch: {\n        status: \"accepted\"\n      }, \n      profileId: $profileId\n      projectId: $projectId\n    }) { clientMutationId }\n    \n    createMembership(input: {\n      membership: {\n        profileId: $profileId\n        projectId: $projectId\n      }\n    }) { clientMutationId }\n  }\n`;\n\nconst DECLINE_MUTATION = gql`\n  mutation ($requestId: Int!) {\n    updateRequestById(input: {\n      requestPatch: {\n        status: \"declined\"\n      }, id: $requestId\n    }) { clientMutationId }\n  }\n`;\n\nconst CREATE_MEMBERSHIP_MUTATION = gql`\n  mutation($profileId: Int!, $projectId: Int!) {\n    createMembership (\n      input: {\n        membership: {\n          profileId: $profileId\n          projectId: $projectId\n        }\n      }\n    ) { clientMutationId }\n  }\n`;\n\nconst DELETE_MEMBERSHIP_MUTATION = gql`\n  mutation ($profileId: Int!, $projectId: Int!) {\n    deleteMembershipByProfileIdAndProjectId(\n      input: {profileId: $profileId, projectId: $projectId}\n    ) { clientMutationId }\n  }\n`;\n\nconst CREATE_INVITE_MUTATION = gql`\n  mutation($profileId: Int!, $projectId: Int!) {\n    createRequest (\n      input: {\n        request: {\n          profileId: $profileId\n          projectId: $projectId\n          type: \"invite\"\n        }\n      }\n    ) { clientMutationId }\n  }\n`;\n\nconst CREATE_REQUEST_MUTATION = gql`\n  mutation($profileId: Int!, $projectId: Int!) {\n    createRequest (\n      input: {\n        request: {\n          profileId: $profileId\n          projectId: $projectId\n          type: \"request\"\n        }\n      }\n    ) { clientMutationId }\n  }\n`;\n\nasync function accept(profileId, projectId) {\n  try {\n    await client.mutate({\n      mutation: ACCEPT_MUTATION,\n      variables: { profileId, projectId }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function decline(requestId) {\n  try {\n    await client.mutate({\n      mutation: DECLINE_MUTATION,\n      variables: { requestId }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function requestToJoinProject(profileId, projectId) {\n  try {\n    await client.mutate({\n      mutation: CREATE_REQUEST_MUTATION,\n      variables: { profileId, projectId }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function joinProject(profileId, projectId) {\n  try {\n    await client.mutate({\n      mutation: CREATE_MEMBERSHIP_MUTATION,\n      variables: { profileId, projectId }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function leaveProject(profileId, projectId) {\n  try {\n    await client.mutate({\n      mutation: DELETE_MEMBERSHIP_MUTATION,\n      variables: { profileId, projectId }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function inviteToProject(profileId, projectId) {\n  try {\n    await client.mutate({\n      mutation: CREATE_INVITE_MUTATION,\n      variables: { profileId, projectId }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default {\n  accept,\n  decline,\n  requestToJoinProject,\n  joinProject,\n  leaveProject,\n  inviteToProject\n};","import React from 'react';\nimport Select from 'react-select';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport '../../styles/modal.scss';\nimport UserController from '../../controllers/userController';\nimport ProfileController from '../../controllers/profileController';\n\nexport default class InviteToProjectModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      profileOptions: [],\n      selectedProfile: null\n    }\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  async componentDidMount() {\n    if (!UserController.isLoggedIn()) {\n      return;\n    }\n\n    const profiles = await ProfileController.getProfiles();\n    const username = UserController.getToken().username;\n\n    this.setState({\n      profileOptions: profiles\n        .filter(p => p.username !== username)\n        .map(this.convertToOption)\n    });\n  }\n\n  convertToOption(profile) {\n    return { label: profile.username, value: profile.id };\n  }\n\n  onChange(selectedProfile) {\n    this.setState({ selectedProfile });\n  }\n\n  render() {\n    const { show, onClose, onConfirm } = this.props;\n    const { profileOptions, selectedProfile } = this.state;\n    const isConfirmDisabled = selectedProfile === null;\n\n    return (\n      <Modal show={show} animation={false} onHide={onClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Invite Member</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          Send an invitation to the following user:\n          <Select className=\"modal-select\"\n            variant=\"dark\"\n            options={profileOptions}\n            value={selectedProfile}\n            onChange={this.onChange}\n          />\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"dark\" onClick={onClose}>Close</Button>\n          <Button\n            variant=\"dark\" \n            disabled={isConfirmDisabled}\n            onClick={() => onConfirm(selectedProfile.value)}\n          >\n            Confirm\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}","import gql from 'graphql-tag';\nimport { client } from './graphqlClient';\n\n// Cache of skills and interests\nlet SKILLS = null;\nlet INTERESTS = null;\n\nconst GET_SKILLS_QUERY = gql`\n  query {\n    allTags(\n      orderBy: NAME_ASC\n      condition: { type: \"skill\" }\n    ) {\n      nodes {\n        name\n      }\n    }\n  }\n`;\n\nconst GET_INTERESTS_QUERY = gql`\n  query {\n    allTags(\n      orderBy: NAME_ASC\n      condition: { type: \"interest\" }\n    ) {\n      nodes {\n        name\n      }\n    }\n  }\n`;\n\nasync function getSkills() {\n  if (SKILLS) {\n    return SKILLS;\n  }\n\n  try {\n    const res = await client.query({\n      query: GET_SKILLS_QUERY\n    });\n    SKILLS = res.data.allTags.nodes.map(t => t.name);\n    return SKILLS;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getInterests() {\n  if (INTERESTS) {\n    return INTERESTS;\n  }\n\n  try {\n    const res = await client.query({\n      query: GET_INTERESTS_QUERY\n    });\n    INTERESTS = res.data.allTags.nodes.map(t => t.name);\n    return INTERESTS;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default {\n  getSkills,\n  getInterests\n};","import React from 'react';\nimport Select from 'react-select';\nimport TagController from '../controllers/tagController';\n\nfunction formTheme(theme) {\n  return {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primary25: 'gray',\n      primary: '#64485C',\n      backgroundColor: 'transparent',\n    },\n  };\n}\n\nexport default class TagSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: []\n    }\n  }\n\n  async componentDidMount() {\n    const { type } = this.props;\n\n    try {\n      const tags = type === 'interests'\n        ? await TagController.getInterests()\n        : await TagController.getSkills();\n\n      this.setState({\n        options: this.convertToOptions(tags)\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  convertToOptions(items) {\n    if (!items) {\n      return [];\n    }\n\n    return items.map(item => ({\n      label: item,\n      value: item\n    }));\n  }\n\n  render() {\n    const { options } = this.state;\n    const { value, onChange } = this.props;\n\n    return (\n      <Select\n        theme={formTheme}\n        options={options}\n        value={this.convertToOptions(value)}\n        onChange={items =>\n          onChange(items ? items.map(i => i.value) : [])\n        }\n        isMulti\n      />\n    );\n  }\n}","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport Col from 'react-bootstrap/Col';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport TagSelect from \"../TagSelect\";\nimport Select from 'react-select';\n\nconst NAME_MAX_LENGTH = 80;\n\nconst STATUS_OPTIONS =\n  ['Planning Phase', 'Design Phase', 'Development Phase', 'Testing Phase', 'Deployment Phase', 'Looking for Open Source Contributions']\n    .map(status => ({ value: status, label: status }));\n\nconst AUTO_CHAT_INDICATOR = '_';\nconst ChatType = {\n  CUSTOM: 'custom',\n  AUTO: 'auto'\n};\n\nexport default class EditableProject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.convertToOption = this.convertToOption.bind(this);\n    this.getChatType = this.getChatType.bind(this);\n    this.changeChatType = this.changeChatType.bind(this);\n    this.renderChatChannelInput = this.renderChatChannelInput.bind(this);\n  }\n\n  onChange(field, value) {\n    this.props.onProjectFieldEdit(field, value);\n  }\n\n  convertToOption(item) {\n    return {\n      label: item,\n      value: item\n    };\n  }\n\n  getChatType() {\n    const { discordUrl } = this.props.project;\n    if (discordUrl === AUTO_CHAT_INDICATOR) {\n      return ChatType.AUTO;\n    }\n    return ChatType.CUSTOM;\n  }\n\n  changeChatType(type) {\n    this.props.onProjectFieldEdit(\n      'discordUrl',\n      type === ChatType.AUTO ? AUTO_CHAT_INDICATOR : ''\n    );\n  }\n\n  renderChatChannelInput() {\n    const { project, isCreateView } = this.props;\n\n    if (!isCreateView) {\n      return (\n        <Form.Control\n          placeholder=\"Link to a chat channel like Discord (will only be shown to project members)\"\n          value={project.discordUrl}\n          onChange={event => this.onChange('discordUrl', event.target.value)}\n        />\n      );\n    }\n\n    return (\n      <>\n        <Form.Row>\n          <ToggleButtonGroup\n            type=\"radio\"\n            name=\"chatTypeToggle\"\n            value={this.getChatType()}\n            className=\"chat-type-toggle\"\n            onChange={this.changeChatType}\n          >\n            <ToggleButton\n              value={ChatType.AUTO}\n              size=\"sm\"\n              variant=\"light\"\n            >\n              Create a public Discord for me\n          </ToggleButton>\n            <ToggleButton\n              value={ChatType.CUSTOM}\n              size=\"sm\"\n              variant=\"light\"\n            >\n              I'll provide my own URL\n          </ToggleButton>\n          </ToggleButtonGroup>\n        </Form.Row>\n        <Form.Control\n          placeholder=\"Link to a chat channel like Discord (will only be shown to project members)\"\n          value={\n            project.discordUrl === AUTO_CHAT_INDICATOR\n              ? 'Will be created automatically'\n              : project.discordUrl\n          }\n          onChange={event => this.onChange('discordUrl', event.target.value)}\n          disabled={this.getChatType() === ChatType.AUTO}\n        />\n      </>\n    );\n  }\n\n  render() {\n    const { project } = this.props;\n\n    return (\n      <Form>\n        <h4><span>📋</span> Name <small>(required)</small></h4>\n        <Form.Control\n          value={project.name}\n          placeholder=\"A short title\"\n          onChange={event => this.onChange('name', event.target.value)}\n          maxLength={NAME_MAX_LENGTH}\n        />\n        <hr />\n        <h4><span>ℹ️</span> Description</h4>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"5\"\n          value={project.description || ''}\n          placeholder={'The project description is shown publicly to'\n            + ' users who are interested in your project'\n            + ' (Markdown is supported).'}\n          onChange={event => this.onChange('description', event.target.value)}\n        />\n        <hr />\n        <h4><span>💻</span> Directions</h4>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"5\"\n          value={project.directions || ''}\n          placeholder={'Directions are shown only to project members,'\n            + ' and should include information like onboarding directions,'\n            + ' GitHub repositories, etc (Markdown is supported).'}\n          onChange={event => this.onChange('directions', event.target.value)}\n        />\n        <hr />\n\n        <h4><span>💬</span> Chat Channel</h4>\n        {this.renderChatChannelInput()}\n        <hr />\n\n        <h4><span>🧰</span> Skills</h4>\n        <TagSelect\n          type=\"skills\"\n          value={project.languages}\n          onChange={languages => this.onChange('languages', languages)}\n        />\n        <hr />\n        <h4><span>🧪</span> Interest Areas</h4>\n        <TagSelect\n          type=\"interests\"\n          value={project.interests}\n          onChange={interests => this.onChange('interests', interests)}\n        />\n        <hr />\n        <h4><span>👩‍🔬</span> Joinable By Others?</h4>\n        <Form.Control\n          as=\"select\"\n          onChange={event => this.onChange('selfJoinable', event.target.value === 'true')}\n          value={project.selfJoinable}\n        >\n          <option value={true}>Yes! Anyone can join on their own.</option>\n          <option value={false}>No, people need to ask before joining.</option>\n        </Form.Control>\n        <hr />\n        <h4><span>⏰</span> Project Status</h4>\n        <Select\n          type=\"status\"\n          options={STATUS_OPTIONS}\n          value={this.convertToOption(project.status)}\n          onChange={status => this.onChange('status', status.value)}\n        />\n        <hr />\n        <h4><span>👀</span> Hidden from others?</h4>\n        <Form.Control\n          as=\"select\"\n          onChange={event => this.onChange('type', event.target.value)}\n          value={project.type}\n        >\n          <option value=\"public\">No! The project will be visible to all!</option>\n          <option value=\"private\">Yes, only team members can see the project.</option>\n        </Form.Control>\n      </Form>\n    );\n  }\n}\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\nimport ReactMarkdown from 'react-markdown';\nimport UserController from '../../controllers/userController';\nimport '../../styles/markdown.scss';\n\nconst DEFAULT_DESCRIPTION = 'This project currently has no description.';\nconst DEFAULT_DIRECTIONS = 'This project currently has no directions.';\nconst DEFAULT_CHAT_CHANNEL = 'This project currently has no chat channel.'\n\nexport default function ReadOnlyProject({ project }) {\n  const membersCount = project.members.totalCount + 1;\n\n  const isMember = UserController.isLoggedIn()\n    && project.members.nodes.some(\n      m => m.id === UserController.getToken().sub\n    );\n\n  const isOwner = UserController.isLoggedIn()\n    && project.ownerId === UserController.getToken().sub;\n\n  return (\n    <>\n      <h4 className=\"project-description\"><span>ℹ️</span> Description</h4>\n      <ReactMarkdown\n        className=\"markdown\"\n        source={project.description || DEFAULT_DESCRIPTION}\n      />\n      <hr />\n      {(isOwner || isMember) &&\n        <>\n          <h4 className=\"project-directions\"><span>💻</span> Directions</h4>\n          <ReactMarkdown\n            className=\"markdown\"\n            source={project.directions || DEFAULT_DIRECTIONS}\n          />\n          <hr />\n          <h4 className=\"project-chat-channel\"><span>💬</span> Chat Channel</h4>\n          <div className=\"project-chat-channel-url\">\n            {project.discordUrl\n              ? (\n                <a href={project.discordUrl} target=\"_blank\">\n                  {project.discordUrl}\n                </a>\n              )\n              : DEFAULT_CHAT_CHANNEL\n            }\n          </div>\n          <hr />\n        </>\n      }\n      <h4 className=\"project-members\"><span>👩‍👩‍👧‍👦</span> Members ({membersCount})</h4>\n      <div className=\"project-members-badges\">\n        <Badge pill variant=\"success\">\n          <a href={`/#/profile/${project.owner.username}`}>\n            {project.owner.username} (owner)\n            </a>\n        </Badge>\n        {project.members.nodes.map(member => (\n          <Badge pill key={member.username} variant=\"dark\">\n            <a href={`/#/profile/${member.username}`}>\n              {member.username}\n            </a>\n          </Badge>\n        ))}\n      </div>\n      <hr />\n      <h4 className=\"project-skills\"><span>🧰</span> Skills</h4>\n      <div className=\"project-skills-badges\">\n        {project.languages.map(lang => (\n          <Badge pill key={lang} variant=\"dark\">\n            {lang}\n          </Badge>\n        ))}\n      </div>\n      <hr />\n      <h4 className=\"project-interests\"><span>🧪</span> Interest Areas</h4>\n      <div className=\"project-interests-badges\">\n        {project.interests.map(interest => (\n          <Badge pill key={interest} variant=\"dark\">\n            {interest}\n          </Badge>\n        ))}\n      </div>\n      <hr />\n      <h4 className=\"project-status\"><span>⏰</span> Project Status</h4>\n      <Card.Text>\n        {project.status}\n      </Card.Text>\n    </>\n  );\n}","import React from 'react';\nimport EditableProject from './editableProject';\nimport ReadOnlyProject from './readOnlyProject';\n\nexport default class ProjectOverview extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      project,\n      editableProject,\n      isEditable,\n      onProjectFieldEdit\n    } = this.props;\n\n    return (\n      <>\n        {isEditable\n          ? <EditableProject\n            onProjectFieldEdit={onProjectFieldEdit}\n            project={editableProject}\n          />\n          : <ReadOnlyProject project={project} />\n        }\n      </>\n    );\n  }\n}","import React from 'react';\nimport Joyride from 'react-joyride';\n\nconst STEPS = [\n  {\n    target: '.project-header',\n    content: 'You just created your first project! Let\\'\\s '\n    + 'go through a quick walkthrough.',\n    disableBeacon: true,\n    placement: 'bottom'\n  },\n  {\n    target: '.edit-toggle',\n    content: 'You can click this button to edit your project.'\n    + ' Frequently edit your project to keep other users updated!',\n    disableBeacon: true,\n    placement: 'bottom'\n  },\n  {\n    target: '.trash-toggle',\n    content: 'You can click this button to delete your project. Be warned,'\n    + ' you cannot retrieve deleted projects!',\n    disableBeacon: true,\n    placement: 'right-start'\n  },\n  {\n    target: '.project-directions',\n    content: 'The directions section is very important. It is only shown to members of your project,'\n      + ' and should include links to communication channels (Discord/Slack/etc), guides, GitHub'\n      + ' repositories, and other resources. Without these resources, new members will be confused.',\n    disableBeacon: true,\n    placement: 'bottom'\n  },\n  {\n    target: '.manage-members',\n    content: 'This tab is where you can manage project members. You can'\n      + ' invite members, accept join requests, and kick members out if needed.',\n    disableBeacon: true,\n    placement: 'right-start'\n  },\n  {\n    target: '.project-container',\n    content: 'That\\'\\s it! You are all set to begin working on your project. Good luck 😀',\n    disableBeacon: true,\n    placement: 'center'\n  }\n];\n\nexport default function ProjectOwnerNux() {\n  return (\n    <Joyride\n      steps={STEPS}\n      continuous\n      hideBackButton\n      scrollToFirstStep\n      showProgress\n      styles={{\n        options: {\n          primaryColor: '#343a40'\n        },\n        tooltip: {\n          fontSize: '18px'\n        },\n        tooltipContent: {\n          padding: '30px 5px 0px 5px',\n        }\n      }}\n    />\n  );\n}","import React from 'react';\nimport Joyride from 'react-joyride';\n\nconst STEPS = [\n  {\n    target: '.project-header',\n    content: 'You just joined your first project! Let\\'\\s '\n    + 'go through a quick walkthrough.',\n    disableBeacon: true,\n    placement: 'bottom'\n  },\n  {\n    target: '.project-directions',\n    content: 'The owner will list links to communication channels (Discord/Slack/etc),'\n    + ' guides, and GitHub repositories here. This is'\n    + ' the most important section for new members like you.',\n    disableBeacon: true,\n    placement: 'bottom'\n  },\n  {\n    target: '.leave-project-button',\n    content: 'This button is here in case you want to leave a project. Hopefully you\\'\\ll never have to use it...',\n    disableBeacon: true,\n    placement: 'bottom'\n  },\n  {\n    target: '.project-container',\n    content: 'You are all set to begin working on the project! Good luck 😀',\n    disableBeacon: true,\n    placement: 'center'\n  }\n];\n\nexport default function ProjectMemberNux() {\n  return (\n    <Joyride\n      steps={STEPS}\n      continuous\n      hideBackButton\n      scrollToFirstStep\n      showProgress\n      styles={{\n        options: {\n          primaryColor: '#343a40'\n        },\n        tooltip: {\n          fontSize: '18px'\n        },\n        tooltipContent: {\n          padding: '30px 5px 0px 5px',\n        }\n      }}\n    />\n  );\n}","function hasShownProfileNux() {\n  return parseBool(localStorage.getItem('hasShownProfileNux'));\n}\n\nfunction hasShownOwnerProjectNux() {\n  return parseBool(localStorage.getItem('hasShownOwnerProjectNux'));\n}\n\nfunction hasShownMemberProjectNux() {\n  return parseBool(localStorage.getItem('hasShownMemberProjectNux'));\n}\n\nfunction setProfileNuxShown() {\n  localStorage.setItem('hasShownProfileNux', 'true');\n}\n\nfunction setOwnerProjectNuxShown() {\n  localStorage.setItem('hasShownOwnerProjectNux', 'true');\n}\n\nfunction setMemberProjectNuxShown() {\n  localStorage.setItem('hasShownMemberProjectNux', 'true');\n}\n\nfunction parseBool(bool) {\n  return bool === 'true' || false;\n}\n\nexport default {\n  hasShownProfileNux,\n  hasShownOwnerProjectNux,\n  hasShownMemberProjectNux,\n  setProfileNuxShown,\n  setOwnerProjectNuxShown,\n  setMemberProjectNuxShown\n};","\nimport React from 'react';\nimport RequestController from '../../controllers/requestController';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport ConfirmationWrapper from '../confirmationWrapper';\n\nconst KICK_CONFIRMATION_MESSAGE = 'Are you sure you want to kick this user from the project?';\n\nexport default class ManageProjectMembers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.accept = this.accept.bind(this);\n    this.decline = this.decline.bind(this);\n  }\n\n  async accept(profileId, projectId) {\n    try {\n      await RequestController.accept(profileId, projectId);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async decline(requestId) {\n    try {\n      await RequestController.decline(requestId);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async kick(profileId, projectId) {\n    try {\n      await RequestController.leaveProject(profileId, projectId);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  renderMembers() {\n    const { project } = this.props;\n    const members = project.members.nodes;\n\n    if (members.length === 0) {\n      return (\n        <>\n          <h4>Members</h4>\n          <span className=\"message\">\n            The project does not have any members.\n          </span>\n          <br />\n        </>\n      );\n    }\n\n    return (\n      <>\n        <h4>Members</h4>\n        <ListGroup>\n          {members.map(p => (\n            <ListGroup.Item key={p.requestId} className=\"request-list-item\">\n              <a href={`/#/profile/${p.username}`}>{p.username}</a>\n              <ButtonGroup className=\"request-actions\">\n                <ConfirmationWrapper\n                  message={KICK_CONFIRMATION_MESSAGE}\n                  onConfirm={() => this.kick(p.id, project.id)}\n                >\n                  <Button variant=\"danger\" size=\"sm\">\n                    Kick\n                  </Button>\n                </ConfirmationWrapper>\n              </ButtonGroup>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      </>\n    );\n  }\n\n  renderPendingMembers() {\n    const { project } = this.props;\n\n    if (project.selfJoinable) {\n      return null;\n    }\n\n    const pendingMembers = project.pendingMembers.nodes.filter(\n      p => p.requestStatus === 'pending' && p.requestType === 'request'\n    );\n\n    if (pendingMembers.length === 0) {\n      return (\n        <>\n          <hr />\n          <h4>Pending Members</h4>\n          <span className=\"message\">\n            Nobody is requesting to join the project.\n          </span>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <hr />\n        <h4>Pending Members</h4>\n        <ListGroup>\n          {pendingMembers.map(p => (\n            <ListGroup.Item key={p.requestId} className=\"request-list-item\">\n              <a href={`/#/profile/${p.username}`}>{p.username}</a>\n              <ButtonGroup className=\"request-actions\" size=\"sm\">\n                <Button\n                  variant=\"success\"\n                  onClick={() => this.accept(p.id, project.id)}\n                >\n                  Accept\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  onClick={() => this.decline(p.requestId)}\n                >\n                  Decline\n                </Button>\n              </ButtonGroup>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        {this.renderMembers()}\n        {this.renderPendingMembers()}\n      </>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\nimport { withContext } from '../components/layout';\nimport { Card } from 'react-bootstrap';\nimport ProjectHeader from \"../components/project/projectHeader\";\nimport ProjectController from \"../controllers/projectController\";\nimport RequestController from \"../controllers/requestController\";\nimport UserController from '../controllers/userController';\nimport WebController from '../controllers/webController';\nimport Loading from '../components/loading';\nimport InviteMemberModal from '../components/modals/inviteMemberModal';\nimport ProjectOverview from '../components/project/projectOverview';\nimport ProjectOwnerNux from '../components/project/projectOwnerNux';\nimport ProjectMemberNux from '../components/project/projectMemberNux';\nimport NuxController from '../controllers/nuxController';\nimport ManageProjectMembers from '../components/project/manageProjectMembers';\nimport '../styles/project.scss';\n\nexport const ProjectTab = {\n  OVERVIEW: 'overview',\n  MANAGE: 'manage'\n};\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tab: ProjectTab.OVERVIEW,\n      finishedLoading: false,\n      project: null,\n      editableProject: null,\n      isEditable: false,\n      showInviteModal: false,\n      runOwnerNux: false,\n      runMemberNux: false\n    };\n\n    this.joinProject = this.joinProject.bind(this);\n    this.leaveProject = this.leaveProject.bind(this);\n    this.toggleEditable = this.toggleEditable.bind(this);\n    this.onProjectFieldEdit = this.onProjectFieldEdit.bind(this);\n    this.saveProject = this.saveProject.bind(this);\n    this.deleteProject = this.deleteProject.bind(this);\n    this.inviteMember = this.inviteMember.bind(this);\n    this.changeTab = this.changeTab.bind(this);\n  }\n\n  async componentDidMount() {\n    const { match: { params } } = this.props;\n    const id = Number(params.id);\n\n    if (!id) {\n      this.setState({ finishedLoading: true });\n      return;\n    }\n\n    try {\n      const project = await ProjectController.getProject(id);\n      this.setState({\n        project,\n        editableProject: { ...project },\n        finishedLoading: true\n      });\n      this.triggerNux();\n      this.setTabFromURL();\n    } catch (error) {\n      this.setState({ finishedLoading: true });\n      console.log(error);\n    }\n  }\n\n  triggerNux() {\n    const { project, runOwnerNux, runMemberNux } = this.state;\n\n    if (!UserController.isLoggedIn() || !project) {\n      return;\n    }\n    if (runOwnerNux || runMemberNux) {\n      return;\n    }\n\n    const isProjectOwner = project.ownerId === UserController.getToken().sub;\n    const isProjectMember = project.members.nodes.map(m => m.username)\n      .includes(UserController.getToken().username);\n\n    if (!NuxController.hasShownOwnerProjectNux() && isProjectOwner) {\n      this.changeTab(ProjectTab.OVERVIEW);\n      NuxController.setOwnerProjectNuxShown();\n      this.setState({ runOwnerNux: true });\n    } else if (!NuxController.hasShownMemberProjectNux() && isProjectMember) {\n      this.changeTab(ProjectTab.OVERVIEW);\n      NuxController.setMemberProjectNuxShown();\n      this.setState({ runMemberNux: true });\n    }\n  }\n\n  componentDidUpdate() {\n    this.setTabFromURL();\n  }\n\n  setTabFromURL() {\n    const { project, tab } = this.state;\n    const isOwnProject = UserController.isLoggedIn()\n      && UserController.getToken().sub === project.ownerId;\n\n    if (!isOwnProject && tab !== ProjectTab.OVERVIEW) {\n      this.changeTab(ProjectTab.OVERVIEW);\n    }\n\n    const params = WebController.getQueryParams();\n    const nextTab = params.get('tab') || ProjectTab.OVERVIEW;\n\n    if (nextTab !== tab) {\n      this.changeTab(nextTab);\n    }\n  }\n\n  changeTab(tab) {\n    this.setState({ tab });\n\n    const params = WebController.getQueryParams();\n    params.set('tab', tab);\n\n    WebController.updateQueryParams(params);\n  }\n\n  toggleEditable() {\n    this.setState(prevState => ({\n      isEditable: !prevState.isEditable\n    }));\n  }\n\n  onProjectFieldEdit(field, value) {\n    const { editableProject } = this.state;\n    editableProject[field] = value;\n    this.setState({ editableProject });\n  }\n\n  async saveProject() {\n    const { editableProject } = this.state;\n    try {\n      await ProjectController.updateProject(editableProject);\n      this.setState({\n        project: { ...editableProject }\n      });\n      this.toggleEditable();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async deleteProject() {\n    const { project } = this.state;\n    try {\n      await ProjectController.deleteProject(project.id);\n      WebController.navigate('/#/projects');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async inviteMember(profileId) {\n    const { project } = this.state;\n    const { showAlert } = this.props;\n    this.setState({ showInviteModal: false });\n\n    try {\n      await RequestController.inviteToProject(profileId, project.id);\n      showAlert(\n        'You have invited the user to your project.',\n        'success'\n      );\n    } catch (error) {\n      showAlert('You have already invited this user.', 'warning');\n    }\n  }\n\n  async joinProject() {\n    const { project } = this.state;\n    const profileId = UserController.getToken().sub;\n    try {\n      if (project.selfJoinable) {\n        await RequestController.joinProject(\n          profileId,\n          project.id,\n        );\n      } else {\n        await RequestController.requestToJoinProject(\n          profileId,\n          project.id,\n        );\n      }\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async leaveProject() {\n    const { project } = this.state;\n    const profileId = UserController.getToken().sub;\n\n    try {\n      await RequestController.leaveProject(\n        profileId,\n        project.id\n      );\n      WebController.navigate(`/#/projects`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const {\n      tab,\n      project,\n      finishedLoading,\n      isEditable,\n      editableProject,\n      showInviteModal,\n      runOwnerNux,\n      runMemberNux\n    } = this.state;\n\n    if (!project) {\n      return (\n        <>\n          <Helmet>\n            <title>Project</title>\n          </Helmet>\n          {finishedLoading\n            ? <h5>Project not found.</h5>\n            : <Loading />\n          }\n        </>\n      );\n    }\n\n    const isEditValid = editableProject && editableProject.name.trim() !== '';\n\n    return (\n      <>\n        <Helmet>\n          <title>{project.name}</title>\n        </Helmet>\n        {runOwnerNux && <ProjectOwnerNux />}\n        {runMemberNux && <ProjectMemberNux />}\n        <InviteMemberModal\n          show={showInviteModal}\n          onConfirm={this.inviteMember}\n          onClose={() => this.setState({ showInviteModal: false })}\n        />\n        <Card className=\"project-container\" bg=\"secondary\" border=\"secondary\">\n          <ProjectHeader\n            project={project}\n            isEditable={isEditable}\n            isEditValid={isEditValid}\n            tab={tab}\n            onInvite={() => this.setState({ showInviteModal: true })}\n            onJoin={this.joinProject}\n            onLeave={this.leaveProject}\n            onSave={this.saveProject}\n            onDelete={this.deleteProject}\n            onToggleEditable={this.toggleEditable}\n            onTabChange={this.changeTab}\n          />\n\n          <Card.Body>\n            {tab === ProjectTab.OVERVIEW &&\n              <ProjectOverview\n                project={project}\n                editableProject={editableProject}\n                isEditable={isEditable}\n                onProjectFieldEdit={this.onProjectFieldEdit}\n              />\n            }\n            {tab === ProjectTab.MANAGE &&\n              <ManageProjectMembers project={project} />\n            }\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default withContext(withRouter(Project), 'project-page');","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\n\nexport const DEFAULT_BIO =\n  'Apparently, this user prefers to keep an air of mystery about them.';\n\nexport default function ReadOnlyProfile({ profile }) {\n  return (\n    <>\n      <h4><span>👩‍🔬</span> Bio</h4>\n      <Card.Text>\n        {profile.bio || DEFAULT_BIO}\n      </Card.Text>\n\n      <hr />\n      <h4><span>🧪</span> Interests</h4>\n      <div className=\"profile-badges\">\n        {profile.interests.map(interest => (\n          <Badge pill key={interest} variant=\"dark\">\n            {interest}\n          </Badge>\n        ))}\n      </div>\n      <hr />\n      <h4><span>🧰</span> Skills</h4>\n      <div className=\"profile-badges\">\n        {profile.languages.map(language => (\n          <Badge pill key={language} variant=\"dark\">\n            {language}\n          </Badge>\n        ))}\n      </div>\n    </>\n  );\n}","import React from \"react\";\nimport '../../styles/profile.scss';\nimport { Card } from \"react-bootstrap\";\nimport Image from 'react-bootstrap/Image';\nimport Badge from 'react-bootstrap/Badge';\nimport '../../styles/searchCard.scss';\nimport DEFAULT_PROFILE from '../../images/default-profile.png';\nimport { DEFAULT_BIO } from '../profile/readOnlyProfile';\n\nconst TAG_DISPLAY_COUNT = 5;\n\nexport default function ProfileCard({ profile }) {\n  const extraInterests =\n    profile.interests.length > TAG_DISPLAY_COUNT;\n  const extraSkills =\n    profile.languages.length > TAG_DISPLAY_COUNT;\n\n  return (\n    <Card className=\"search-card\" bg=\"secondary\">\n      <a href={`/#/profile/${profile.username}`} style={{ color: 'inherit', textDecoration: 'inherit' }}>\n        <Card.Body>\n          <Card.Header className=\"card-header\">\n            <span>\n              <Image\n                src={profile.pictureUrl || DEFAULT_PROFILE}\n                roundedCircle\n              />\n              {profile.username}\n            </span>\n          </Card.Header>\n          <Card.Text>\n            {profile.bio || DEFAULT_BIO}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Footer>\n          {profile.interests.length === 0\n            && profile.languages.length === 0 && (\n              <>No interests or skills listed</>\n            )}\n\n          {profile.interests.length > 0 && (\n            <>\n              <b>Interests: </b>\n              {profile.interests.slice(0, TAG_DISPLAY_COUNT)\n                .map(interest => (\n                  <Badge pill key={interest} variant=\"dark\">\n                    {interest}\n                  </Badge>\n                ))}\n              {extraInterests && <>&nbsp;...</>}\n              <br />\n            </>\n          )}\n\n          {profile.languages.length > 0 && (\n            <>\n              <b>Skills: </b>\n              {profile.languages.slice(0, TAG_DISPLAY_COUNT)\n                .map(language => (\n                  <Badge pill key={language} variant=\"dark\">\n                    {language}\n                  </Badge>\n                ))}\n              {extraSkills && <>&nbsp;...</>}\n            </>\n          )}\n        </Card.Footer>\n      </a>\n    </Card>\n  );\n}","import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Layout from \"../components/layout\";\nimport { Container, Row, Col, FormControl } from \"react-bootstrap\";\nimport ProfileController from '../controllers/profileController';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport ScrollToTop from 'react-scroll-up';\nimport \"../styles/profile.scss\";\nimport ProfileCard from \"../components/profile/profileCard\";\nimport Loading from '../components/loading';\nimport '../styles/people.scss';\nimport { FaArrowUp } from \"react-icons/fa\";\nimport { debounce } from 'throttle-debounce';\n\nconst DEBOUNCE_MS = 200;\nconst PROFILES_PER_FETCH = 9;\nconst SCROLL_TO_TOP_SHOW_UNDER = 260;\n\nexport default class People extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profiles: [],\n      displayedProfiles: [],\n      search: '',\n      finishedLoading: false,\n    };\n\n    this.retrieveProfiles = debounce(\n      DEBOUNCE_MS,\n      this.retrieveProfiles.bind(this)\n    );\n    this.updateSearch = this.updateSearch.bind(this);\n    this.fetchMoreProfiles = this.fetchMoreProfiles.bind(this);\n    this.renderHeader = this.renderHeader.bind(this);\n    this.renderProfiles = this.renderProfiles.bind(this);\n  }\n\n  async componentDidMount() {\n    this.retrieveProfiles();\n  }\n\n  async retrieveProfiles(search) {\n    this.setState({ finishedLoading: false });\n\n    try {\n      const profiles = search\n        ? await ProfileController.getFilteredProfiles(search)\n        : await ProfileController.getProfiles();\n\n      this.setState({\n        profiles,\n        displayedProfiles: profiles.slice(0, PROFILES_PER_FETCH)\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    this.setState({ finishedLoading: true });\n  }\n\n  updateSearch(search) {\n    this.setState({ search });\n  }\n\n  fetchMoreProfiles() {\n    const { profiles, displayedProfiles } = this.state;\n    const fetchedProfiles = profiles.slice(\n      displayedProfiles.length,\n      displayedProfiles.length + PROFILES_PER_FETCH\n    );\n\n    this.setState({\n      displayedProfiles: displayedProfiles.concat(fetchedProfiles)\n    });\n  }\n\n  renderHeader() {\n    const { search } = this.state;\n\n    return (\n      <>\n        <h1><span>👩‍🔬</span> People</h1>\n        <p>\n          Find team members for your next project!\n        </p>\n        <FormControl\n          type=\"text\"\n          size=\"lg\"\n          className=\"search\"\n          placeholder=\"Search by username, skills, etc...\"\n          value={search}\n          onChange={async (event) => {\n            const search = event.target.value;\n            this.updateSearch(search);\n            await this.retrieveProfiles(search);\n          }}\n        />\n      </>\n    );\n  }\n\n  renderProfiles() {\n    const { profiles, displayedProfiles, finishedLoading } = this.state;\n    const hasMore = profiles.length > displayedProfiles.length;\n\n    if (!finishedLoading) {\n      return <Loading />\n    }\n\n    if (profiles.length === 0) {\n      return <h4>No profiles match the search.</h4>;\n    }\n\n    return (\n      <InfiniteScroll\n        dataLength={displayedProfiles.length}\n        next={this.fetchMoreProfiles}\n        hasMore={hasMore}\n        loader={<span className=\"infinite-load-text\">Loading...</span>}\n      >\n        <Row>\n          {displayedProfiles.map(p => {\n            return (\n              <Col md=\"4\" key={p.id}>\n                <ProfileCard profile={p} />\n              </Col>\n            )\n          })}\n        </Row>\n    </InfiniteScroll>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Helmet>\n          <title>People</title>\n        </Helmet>\n        <Layout className=\"people-page\">\n          <Container fluid>\n            {this.renderHeader()}\n            {this.renderProfiles()}\n          </Container>\n          <ScrollToTop showUnder={SCROLL_TO_TOP_SHOW_UNDER}>\n            <h2><FaArrowUp title=\"Scroll to top\" /></h2>\n          </ScrollToTop>\n        </Layout>\n      </>\n    );\n  }\n}","import React from 'react';\nimport Figure from 'react-bootstrap/Figure';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { FaUserEdit, FaCheck, FaTimes, FaCamera } from 'react-icons/fa';\nimport UserController from '../../controllers/userController';\nimport { ProfileTab } from '../../pages/profile';\nimport DEFAULT_PROFILE from '../../images/default-profile.png';\nimport '../../styles/profile.scss';\n\nexport default class ProfileHeader extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderNav(profile) {\n    const { onTabChange, tab } = this.props;\n\n    const isOwnProfile = UserController.isLoggedIn()\n      && UserController.getToken().username === profile.username;\n\n    return (\n      <>\n        <Nav fill variant=\"pills\" activeKey={tab}>\n          <Nav.Item className=\"profile-overview-nav\" onClick={() => onTabChange(ProfileTab.OVERVIEW)}>\n            <Nav.Link eventKey=\"overview\">Overview</Nav.Link>\n          </Nav.Item>\n          <Nav.Item className=\"profile-projects-nav\" onClick={() => onTabChange(ProfileTab.PROJECTS)}>\n            <Nav.Link eventKey=\"projects\">Projects</Nav.Link>\n          </Nav.Item>\n          {isOwnProfile && (\n            <Nav.Item className=\"profile-inbox-nav\" onClick={() => onTabChange(ProfileTab.INBOX)}>\n              <Nav.Link eventKey=\"inbox\">Inbox</Nav.Link>\n            </Nav.Item>\n          )}\n        </Nav>\n        <hr />\n      </>\n    );\n  }\n\n  renderPicture(profile) {\n    const { isEditable, onUpdatePicture } = this.props;\n\n    return (\n      <Col lg={{ span: 3, offset: 3 }} xs={{ span: 6, offset: 3 }}>\n        <Figure>\n          <Figure.Image\n            src={profile.pictureUrl || DEFAULT_PROFILE}\n            roundedCircle\n          />\n          {isEditable &&\n            <Figure.Caption onClick={onUpdatePicture}>\n              <FaCamera /> Update picture\n            </Figure.Caption>\n          }\n        </Figure>\n      </Col>\n    );\n  }\n\n  renderHeaderRight(profile) {\n    const {\n      isEditable,\n      onToggleEditable,\n      onInvite,\n      onSaveProfile,\n      tab\n    } = this.props;\n\n    const isOwnProfile = UserController.isLoggedIn()\n      && UserController.getToken().username === profile.username;\n    const showEditOptions = tab === ProfileTab.OVERVIEW && isOwnProfile;\n\n    return (\n      <>\n        <h2 className=\"username-title\"><b>\n          {profile.username}\n          {showEditOptions && isEditable && (\n            <>\n              <FaCheck title=\"Save Changes\" onClick={onSaveProfile} />\n              <FaTimes title=\"Revert Changes\" onClick={onToggleEditable} />\n            </>\n          )}\n          {showEditOptions && !isEditable && (\n            <FaUserEdit className=\"edit-toggle\" title=\"Edit Profile\" onClick={onToggleEditable} />\n          )}\n        </b></h2>\n        {UserController.isLoggedIn() && !isOwnProfile &&\n          <Button size=\"sm\" variant=\"dark\" onClick={onInvite}>\n            Invite to Project\n          </Button>\n        }\n      </>\n    );\n  }\n\n  render() {\n    const { profile } = this.props;\n\n    return (\n      <Card.Header className=\"profile-header\">\n        {this.renderNav(profile)}\n        <Row>\n          {this.renderPicture(profile)}\n          <Col className=\"profile-header-right\" xs={{ span: false }}>\n            {this.renderHeaderRight(profile)}\n          </Col>\n        </Row>\n      </Card.Header>\n    );\n  }\n}","import React from \"react\";\nimport { Form, } from 'react-bootstrap';\nimport TagSelect from '../TagSelect';\n\nexport default class EditableProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.onChange = this.onChange.bind(this);\n    this.convertToOptions = this.convertToOptions.bind(this);\n  }\n\n  onChange(field, value) {\n    this.props.onProfileFieldEdit(field, value);\n  }\n\n  convertToOptions(items) {\n    return items.map(item => ({\n      label: item,\n      value: item\n    }));\n  }\n\n  render() {\n    const { profile } = this.props;\n\n    return (\n      <Form>\n        <h4><span>👩‍🔬</span> Bio</h4>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"3\"\n          value={profile.bio || ''}\n          onChange={event => this.onChange('bio', event.target.value)}\n        />\n        <hr />\n        <h4><span>🧪</span> Interests</h4>\n        <TagSelect\n          type=\"interests\"\n          value={profile.interests}\n          onChange={interests => this.onChange('interests', interests)}\n        />\n        <hr />\n        <h4><span>🧰</span> Skills</h4>\n        <TagSelect\n          type=\"skills\"\n          value={profile.languages}\n          onChange={languages => this.onChange('languages', languages)}\n        />\n      </Form>\n    );\n  }\n}","import React from 'react';\nimport EditableProfile from './editableProfile';\nimport ReadOnlyProfile from './readOnlyProfile';\n\nexport default class ProfileOverview extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      profile,\n      editableProfile,\n      isEditable,\n      onProfileFieldEdit\n    } = this.props;\n\n    return (\n      <>\n        {isEditable\n          ? <EditableProfile\n            onProfileFieldEdit={onProfileFieldEdit}\n            profile={editableProfile}\n          />\n          : <ReadOnlyProfile profile={profile} />\n        }\n      </>\n    );\n  }\n}","import React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport UserController from '../../controllers/userController';\nimport '../../styles/profile.scss';\n\nexport default class ProfileProjects extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getPersonalizedText(isOwnProfile) {\n    const { profile } = this.props;\n    if (isOwnProfile) {\n      return 'You have';\n    }\n    return `${profile.username} has`;\n  }\n\n  renderProjects(projects, actionText, isOwnProfile) {\n    return (\n      <>\n        {projects.length === 0 &&\n          <>\n            <span className=\"message\">\n              {this.getPersonalizedText(isOwnProfile)} not {actionText} any projects.\n          </span>\n            <br />\n          </>\n        }\n        <div className=\"profile-badges\">\n          {projects.map(p => (\n            <Badge pill key={p.id} variant=\"dark\">\n              <a href={`/#/project/${p.id}`}>{p.name}</a>\n            </Badge>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    const { profile } = this.props;\n    const ownedProjects = profile.ownedProjects.nodes;\n    const projects = profile.projects.nodes;\n\n    const isOwnProfile = UserController.isLoggedIn()\n      && UserController.getToken().username === profile.username;\n\n    return (\n      <div className=\"profile-projects\">\n        <h4>Owned Projects</h4>\n        {this.renderProjects(ownedProjects, 'created', isOwnProfile)}\n        <hr />\n        <h4>Joined Projects</h4>\n        {this.renderProjects(projects, 'joined', isOwnProfile)}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport RequestController from '../../controllers/requestController';\nimport UserController from '../../controllers/userController';\nimport WebController from '../../controllers/webController';\nimport '../../styles/profile.scss';\n\nconst PROJECT_STATUS = {\n  'pending': { color: 'dark' },\n  'accepted': { color: 'success' },\n  'declined': { color: 'danger' }\n};\n\nclass ProfileInbox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.accept = this.accept.bind(this);\n    this.decline = this.decline.bind(this);\n  }\n\n  async accept(projectId) {\n    const profileId = UserController.getToken().sub;\n    try {\n      await RequestController.accept(profileId, projectId);\n      WebController.navigate(`/#/project/${projectId}`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async decline(requestId) {\n    try {\n      await RequestController.decline(requestId);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  renderRequests(profile) {\n    const requestedProjects = profile.pendingProjects.nodes\n      .filter(p => p.requestType === 'request' && p.requestStatus === 'pending');\n\n    return (\n      <>\n        {requestedProjects.length === 0 &&\n          <>\n            <span className=\"message\">\n              You have not requested to join any projects.\n            </span>\n            <br />\n          </>\n        }\n        <div className=\"profile-badges\">\n          {requestedProjects.map(p => (\n            <Badge pill key={p.id} variant={PROJECT_STATUS[p.requestStatus].color}>\n              <a href={`/#/project/${p.id}`}>\n                {p.name}\n                &nbsp;({p.requestStatus})\n              </a>\n            </Badge>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  renderInvites(profile) {\n    const invitedProjects = profile.pendingProjects.nodes\n      .filter(p => p.requestType === 'invite' && p.requestStatus === 'pending');\n\n    return (\n      <>\n        {invitedProjects.length === 0 &&\n          <span className=\"message\">\n            You have not been invited to any projects.\n          </span>\n        }\n        <ListGroup>\n          {invitedProjects.map(p => (\n            <ListGroup.Item key={p.requestId} className=\"invite-list-item\">\n              <a href={`/#/project/${p.id}`}>{p.name}</a>\n              <ButtonGroup className=\"invite-actions\" size=\"sm\">\n                <Button\n                  variant=\"success\"\n                  onClick={() => this.accept(p.id)}\n                >\n                  Accept\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  onClick={() => this.decline(p.requestId)}\n                >\n                  Decline\n                </Button>\n              </ButtonGroup>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      </>\n    );\n  }\n\n  render() {\n    const { profile } = this.props;\n\n    return (\n      <div className=\"profile-inbox\">\n        <h4>Requests</h4>\n        {this.renderRequests(profile)}\n        <hr />\n        <h4>Invites</h4>\n        {this.renderInvites(profile)}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ProfileInbox);","import React from 'react';\nimport Joyride from 'react-joyride';\n\nconst STEPS = [\n  {\n    target: '.profile-page',\n    content: 'Welcome to your profile! Here you can create a bio for yourself'\n      + ' and list your interests and skills.',\n    disableBeacon: true,\n    placement: 'center'\n  },\n  {\n    target: '.edit-toggle',\n    content: 'You can click this button to edit your profile, including your picture! Filling out your'\n    + ' profile is crucial for connecting with exciting projects and members.',\n    disableBeacon: true,\n    placement: 'right-start'\n  },\n  {\n    target: '.profile-projects-nav',\n    content: 'The Projects tab lists all projects you are involved with, whether you\\'re a member'\n    + ' or owner of the project.',\n    disableBeacon: true\n  },\n  {\n    target: '.profile-inbox-nav',\n    content: 'The Inbox tab shows invitations you have received to join projects. It also shows'\n    + ' the status of requests you have made to join projects. Make sure to check here often!',\n    disableBeacon: true,\n    placement: 'right-start'\n  },\n  {\n    target: '.user-dropdown',\n    content: 'You can always come back to your profile by clicking here.',\n    disableBeacon: true,\n    placement: 'right-start'\n  },\n  {\n    target: '.header-projects-nav',\n    content: 'The next step is to search through projects and find one that excites you.'\n      + ' Or, create a project of your own. Welcome 😀',\n    disableBeacon: true\n  }\n];\n\nexport default function ProfileNux() {\n  return (\n    <Joyride\n      steps={STEPS}\n      continuous\n      hideBackButton\n      showProgress\n      scrollToFirstStep\n      styles={{\n        options: {\n          primaryColor: '#343a40'\n        },\n        tooltip: {\n          fontSize: '18px'\n        },\n        tooltipContent: {\n          padding: '30px 5px 0px 5px',\n        }\n      }}\n    />\n  );\n}","import React from 'react';\nimport Select from 'react-select';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport '../../styles/modal.scss';\nimport UserController from '../../controllers/userController';\nimport ProjectController from '../../controllers/projectController';\n\nexport default class InviteToProjectModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projectOptions: [],\n      selectedProject: null\n    }\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  async componentDidMount() {\n    if (!UserController.isLoggedIn()) {\n      return;\n    }\n    \n    const profileId = UserController.getToken().sub;\n    const projects = await ProjectController.getOwnedProjects(profileId);\n    this.setState({\n      projectOptions: projects.map(this.convertToOption)\n    });\n  }\n\n  convertToOption(project) {\n    return { label: project.name, value: project.id };\n  }\n\n  onChange(selectedProject) {\n    this.setState({ selectedProject });\n  }\n\n  render() {\n    const { show, onClose, onConfirm } = this.props;\n    const { projectOptions, selectedProject } = this.state;\n    const isConfirmDisabled = selectedProject === null;\n\n    return (\n      <Modal show={show} animation={false} onHide={onClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Invite to Project</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          Send an invitation for the following project:\n          <Select className=\"modal-select\"\n            variant=\"dark\"\n            options={projectOptions}\n            value={selectedProject}\n            onChange={this.onChange}\n          />\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"dark\" onClick={onClose}>Close</Button>\n          <Button\n            variant=\"dark\" \n            disabled={isConfirmDisabled}\n            onClick={() => onConfirm(selectedProject.value)}\n          >\n            Confirm\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}","import axios from 'axios';\n\nconst IMGUR_CLIENT_ID = '028daff1533a073';\nconst UPLOAD_ENDPOINT = 'https://api.imgur.com/3/image';\n\nasync function upload(imageBlob) {\n  const formData = new FormData();\n  formData.append('image', imageBlob, 'image');\n\n  const config = {\n    headers: {\n      'Authorization': `Client-ID ${IMGUR_CLIENT_ID}`\n    }\n  };\n\n  const res = await axios.post(UPLOAD_ENDPOINT, formData, config);\n  return res.data.data.link;\n}\n\nexport default {\n  upload\n};","import React from \"react\";\nimport { Button } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport ImageController from '../../controllers/imageController';\nimport AvatarEditor from 'react-avatar-editor';\nimport Dropzone from 'react-dropzone';\nimport DEFAULT_PROFILE from '../../images/default-profile.png';\nimport '../../styles/profilePictureModal.scss';\n\nexport default class ProfilePictureModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      image: null,\n      isLoading: false\n    };\n\n    this.setEditorRef = this.setEditorRef.bind(this);\n    this.selectImage = this.selectImage.bind(this);\n    this.upload = this.upload.bind(this);\n  }\n\n  setEditorRef(editor) {\n    this.editor = editor;\n  }\n\n  async upload() {\n    const { onConfirm } = this.props;\n    this.setState({ isLoading: true });\n    const editedImage = this.editor.getImage();\n\n    editedImage.toBlob(async (blob) => {\n      try {\n        const uploadURL = await ImageController.upload(blob);\n        onConfirm(uploadURL);\n      } catch (error) {\n        console.log(error);\n        onConfirm(null);\n      }\n\n      this.setState({\n        image: null,\n        isLoading: false\n      });\n    });\n  }\n\n  selectImage(image) {\n    this.setState({ image: image[0] });\n  }\n\n  render() {\n    const { image, isLoading } = this.state;\n    const { show, onClose } = this.props;\n    const confirmDisabled = image === null || isLoading;\n\n    return (\n      <Modal\n        className=\"profile-picture-modal\"\n        show={show}\n        onHide={onClose}\n        size=\"md\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Upload Profile Picture\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"info\">\n            Drag a new profile picture below:\n          </div>\n          <div className=\"dropzone\">\n            <Dropzone\n              onDrop={this.selectImage}\n              noKeyboard\n              noClick\n            >\n              {({ getRootProps, getInputProps }) => (\n                <div {...getRootProps()}>\n                  <AvatarEditor\n                    ref={this.setEditorRef}\n                    image={image || DEFAULT_PROFILE}\n                    border={4}\n                  />\n                  <input {...getInputProps()} />\n                </div>\n              )}\n            </Dropzone>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"dark\" onClick={onClose}>Close</Button>\n          <Button\n            variant=\"dark\"\n            onClick={() => this.upload(image)}\n            disabled={confirmDisabled}\n          >\n            {isLoading ? 'Loading...' : 'Confirm'}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\nimport { withContext } from '../components/layout';\nimport Card from 'react-bootstrap/Card';\nimport ProfileController from '../controllers/profileController';\nimport ProfileHeader from '../components/profile/profileHeader';\nimport ProfileOverview from '../components/profile/profileOverview';\nimport ProfileProjects from '../components/profile/profileProjects';\nimport ProfileInbox from '../components/profile/profileInbox';\nimport ProfileNux from '../components/profile/profileNux';\nimport Loading from '../components/loading';\nimport InviteToProjectModal from '../components/modals/inviteToProjectModal';\nimport ProfilePictureModal from '../components/modals/profilePictureModal';\nimport ProjectController from '../controllers/projectController';\nimport UserController from '../controllers/userController';\nimport WebController from '../controllers/webController';\nimport NuxController from '../controllers/nuxController';\nimport '../styles/profile.scss';\n\nexport const ProfileTab = {\n  OVERVIEW: 'overview',\n  PROJECTS: 'projects',\n  INBOX: 'inbox'\n};\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: null,\n      editableProfile: null,\n      isEditable: false,\n      tab: ProfileTab.OVERVIEW,\n      finishedLoading: false,\n      showInviteModal: false,\n      showPictureModal: false,\n      runNux: false\n    };\n\n    this.toggleEditable = this.toggleEditable.bind(this);\n    this.onProfileFieldEdit = this.onProfileFieldEdit.bind(this);\n    this.saveProfile = this.saveProfile.bind(this);\n    this.updatePicture = this.updatePicture.bind(this);\n    this.inviteToProject = this.inviteToProject.bind(this);\n    this.changeTab = this.changeTab.bind(this);\n    this.triggerNux = this.triggerNux.bind(this);\n  }\n\n  async componentDidMount() {    \n    const { match: { params } } = this.props;\n    const username = params.username;\n\n    if (!username) {\n      this.setState({ finishedLoading: true });\n      return;\n    }\n\n    try {\n      const profile = await ProfileController.getProfile(username);\n      this.setState({\n        profile,\n        editableProfile: { ...profile },\n        finishedLoading: true\n      });\n      this.triggerNux();\n    } catch (error) {\n      this.setState({ finishedLoading: true });\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate() {\n    this.setTabFromURL();\n  }\n\n  setTabFromURL() {\n    const { tab } = this.state;\n    const params = WebController.getQueryParams();\n    const nextTab = params.get('tab') || ProfileTab.OVERVIEW;\n\n    if (nextTab !== tab) {\n      this.changeTab(nextTab);\n    }\n  }\n\n  changeTab(tab) {\n    this.setState({ tab });\n\n    const params = WebController.getQueryParams();\n    params.set('tab', tab);\n    \n    WebController.updateQueryParams(params);\n  }\n\n  triggerNux() {\n    const { profile, runNux} = this.state;\n    if (!profile || runNux) {\n      return;\n    }\n\n    const isOwnProfile = UserController.isLoggedIn()\n      && UserController.getToken().username === profile.username;\n\n    if (isOwnProfile && !NuxController.hasShownProfileNux()) {\n      this.changeTab(ProfileTab.OVERVIEW);\n      NuxController.setProfileNuxShown();\n      this.setState({ runNux: true });\n    }\n  }\n\n  toggleEditable() {\n    this.setState(prevState => ({\n      isEditable: !prevState.isEditable\n    }));\n  }\n\n  onProfileFieldEdit(field, value) {\n    const { editableProfile } = this.state;\n    editableProfile[field] = value;\n    this.setState({ editableProfile });\n  }\n\n  async saveProfile() {\n    const { editableProfile } = this.state;\n    try {\n      await ProfileController.updateProfile(editableProfile);\n      this.setState({\n        profile: { ...editableProfile }\n      });\n      this.toggleEditable();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async updatePicture(pictureUrl) {\n    this.setState({ showPictureModal: false });\n\n    if (pictureUrl) {\n      const { editableProfile } = this.state;\n      editableProfile.pictureUrl = pictureUrl;\n      await this.saveProfile();\n    }\n  }\n\n  async inviteToProject(projectId) {\n    const { profile } = this.state;\n    const { showAlert } = this.props;\n    this.setState({ showInviteModal: false });\n\n    try {\n      await ProjectController.createInvite(profile.id, projectId);\n      showAlert(\n        'You have invited this user to your project.',\n        'success'\n      );\n    } catch (error) {\n      showAlert('You have already invited this user.', 'warning');\n    }\n  }\n\n  render() {\n    const {\n      profile,\n      editableProfile,\n      tab,\n      isEditable,\n      finishedLoading,\n      showInviteModal,\n      showPictureModal,\n      runNux\n    } = this.state;\n\n    if (!profile) {\n      return (\n        <>\n          <Helmet>\n            <title>Profile</title>\n          </Helmet>\n          {finishedLoading\n            ? <h5>Profile not found.</h5>\n            : <Loading />\n          }\n        </>\n      );\n    }\n\n    return (\n      <>\n        <Helmet>\n          <title>{profile.username}</title>\n        </Helmet>\n        {runNux && <ProfileNux />}\n        <InviteToProjectModal\n          show={showInviteModal}\n          onConfirm={this.inviteToProject}\n          onClose={() => this.setState({ showInviteModal: false })}\n        />\n        <ProfilePictureModal\n          show={showPictureModal}\n          onConfirm={this.updatePicture}\n          onClose={() => this.setState({ showPictureModal: false })}\n        />\n        <Card className=\"profile-container\" bg=\"secondary\" border=\"secondary\">\n          <ProfileHeader\n            profile={profile}\n            tab={tab}\n            isEditable={isEditable}\n            onSaveProfile={this.saveProfile}\n            onToggleEditable={this.toggleEditable}\n            onInvite={() => this.setState({ showInviteModal: true })}\n            onUpdatePicture={() => this.setState({ showPictureModal: true })}\n            onTabChange={this.changeTab}\n          />\n          <Card.Body>\n            {tab === ProfileTab.OVERVIEW &&\n              <ProfileOverview\n                profile={profile}\n                editableProfile={editableProfile}\n                isEditable={isEditable}\n                onProfileFieldEdit={this.onProfileFieldEdit}\n              />\n            }\n            {tab === ProfileTab.PROJECTS &&\n              <ProfileProjects profile={profile} />\n            }\n            {tab === ProfileTab.INBOX &&\n              <ProfileInbox profile={profile} />\n            }\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default withRouter(withContext(Profile, 'profile-page'));","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\nimport Layout from '../../components/layout';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport EditableProject from '../../components/project/editableProject';\nimport UserController from '../../controllers/userController';\nimport ProjectController from '../../controllers/projectController';\nimport WebController from '../../controllers/webController';\nimport '../../styles/project.scss';\nimport '../../styles/createProject.scss';\n\nclass CreateProject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      project: {\n        ownerId: null,\n        name: '',\n        description: '',\n        directions: '',\n        languages: [],\n        interests: [],\n        selfJoinable: true,\n        status: 'Planning Phase',\n        type: 'public',\n        discordUrl: '_'\n      }\n    }\n\n    this.onProjectFieldEdit = this.onProjectFieldEdit.bind(this);\n    this.createProject = this.createProject.bind(this);\n  }\n\n  async componentDidMount() {\n    if (!UserController.isLoggedIn()) {\n      WebController.navigate('/');\n    } else {\n      const id = UserController.getToken().sub;\n      const { project } = this.state;\n      project.ownerId = id;\n      this.setState({ project });\n    }\n  }\n\n  onProjectFieldEdit(field, value) {\n    const { project } = this.state;\n    project[field] = value;\n    this.setState({ project });\n  }\n\n  async createProject() {\n    const { project } = this.state;\n    try {\n      const projectId = await ProjectController.createProject(project);\n      WebController.navigate(`/#/project/${projectId}`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const { project } = this.state;\n    const isCreateDisabled = project.name.trim() === '';\n\n    return (\n      <Layout className={\"project-page create-project-page\"}>\n        <Helmet>\n          <title>Create a Project</title>\n        </Helmet>\n        <Row>\n          <Col>\n            <Card className=\"project-container\" bg=\"secondary\" border=\"secondary\">\n              <Card.Header>\n                <br />\n                <h2><span>💡</span> Create a Project</h2>\n              </Card.Header>\n              <Card.Body>\n                <EditableProject\n                  project={project}\n                  onProjectFieldEdit={this.onProjectFieldEdit}\n                  isCreateView\n                />\n                <hr />\n                <Button\n                  variant=\"dark\"\n                  size=\"lg\"\n                  onClick={this.createProject}\n                  block\n                  disabled={isCreateDisabled}\n                >\n                  Create\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Layout>\n    );\n  }\n}\n\nexport default withRouter(CreateProject);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Home from './pages/home';\nimport Projects from './pages/projects';\nimport Project from './pages/project';\nimport People from './pages/people';\nimport Profile from './pages/profile';\nimport CreateProject from './pages/projects/create';\n\nimport createHistory from 'history/createBrowserHistory';\nimport ReactGA from 'react-ga';\n\nfunction logAnalytics(location, action) {\n  ReactGA.pageview(location.pathname + location.hash);\n};\n\nReactGA.initialize('UA-80633604-4');\nlogAnalytics(window.location);\n\nconst history = createHistory();\nhistory.listen(logAnalytics);\n\nfunction App() {\n  return (\n    <HashRouter history={history}>\n      <Switch>\n        <Route path='/profile/:username'><Profile /></Route>\n        <Route path='/projects/create'><CreateProject /></Route>\n        <Route path='/projects'><Projects /></Route>\n        <Route path='/people'><People /></Route>\n        <Route path='/project/:id'><Project /></Route>\n        <Route exact path='/'><Home /></Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/default-profile.f540a12d.png\";"],"sourceRoot":""}